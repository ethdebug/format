"use strict";(self.webpackChunk_ethdebug_format_web=self.webpackChunk_ethdebug_format_web||[]).push([[3818],{44261:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=n(52322),a=n(45392);const r={sidebar_position:2},o="Goals",s={id:"goals",title:"Goals",description:"Create a universal format",source:"@site/docs/goals.mdx",sourceDirName:".",slug:"/goals",permalink:"/format/pr-preview/pr-144/docs/goals",draft:!1,unlisted:!1,editUrl:"https://github.com/ethdebug/format/tree/main/packages/web/docs/goals.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Project overview",permalink:"/format/pr-preview/pr-144/docs/overview"},next:{title:"Known challenges",permalink:"/format/pr-preview/pr-144/docs/known-challenges"}},l={},d=[{value:"Create a universal format",id:"create-a-universal-format",level:2},{value:"Enable real-life debugging",id:"enable-real-life-debugging",level:2},{value:"Optimize for adoption",id:"optimize-for-adoption",level:2},{value:"Reduce the cost to understand the blockchain",id:"reduce-the-cost-to-understand-the-blockchain",level:2}];function c(e){const t={h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"goals",children:"Goals"}),"\n",(0,i.jsx)(t.h2,{id:"create-a-universal-format",children:"Create a universal format"}),"\n",(0,i.jsx)(t.p,{children:"Smart contract languages have evolved independently, each with its own\ndebugging requirements. This fragmentation makes universal tooling challenging\nif not impossible."}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"ethdebug format"})," seeks to establish a common language for debug\ninformation across all smart contract languages. By defining comprehensive yet\nflexible schemas, ",(0,i.jsx)(t.strong,{children:"ethdebug format"})," aims to bridge the gap between\ndifferent compilers, languages, and tools while respecting the unique\ncharacteristics of each. The goal is to create a foundation that works equally\nwell for Solidity, Vyper, Fe, and any future smart contract language."]}),"\n",(0,i.jsx)(t.h2,{id:"enable-real-life-debugging",children:"Enable real-life debugging"}),"\n",(0,i.jsx)(t.p,{children:"The blockchain doesn't forget. Once deployed, contracts are immutable; their\nbehavior must be understood as-is. Production smart contracts manage billions\nin assets, yet debugging them in the wild remains a significant challenge."}),"\n",(0,i.jsx)(t.p,{children:"The format aims to make mainnet debugging not just possible, but practical\n\u2013 allowing developers to understand contract behavior without requiring\nspecial debug builds. This goal recognizes that the most critical debugging\nneeds occur not in development, but in production where contracts are already\ndeployed and immutable."}),"\n",(0,i.jsx)(t.h2,{id:"optimize-for-adoption",children:"Optimize for adoption"}),"\n",(0,i.jsx)(t.p,{children:"A debug format is only as valuable as its adoption. The path to widespread use\nrequires careful attention to the needs of implementers and users alike."}),"\n",(0,i.jsx)(t.p,{children:"To this end, this project prioritizes:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Clear, comprehensive documentation with practical examples"}),"\n",(0,i.jsx)(t.li,{children:"Reference implementations that demonstrate viability"}),"\n",(0,i.jsx)(t.li,{children:"Designs that respect existing compiler architectures"}),"\n",(0,i.jsx)(t.li,{children:"Low barriers to entry for tool creators"}),"\n",(0,i.jsx)(t.li,{children:"Emphasis on incremental adoption paths"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"reduce-the-cost-to-understand-the-blockchain",children:"Reduce the cost to understand the blockchain"}),"\n",(0,i.jsx)(t.p,{children:"Every deployed contract represents someone's original intent, but that intent\ngets buried under layers of optimization and compilation. Reading the\nblockchain shouldn't require manually working backwards through those layers."}),"\n",(0,i.jsx)(t.p,{children:"Understanding deployed smart contracts should not require specialized\nknowledge or difficult-to-use tools. This project seeks to lower both the\ntechnical and cognitive barriers to smart contract comprehension, making the\nblockchain more accessible to developers, auditors, and users alike. The goal\nis to reveal the original programmer's mental model directly from deployed\ncode - translating low-level EVM operations back into the high-level concepts\nand data structures the developer worked with. By preserving crucial debug\ninformation in a standardized way, contract behavior becomes more transparent\nand easier to reason about, regardless of how optimized or complex the\ndeployed code may be."})]})}function h(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);
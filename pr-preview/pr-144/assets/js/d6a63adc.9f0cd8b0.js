"use strict";(self.webpackChunk_ethdebug_format_web=self.webpackChunk_ethdebug_format_web||[]).push([[6454],{1594:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>t,metadata:()=>c,toc:()=>h});var i=n(52322),r=n(45392);const t={sidebar_position:1},o="Specification overview",c={id:"overview",title:"Specification overview",description:"The ethdebug format is currently in the design phase and specification is",source:"@site/spec/overview.mdx",sourceDirName:".",slug:"/overview",permalink:"/format/pr-preview/pr-144/spec/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/ethdebug/format/tree/main/packages/web/spec/overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",next:{title:"Overview",permalink:"/format/pr-preview/pr-144/spec/type/overview"}},a={},h=[{value:"Contents",id:"contents",level:2},{value:"Conventions used by this format",id:"conventions-used-by-this-format",level:2},{value:"Terminology",id:"terminology",level:3},{value:"RFC-2119",id:"rfc-2119",level:3}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"specification-overview",children:"Specification overview"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.strong,{children:"ethdebug format"})," is currently in the design phase and specification is\nonly just beginning."]}),"\n",(0,i.jsx)(s.h2,{id:"contents",children:"Contents"}),"\n",(0,i.jsx)(s.p,{children:"This specification currently contains the following primary schemas:"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsx)("dt",{children:(0,i.jsx)(s.a,{href:"/spec/type/overview",children:(0,i.jsx)(s.strong,{children:"ethdebug/format/type"})})}),(0,i.jsx)("dd",{children:(0,i.jsx)(s.p,{children:"A schema for representing high-level data types such as arrays of integers,\npayable addresses, etc."})}),(0,i.jsx)("dt",{children:(0,i.jsx)(s.a,{href:"/spec/pointer/overview",children:(0,i.jsx)(s.strong,{children:"ethdebug/format/pointer"})})}),(0,i.jsx)("dd",{children:(0,i.jsx)(s.p,{children:"A schema for representing dynamic data address ranges in the EVM, particularly\nto indicate where high-level variables are allocated in the machine state."})}),(0,i.jsx)("dt",{children:(0,i.jsx)(s.a,{href:"/spec/program/overview",children:(0,i.jsx)(s.strong,{children:"ethdebug/format/program"})})}),(0,i.jsx)("dd",{children:(0,i.jsx)(s.p,{children:"A schema for representing high-level semantics from the perspective of an\nannotated compiled bytecode."})})]}),"\n",(0,i.jsx)(s.p,{children:"In addition, this format defines namespaces containing schemas for common\nconcerns:"}),"\n",(0,i.jsxs)("dl",{children:[(0,i.jsx)("dt",{children:(0,i.jsx)(s.a,{href:"/spec/data/overview",children:(0,i.jsx)(s.strong,{children:"ethdebug/format/data"})})}),(0,i.jsx)("dd",{children:(0,i.jsx)(s.p,{children:"A namespace of schemas containing definitions of commonly used data\nrepresentations, such as how to represent raw byte strings and unsigned\nintegers."})}),(0,i.jsx)("dt",{children:(0,i.jsx)(s.a,{href:"/spec/materials/overview",children:(0,i.jsx)(s.strong,{children:"ethdebug/format/materials"})})}),(0,i.jsx)("dd",{children:(0,i.jsx)(s.p,{children:'A namespace of schemas for representing "external" resources, such as\ncompiler source inputs.'})})]}),"\n",(0,i.jsxs)(s.p,{children:["These schemas are specified as ",(0,i.jsx)(s.a,{href:"https://json-schema.org",children:"JSON Schema"}),"\ndocuments, draft 2020-12."]}),"\n",(0,i.jsxs)(s.p,{children:["For the full collection of raw schema listings (in YAML format), please see the\n",(0,i.jsxs)(s.a,{href:"https://github.com/ethdebug/format/tree/main/schemas",children:[(0,i.jsx)(s.code,{children:"schemas/"})," directory"]}),"\nin this project's GitHub repository."]}),"\n",(0,i.jsx)(s.h2,{id:"conventions-used-by-this-format",children:"Conventions used by this format"}),"\n",(0,i.jsx)(s.h3,{id:"terminology",children:"Terminology"}),"\n",(0,i.jsx)(s.p,{children:'This specification uses the term "this format" to refer to the entirety of\nthis project\'s scope (all formal schemas and any additional\ninformally-described constraints). Sections within this specification use the\nterm "this schema" to refer to whatever schema is related to the section in\nquestion.'}),"\n",(0,i.jsx)(s.p,{children:'This specification uses the terms "known" and "unknown" synomously to mean\n"within the scope of this format" and "outside the scope of this format",\nrespectively.'}),"\n",(0,i.jsx)(s.h3,{id:"rfc-2119",children:"RFC-2119"}),"\n",(0,i.jsxs)(s.p,{children:['The key words "',(0,i.jsx)(s.strong,{children:"must"}),'", "',(0,i.jsx)(s.strong,{children:"must not"}),'", "',(0,i.jsx)(s.strong,{children:"required"}),'", "',(0,i.jsx)(s.strong,{children:"shall"}),'",\n"',(0,i.jsx)(s.strong,{children:"shall not"}),'", "',(0,i.jsx)(s.strong,{children:"should"}),'", "',(0,i.jsx)(s.strong,{children:"should not"}),'", "',(0,i.jsx)(s.strong,{children:"recommended"}),'", "',(0,i.jsx)(s.strong,{children:"may"}),'",\nand "',(0,i.jsx)(s.strong,{children:"optional"}),'" in this specification are to be interpreted as described in\n',(0,i.jsx)(s.a,{href:"https://www.ietf.org/rfc/rfc2119.txt",children:"RFC-2119"}),"."]})]})}function l(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunk_ethdebug_format_web=self.webpackChunk_ethdebug_format_web||[]).push([[8709],{57985:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>h});var s=i(52322),t=i(45392);const r={sidebar_position:1},o="Overview",a={id:"info/overview",title:"Overview",description:"ethdebug/format/info is a JSON Schema and namespace containing the",source:"@site/spec/info/overview.mdx",sourceDirName:"info",slug:"/info/overview",permalink:"/format/pr-preview/pr-153/spec/info/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/ethdebug/format/tree/main/packages/web/spec/info/overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Unsigned integers",permalink:"/format/pr-preview/pr-153/spec/data/unsigned"},next:{title:"Schema",permalink:"/format/pr-preview/pr-153/spec/info/"}},c={},h=[{value:"Reading this schema",id:"reading-this-schema",level:2}];function d(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.admonition,{title:"Summary",type:"tip",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"ethdebug/format/info"})," is a JSON Schema and namespace containing the\n",(0,s.jsx)(n.strong,{children:"ethdebug/format/info/resources"})," JSON Schema. These schemas provide a means\nfor representing the debugging data pertaining to a particular compilation."]}),(0,s.jsx)(n.p,{children:"These two schemas serve to address two distinct purposes:"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ethdebug/format/info"})," provides a means for representing a complete,\nstandalone, and language-agnostic representation of all necessary debugging\ndata. Objects in this schema contain all information specified by\n",(0,s.jsx)(n.strong,{children:"ethdebug/format/info/resources"})," plus additional metadata."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ethdebug/format/info/resources"})," provides a means for compilers to specify\ncompilation-related debug information without also specifying compilation\nmetadata that may already be found elsewhere in compiler output."]}),"\n"]}),(0,s.jsxs)(n.p,{children:["Due to the common practice that EVM language compilers already provide their\nown structured JSON output formats, it is expected that compilers will\nprimarily produce objects in the ",(0,s.jsx)(n.strong,{children:"ethdebug/format/info/resources"})," schema, and\nthat language-specific tooling will serve to convert these objects plus other\ncompiler JSON output into the more standalone ",(0,s.jsx)(n.strong,{children:"ethdebug/format/info"}),"."]}),(0,s.jsxs)(n.p,{children:["This format recommends that compilers ",(0,s.jsx)(n.strong,{children:"should"})," ensure there\nexists tooling support for the creation of ",(0,s.jsx)(n.strong,{children:"ethdebug/format/info"})," objects,\neither via custom compilation modes or through the distribution of first- or\nthird-party tools."]})]}),"\n",(0,s.jsxs)(n.p,{children:["This format defines the primary ",(0,s.jsx)(n.strong,{children:"ethdebug/format/info"})," schema."]}),"\n",(0,s.jsx)(n.p,{children:"JSON values adhering to this schema contain debugging information about a\nsingle invocation of a compiler."}),"\n",(0,s.jsx)(n.h2,{id:"reading-this-schema",children:"Reading this schema"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"ethdebug/format/info"})," schema is a standalone schema and does not define\na corresponding namespace."]}),"\n",(0,s.jsxs)(n.p,{children:["This schema (like all schemas in this format) are specified as\n",(0,s.jsx)(n.a,{href:"https://json-schema.org",children:"JSON Schema"}),", draft 2020-12."]}),"\n",(0,s.jsx)(n.p,{children:"Please refer to one or more of the following resources in this section, or\nsee the navigation bar for complete contents:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/spec/info",children:"Schema"})," (",(0,s.jsx)(n.strong,{children:"ethdebug/format/info"})," schema listing)"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/spec/info/resources",children:"Resources schema"}),"\n(",(0,s.jsx)(n.strong,{children:"ethdebug/format/info/resources"})," schema listing)"]}),"\n"]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
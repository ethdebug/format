"use strict";(self.webpackChunk_ethdebug_format_web=self.webpackChunk_ethdebug_format_web||[]).push([[2343],{34903:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>n});var a=s(52322),i=s(45392),p=s(45850);const r={sidebar_position:1,description:"Alias types schema"},o="alias",c={id:"type/complex/alias",title:"alias",description:"Alias types schema",source:"@site/spec/type/complex/alias.mdx",sourceDirName:"type/complex",slug:"/type/complex/alias",permalink:"/format/pr-preview/pr-150/spec/type/complex/alias",draft:!1,unlisted:!1,editUrl:"https://github.com/ethdebug/format/tree/main/packages/web/spec/type/complex/alias.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Alias types schema"},sidebar:"docsSidebar",previous:{title:"Complex types",permalink:"/format/pr-preview/pr-150/spec/category/complex-types"},next:{title:"tuple",permalink:"/format/pr-preview/pr-150/spec/type/complex/tuple"}},l={},n=[];function m(e){const t={code:"code",h1:"h1",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"alias",children:(0,a.jsx)(t.code,{children:"alias"})}),"\n",(0,a.jsx)(p.Z,{schema:{id:"schema:ethdebug/format/type/complex/alias"}})]})}function d(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);
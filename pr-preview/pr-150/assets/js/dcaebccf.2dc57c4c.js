(self.webpackChunk_ethdebug_format_web=self.webpackChunk_ethdebug_format_web||[]).push([[2592],{6473:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=n(52322),r=n(45392);n(84560),n(61376);const s={sidebar_position:1,sidebar_label:"Dereferencing pointers"},o="Dereferencing pointers",a={id:"implementation-guides/pointers/pointers",title:"Dereferencing pointers",description:"_An implementation guide for resolving ethdebug/format/pointers",source:"@site/docs/implementation-guides/pointers/pointers.mdx",sourceDirName:"implementation-guides/pointers",slug:"/implementation-guides/pointers/",permalink:"/format/pr-preview/pr-150/docs/implementation-guides/pointers/",draft:!1,unlisted:!1,editUrl:"https://github.com/ethdebug/format/tree/main/packages/web/docs/implementation-guides/pointers/pointers.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Dereferencing pointers"},sidebar:"docsSidebar",previous:{title:"Implementation guides",permalink:"/format/pr-preview/pr-150/docs/implementation-guides/"},next:{title:"Essential type definitions",permalink:"/format/pr-preview/pr-150/docs/implementation-guides/pointers/types/"}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"How this guide is organized",id:"how-this-guide-is-organized",level:2}];function l(e){const t={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"dereferencing-pointers",children:"Dereferencing pointers"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsxs)(t.em,{children:["An implementation guide for resolving ",(0,i.jsx)(t.strong,{children:"ethdebug/format/pointer"}),"s\ninto concrete regions and values in a running EVM."]})}),"\n",(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(t.p,{children:["This implementation guide describes the ",(0,i.jsx)(t.strong,{children:"@ethdebug/pointers"})," reference\nimplementation, written in TypeScript and intended for distribution as an\nNPM package."]}),"\n",(0,i.jsxs)(t.p,{children:["Debuggers looking to support ",(0,i.jsx)(t.strong,{children:"ethdebug/format"})," must be prepared to\ndereference the data allocations used by compilers for all kinds of variables.\nCompilers for EVM languages tend to use novel techniques for allocating data,\nand, as a result, compile-time descriptions of these allocations require an\nexpressive syntax."]}),"\n",(0,i.jsxs)(t.p,{children:["This format's ",(0,i.jsxs)(t.a,{href:"/spec/pointer/overview",children:[(0,i.jsx)(t.strong,{children:"ethdebug/format/pointer"})," schema"]}),"\nprovides such suitable expressiveness, but implementing the logic to read and\nevaluate data in this schema requires some careful consideration."]}),"\n",(0,i.jsxs)(t.admonition,{type:"tip",children:[(0,i.jsxs)(t.p,{children:["If you're reading this page without first having familiarized yourself with the\nconcepts/terminology defined by the ",(0,i.jsx)(t.strong,{children:"ethdebug/format/pointer"})," schema,\nit is recommended that you start by reading the\n",(0,i.jsx)(t.a,{href:"/spec/pointer/concepts",children:"Key concepts"})," page and then study the handful of\nexample pointers provided by ",(0,i.jsx)(t.a,{href:"/spec/pointer",children:"the schema itself"}),"."]}),(0,i.jsxs)(t.p,{children:["A fully-detailed understanding of the schema is not necessary for the purposes\nof understanding these docs, although if certain concepts are unclear, please\nraise the concern in a ",(0,i.jsx)(t.a,{href:"https://github.com/ethdebug/format/issues",children:"GitHub\nissue"}),"."]})]}),"\n",(0,i.jsx)(t.h2,{id:"how-this-guide-is-organized",children:"How this guide is organized"}),"\n",(0,i.jsxs)(t.p,{children:["These docs seek to provide a guide for implementing ",(0,i.jsx)(t.strong,{children:"ethdebug/format/pointer"}),"\nlogic by way of outlining and listing the code for an example implementation.\nThese pages are ordered so that more primitive components are introduced\nand described before the more complex components built upon them."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"A suggestion to\nreaders who like to skip ahead"}),": you might want to read or skim the\n",(0,i.jsx)(t.a,{href:"/docs/implementation-guides/pointers/types",children:"Essential type definitions"})," pages\nto familiarize yourself with the nouns that this implementation employs."]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},48313:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=48313,e.exports=t},61376:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});var i=n(84560),r=n.n(i),s=n(20477),o=n(42408);var a=n(2784),c=n(27718),d=n(52322);function l(e){let{code:t,links:n,...i}=e;const s=(0,a.useRef)(null),[o,c]=(0,a.useState)(null);return(0,a.useEffect)((()=>{function e(){if(s.current){const e=s.current.querySelector("pre > code");if(e){const t=Array.from(e.childNodes).flatMap((e=>p(e,n)));c((0,d.jsx)("pre",{className:e.parentElement?.className,children:(0,d.jsx)("code",{className:e.className,children:t})}))}}}e();const t=new MutationObserver(e);return s.current&&t.observe(s.current,{childList:!0,subtree:!0}),()=>t.disconnect()}),[t,n]),o||(0,d.jsx)("div",{ref:s,children:(0,d.jsx)(r(),{...i,children:t})})}function p(e,t){return e.nodeType===Node.TEXT_NODE?function(e,t){const n=[];let i=e.textContent||"",r=0;for(const[s,o]of Object.entries(t)){let e=i.indexOf(s,r);for(;-1!==e;)e>r&&n.push(i.slice(r,e)),n.push((0,d.jsx)(c.Z,{to:o,className:"linked-code-block-link",children:s},`${s}-${e}`)),r=e+s.length,e=i.indexOf(s,r)}r<i.length&&n.push(i.slice(r));return n}(e,t):e.nodeType===Node.ELEMENT_NODE?function(e,t){const n=e.tagName.toLowerCase(),i={key:u++,className:e.className};e.style&&e.style.cssText&&(i.style=function(e){const t={};for(const n of e.split(";"))if(n){const[e,i]=n.split(":");if(e&&i){t[e.trim().replace(/-./g,(e=>e[1].toUpperCase()))]=i.trim()}}return t}(e.style.cssText));if(h.has(n))return a.createElement(n,i);const r=Array.from(e.childNodes).flatMap((e=>p(e,t)));return a.createElement(n,i,r)}(e,t):[]}let u=0;const h=new Set(["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"]);function m(e){let{packageName:t,sourcePath:n,includePackageNameInTitle:i=!1,extract:a,links:c={},...p}=e;const u=function(e){const{packages:t}=(0,o.eZ)("project-code-plugin");if(!(e in t))throw new Error(`Unknown package name ${e}`);const{sourceFiles:n}=t[e],i=new s.IKL({useInMemoryFileSystem:!0});for(const{filePath:r,text:s}of n)i.createSourceFile(r,s,{overwrite:!0});return i}(t),h=u.getSourceFileOrThrow(n),m=a?a(h,u):h,g=m.getFullText().trim(),f=!a,x=i?(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("strong",{children:t})," ",n]}):n;return Object.keys(c).length>0?(0,d.jsx)(l,{code:g,links:c,language:"typescript",...p}):(0,d.jsx)(r(),{language:"typescript",...f?{title:x,showLineNumbers:!0}:{showLineNumbers:!1},...p,children:m.getFullText().trim()})}},56699:()=>{},68379:()=>{},68382:()=>{},78867:()=>{},21212:()=>{},89854:()=>{},25800:()=>{},93037:()=>{},26996:()=>{}}]);
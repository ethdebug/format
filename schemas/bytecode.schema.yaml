$schema: "https://json-schema.org/draft/2020-12/schema"
$id: "schema:ethdebug/format/bytecode"

title: ethdebug/format/bytecode
description: |
  A schema for representing the information pertaining to a particular bytecode
  for a contract.

type: object

properties:
  context:
    description: |
      The context known to exist prior to the execution of the first
      instruction in the bytecode.
    $ref: "schema:ethdebug/format/context"

  instructions:
    type: array
    description: |
      The full array of instructions for the bytecode.
    items:
      $ref: "schema:ethdebug/format/bytecode/instruction"
    additionalItems: false

  types:
    title: Types by name
    description: |
      A collection of types by name identifier. This field is optional and
      **may** be used by compilers that wish to minimize the size of output
      debugging data by de-duplicating type representations.

      **Note** that this field may duplicate types used by other bytecode
      resources. To match the data model more closely in the future, this field
      may be moved to another schema in this format.
    type: object
    additionalProperties:
      $ref: "schema:ethdebug/format/type"

  pointers:
    title: Pointers by name
    description: |
      A collection of pointer templates by name identifier. This field is
      optional and **may** be used by compilers that wish to minimize the size
      of output debugging data by de-duplicating type representations.

      **Note** that this field may duplicate pointers used by other bytecode
      resources. To match the data model more closely in the future, this field
      may be moved to another schema in this format.
    type: object
    additionalProperties:
      $ref: "schema:ethdebug/format/pointer/template"

required:
  - instructions

examples:
  - types:
      "my-bool":
        kind: bool
    pointers:
      "my-storage-bool":
        expect: ["my-slot"]
        for:
          location: storage
          slot: "my-slot"
    instructions:
      - offset: 0
        operation:
          mnemonic: PUSH1
          arguments: ["0x60"]
        context:
          variables:
            - identifier: paused
              declaration:
                source:
                  id: 5
                range:
                  offset: 10
                  length: 30
              type:
                id: "my-bool"
              pointer:
                define:
                  "my-slot": 0
                in:
                  template: "my-storage-bool"

$schema: "https://json-schema.org/draft/2020-12/schema"
$id: "schema:ethdebug/format/type"

title: ethdebug/format/type
description:
  Canonical representation for all types.
type: object

if:
  type: object
  title: Known kind
  description:
    If `kind` adheres to the set of known kinds defined by this format
  properties:
    kind:
      anyOf:
        - $ref: "schema:ethdebug/format/type/elementary#/$defs/Kind"
        - $ref: "schema:ethdebug/format/type/complex#/$defs/Kind"

then:
  type: object
  title: KnownType
  description:
    Then the object must adhere to exactly one known kind of type
  allOf:
    - if:
        properties:
          kind:
            $ref: "schema:ethdebug/format/type/elementary#/$defs/Kind"
      then:
        $ref: "schema:ethdebug/format/type/elementary"
    - if:
        properties:
          kind:
            $ref: "schema:ethdebug/format/type/complex#/$defs/Kind"
      then:
        $ref: "schema:ethdebug/format/type/complex"

else:
  type: object
  description:
    Else the object must be a valid **ethdebug/format/type/base** with
    additional constraints
  allOf:
    - $ref: "schema:ethdebug/format/type/base"
    - title: Required `class` field
      required:
        - class
    - title: Specialized complex type `contains` field
      type: object
      if:
        description:
          If this object is a complex type
        properties:
          class:
            const: complex
      then:
        description:
          Then the `contains` field must adhere to
          **ethdebug/format/type/wrapper** schemas, not the
          **ethdebug/format/type/base** equivalent.

          (i.e., these additional constraints must apply recursively)
        properties:
          contains:
            oneOf:
              - $ref: "schema:ethdebug/format/type/wrapper"
              - $ref: "schema:ethdebug/format/type/wrapper#/$defs/Array"
              - $ref: "schema:ethdebug/format/type/wrapper#/$defs/Object"

"use strict";(self.webpackChunk_ethdebug_format_web=self.webpackChunk_ethdebug_format_web||[]).push([[81],{6513:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=t(5893),n=t(1151);const o={sidebar_position:1,description:"Summary, rationale, and project goals"},a="Project overview",s={id:"overview",title:"Project overview",description:"Summary, rationale, and project goals",source:"@site/docs/overview.mdx",sourceDirName:".",slug:"/overview",permalink:"/format/docs/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/ethdebug/format/tree/main/web/docs/docs/overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Summary, rationale, and project goals"},sidebar:"docsSidebar",next:{title:"Known challenges",permalink:"/format/docs/known-challenges"}},c={},d=[{value:"Summary",id:"summary",level:2},{value:"Rationale",id:"rationale",level:2},{value:"Goals",id:"goals",level:2}];function l(e){const i={h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"project-overview",children:"Project overview"}),"\n",(0,r.jsx)(i.p,{children:"The security of smart contracts hinges on the availability of robust debugging tools. As the compiler optimizes a contract, it may move instructions around or remove them thus weakening its relationship with the original source code. The debugger then faces the challenging task of reversing these transformations to enrich the often cryptic artifacts with contexts mapping back to the contract's source."}),"\n",(0,r.jsx)(i.p,{children:"The ETH debug standard aims to bridge this intricate dichotomy between the compiler and debugger, guided by the following key goals:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Minimal Overhead"}),": Extend compiler output without duplication or excessive disk footprint."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Language Agnostic"}),": Remain independent of any specific programming language or compiler, ensuring wide applicability within the Ethereum Virtual Machine (EVM) ecosystem."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Robust Interface"}),": Provide a comprehensive and standardized interface for debuggers, enabling a rich and industry-standard debugging experience for developers."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(i.h2,{id:"rationale",children:"Rationale"}),"\n",(0,r.jsx)(i.h2,{id:"goals",children:"Goals"})]})}function h(e={}){const{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);
(self.webpackChunk_ethdebug_format_web=self.webpackChunk_ethdebug_format_web||[]).push([[8908],{25499:(e,t,s)=>{"use strict";s.r(t),s.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>f,frontMatter:()=>l,metadata:()=>h,toc:()=>g});var r=s(52322),n=s(45392),i=s(51114),o=s(84560),a=s.n(o),c=s(99372);function d(e){let{pointerQuery:t}=e;const{schema:s}=(0,c.describeSchema)({schema:{id:"schema:ethdebug/format/pointer"}}),[n]=[...s.examples?.entries()||[]].find((e=>{let[s,r]=e;return JSON.stringify(r).includes(t)}))||[];if(void 0===n)throw new Error("Could not find example in pointer schema");const{yaml:i}=(0,c.describeSchema)({schema:{id:"schema:ethdebug/format/pointer"},pointer:`#/examples/${n}`});return(0,r.jsx)(a(),{language:"yaml",children:i})}const l={sidebar_position:7},u="Test cases",h={id:"implementation-guides/pointers/testing/test-cases",title:"Test cases",description:"This reference implementation currently defines the following integration test",source:"@site/docs/implementation-guides/pointers/testing/test-cases.mdx",sourceDirName:"implementation-guides/pointers/testing",slug:"/implementation-guides/pointers/testing/test-cases",permalink:"/format/docs/implementation-guides/pointers/testing/test-cases",draft:!1,unlisted:!1,editUrl:"https://github.com/ethdebug/format/tree/main/packages/web/docs/implementation-guides/pointers/testing/test-cases.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Observing the machine",permalink:"/format/docs/implementation-guides/pointers/testing/machine-observation"},next:{title:"Hooking up Jest",permalink:"/format/docs/implementation-guides/pointers/testing/jest"}},m={},g=[{value:"Storage strings",id:"storage-strings",level:2},{value:"Test source",id:"test-source",level:3},{value:"Tested pointer",id:"tested-pointer",level:3},{value:"Memory arrays of word-sized items",id:"memory-arrays-of-word-sized-items",level:2},{value:"Test source",id:"test-source-1",level:3},{value:"Tested pointer",id:"tested-pointer-1",level:3}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"test-cases",children:"Test cases"}),"\n",(0,r.jsx)(t.p,{children:"This reference implementation currently defines the following integration test\ncases."}),"\n",(0,r.jsxs)(t.p,{children:["Test cases are aggregated into the ",(0,r.jsx)(t.code,{children:"observeTraceTests"})," variable:"]}),"\n",(0,r.jsx)(i.Z,{packageName:"@ethdebug/pointers",sourcePath:"src/test-cases.ts",extract:e=>e.getVariableStatement("observeTraceTests")}),"\n",(0,r.jsxs)(t.p,{children:["This variable will be used to generate automated tests dynamically, as will\nbe described on the\n",(0,r.jsx)(t.a,{href:"/docs/implementation-guides/pointers/testing/jest",children:"next page"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"storage-strings",children:"Storage strings"}),"\n",(0,r.jsxs)(t.p,{children:["Representing a Solidity ",(0,r.jsx)(t.code,{children:"string storage"})," using an ",(0,r.jsx)(t.strong,{children:"ethdebug/format/pointer"}),"\nrequires the use of conditional logic to identify the one or more regions that\ncorrespond to raw UTF-8 Solidity string data. The ",(0,r.jsx)(t.code,{children:"dereference()"})," function\nshould behave as expected for such a pointer and observe the changing string\nvalue."]}),"\n",(0,r.jsx)(t.h3,{id:"test-source",children:"Test source"}),"\n",(0,r.jsx)(i.Z,{packageName:"@ethdebug/pointers",sourcePath:"src/test-cases.ts",extract:e=>e.getVariableStatement("stringStorageTest")}),"\n",(0,r.jsx)(t.h3,{id:"tested-pointer",children:"Tested pointer"}),"\n",(0,r.jsx)(d,{pointerQuery:"string-storage-contract-variable-slot"}),"\n",(0,r.jsx)(t.h2,{id:"memory-arrays-of-word-sized-items",children:"Memory arrays of word-sized items"}),"\n",(0,r.jsx)(t.p,{children:"Memory arrays are primarily referenced using stack-located memory offset values,\nand so this test case ensures that stack slot indexes are properly adjusted over\nthe course of the transaction."}),"\n",(0,r.jsx)(t.h3,{id:"test-source-1",children:"Test source"}),"\n",(0,r.jsx)(i.Z,{packageName:"@ethdebug/pointers",sourcePath:"src/test-cases.ts",extract:e=>e.getVariableStatement("uint256ArrayMemoryTest")}),"\n",(0,r.jsx)(t.h3,{id:"tested-pointer-1",children:"Tested pointer"}),"\n",(0,r.jsx)(d,{pointerQuery:"uint256-array-memory-pointer-slot"})]})}function f(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},48313:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=48313,e.exports=t},51114:(e,t,s)=>{"use strict";s.d(t,{Z:()=>c});var r=s(84560),n=s.n(r),i=s(20477),o=s(42408);var a=s(52322);function c(e){let{packageName:t,sourcePath:s,extract:r,...c}=e;const d=function(e){const{packages:t}=(0,o.eZ)("project-code-plugin");if(!(e in t))throw new Error(`Unknown package name ${e}`);const{sourceFiles:s}=t[e],r=new i.IKL({useInMemoryFileSystem:!0});for(const{filePath:n,text:i}of s)r.createSourceFile(n,i,{overwrite:!0});return r}(t),l=d.getSourceFileOrThrow(s);if(!r)return(0,a.jsx)(n(),{title:s,language:"typescript",showLineNumbers:!0,children:l.getFullText()});const u=r(l,d);return(0,a.jsx)(n(),{language:"typescript",...c,children:u.getFullText().trim()})}},56699:()=>{},68379:()=>{},68382:()=>{},78867:()=>{},21212:()=>{},89854:()=>{},25800:()=>{},93037:()=>{},26996:()=>{}}]);
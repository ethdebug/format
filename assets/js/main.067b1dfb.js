/*! For license information please see main.067b1dfb.js.LICENSE.txt */
(self.webpackChunk_ethdebug_format_web=self.webpackChunk_ethdebug_format_web||[]).push([[179],{60108:(e,n,t)=>{"use strict";t.d(n,{_:()=>a,t:()=>i});var r=t(2784),o=t(52322);const a=r.createContext(!1);function i(e){let{children:n}=e;const[t,i]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{i(!0)}),[]),(0,o.jsx)(a.Provider,{value:t,children:n})}},2062:(e,n,t)=>{"use strict";var r=t(2784),o=t(17029),a=t(72175),i=t(47933),s=t(36809),l=t(31263);const c=[t(55749),t(86120),t(80401),t(1964)];var d=t(19895),u=t(7267),p=t(9702),f=t(52322);function m(e){let{children:n}=e;return(0,f.jsx)(f.Fragment,{children:n})}var y=t(69854),h=t(37614),g=t(90077),b=t(97683),v=t(50328),x=t(55552),w=t(9499),k=t(4925),S=t(60958),E=t(54390);function P(){const{i18n:{currentLocale:e,defaultLocale:n,localeConfigs:t}}=(0,h.Z)(),r=(0,x.l)(),o=t[e].htmlLang,a=e=>e.replace("-","_");return(0,f.jsxs)(y.Z,{children:[Object.entries(t).map((e=>{let[n,{htmlLang:t}]=e;return(0,f.jsx)("link",{rel:"alternate",href:r.createUrl({locale:n,fullyQualified:!0}),hrefLang:t},n)})),(0,f.jsx)("link",{rel:"alternate",href:r.createUrl({locale:n,fullyQualified:!0}),hrefLang:"x-default"}),(0,f.jsx)("meta",{property:"og:locale",content:a(o)}),Object.values(t).filter((e=>o!==e.htmlLang)).map((e=>(0,f.jsx)("meta",{property:"og:locale:alternate",content:a(e.htmlLang)},`meta-og-${e.htmlLang}`)))]})}function C(e){let{permalink:n}=e;const{siteConfig:{url:t}}=(0,h.Z)(),r=function(){const{siteConfig:{url:e,baseUrl:n,trailingSlash:t}}=(0,h.Z)(),{pathname:r}=(0,u.TH)();return e+(0,S.applyTrailingSlash)((0,g.ZP)(r),{trailingSlash:t,baseUrl:n})}(),o=n?`${t}${n}`:r;return(0,f.jsxs)(y.Z,{children:[(0,f.jsx)("meta",{property:"og:url",content:o}),(0,f.jsx)("link",{rel:"canonical",href:o})]})}function _(){const{i18n:{currentLocale:e}}=(0,h.Z)(),{metadata:n,image:t}=(0,b.L)();return(0,f.jsxs)(f.Fragment,{children:[(0,f.jsxs)(y.Z,{children:[(0,f.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,f.jsx)("body",{className:w.h})]}),t&&(0,f.jsx)(v.d,{image:t}),(0,f.jsx)(C,{}),(0,f.jsx)(P,{}),(0,f.jsx)(E.Z,{tag:k.HX,locale:e}),(0,f.jsx)(y.Z,{children:n.map(((e,n)=>(0,f.jsx)("meta",{...e},n)))})]})}const j=new Map;var T=t(60108),$=t(16288),O=t(70164);function N(e){for(var n=arguments.length,t=new Array(n>1?n-1:0),r=1;r<n;r++)t[r-1]=arguments[r];const o=c.map((n=>{const r=n.default?.[e]??n[e];return r?.(...t)}));return()=>o.forEach((e=>e?.()))}const R=function(e){let{children:n,location:t,previousLocation:r}=e;return(0,O.Z)((()=>{r!==t&&(!function(e){let{location:n,previousLocation:t}=e;if(!t)return;const r=n.pathname===t.pathname,o=n.hash===t.hash,a=n.search===t.search;if(r&&o&&!a)return;const{hash:i}=n;if(i){const e=decodeURIComponent(i.substring(1)),n=document.getElementById(e);n?.scrollIntoView()}else window.scrollTo(0,0)}({location:t,previousLocation:r}),N("onRouteDidUpdate",{previousLocation:r,location:t}))}),[r,t]),n};function A(e){const n=Array.from(new Set([e,decodeURI(e)])).map((e=>(0,p.f)(d.Z,e))).flat();return Promise.all(n.map((e=>e.route.component.preload?.())))}class L extends r.Component{previousLocation;routeUpdateCleanupCb;constructor(e){super(e),this.previousLocation=null,this.routeUpdateCleanupCb=l.Z.canUseDOM?N("onRouteUpdate",{previousLocation:null,location:this.props.location}):()=>{},this.state={nextRouteHasLoaded:!0}}shouldComponentUpdate(e,n){if(e.location===this.props.location)return n.nextRouteHasLoaded;const t=e.location;return this.previousLocation=this.props.location,this.setState({nextRouteHasLoaded:!1}),this.routeUpdateCleanupCb=N("onRouteUpdate",{previousLocation:this.previousLocation,location:t}),A(t.pathname).then((()=>{this.routeUpdateCleanupCb(),this.setState({nextRouteHasLoaded:!0})})).catch((e=>{console.warn(e),window.location.reload()})),!1}render(){const{children:e,location:n}=this.props;return(0,f.jsx)(R,{previousLocation:this.previousLocation,location:n,children:(0,f.jsx)(u.AW,{location:n,render:()=>e})})}}const D=L,I="__docusaurus-base-url-issue-banner-container",M="__docusaurus-base-url-issue-banner",F="__docusaurus-base-url-issue-banner-suggestion-container";function z(e){return`\ndocument.addEventListener('DOMContentLoaded', function maybeInsertBanner() {\n  var shouldInsert = typeof window['docusaurus'] === 'undefined';\n  shouldInsert && insertBanner();\n});\n\nfunction insertBanner() {\n  var bannerContainer = document.createElement('div');\n  bannerContainer.id = '${I}';\n  var bannerHtml = ${JSON.stringify(function(e){return`\n<div id="${M}" style="border: thick solid red; background-color: rgb(255, 230, 179); margin: 20px; padding: 20px; font-size: 20px;">\n   <p style="font-weight: bold; font-size: 30px;">Your Docusaurus site did not load properly.</p>\n   <p>A very common reason is a wrong site <a href="https://docusaurus.io/docs/docusaurus.config.js/#baseUrl" style="font-weight: bold;">baseUrl configuration</a>.</p>\n   <p>Current configured baseUrl = <span style="font-weight: bold; color: red;">${e}</span> ${"/"===e?" (default value)":""}</p>\n   <p>We suggest trying baseUrl = <span id="${F}" style="font-weight: bold; color: green;"></span></p>\n</div>\n`}(e)).replace(/</g,"\\<")};\n  bannerContainer.innerHTML = bannerHtml;\n  document.body.prepend(bannerContainer);\n  var suggestionContainer = document.getElementById('${F}');\n  var actualHomePagePath = window.location.pathname;\n  var suggestedBaseUrl = actualHomePagePath.substr(-1) === '/'\n        ? actualHomePagePath\n        : actualHomePagePath + '/';\n  suggestionContainer.innerHTML = suggestedBaseUrl;\n}\n`}function U(){const{siteConfig:{baseUrl:e}}=(0,h.Z)();return(0,f.jsx)(f.Fragment,{children:!l.Z.canUseDOM&&(0,f.jsx)(y.Z,{children:(0,f.jsx)("script",{children:z(e)})})})}function B(){const{siteConfig:{baseUrl:e,baseUrlIssueBanner:n}}=(0,h.Z)(),{pathname:t}=(0,u.TH)();return n&&t===e?(0,f.jsx)(U,{}):null}function q(){const{siteConfig:{favicon:e,title:n,noIndex:t},i18n:{currentLocale:r,localeConfigs:o}}=(0,h.Z)(),a=(0,g.ZP)(e),{htmlLang:i,direction:s}=o[r];return(0,f.jsxs)(y.Z,{children:[(0,f.jsx)("html",{lang:i,dir:s}),(0,f.jsx)("title",{children:n}),(0,f.jsx)("meta",{property:"og:title",content:n}),(0,f.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),t&&(0,f.jsx)("meta",{name:"robots",content:"noindex, nofollow"}),e&&(0,f.jsx)("link",{rel:"icon",href:a})]})}var H=t(63951),V=t(89741);function Z(){const e=(0,V.Z)();return(0,f.jsx)(y.Z,{children:(0,f.jsx)("html",{"data-has-hydrated":e})})}const W=(0,p.H)(d.Z);function G(){const e=function(e){if(j.has(e.pathname))return{...e,pathname:j.get(e.pathname)};if((0,p.f)(d.Z,e.pathname).some((e=>{let{route:n}=e;return!0===n.exact})))return j.set(e.pathname,e.pathname),e;const n=e.pathname.trim().replace(/(?:\/index)?\.html$/,"")||"/";return j.set(e.pathname,n),{...e,pathname:n}}((0,u.TH)());return(0,f.jsx)(D,{location:e,children:W})}function K(){return(0,f.jsx)(H.Z,{children:(0,f.jsx)($.M,{children:(0,f.jsxs)(T.t,{children:[(0,f.jsxs)(m,{children:[(0,f.jsx)(q,{}),(0,f.jsx)(_,{}),(0,f.jsx)(B,{}),(0,f.jsx)(G,{})]}),(0,f.jsx)(Z,{})]})})})}var J=t(16887);const Y=function(e){try{return document.createElement("link").relList.supports(e)}catch{return!1}}("prefetch")?function(e){return new Promise(((n,t)=>{if("undefined"==typeof document)return void t();const r=document.createElement("link");r.setAttribute("rel","prefetch"),r.setAttribute("href",e),r.onload=()=>n(),r.onerror=()=>t();const o=document.getElementsByTagName("head")[0]??document.getElementsByName("script")[0]?.parentNode;o?.appendChild(r)}))}:function(e){return new Promise(((n,t)=>{const r=new XMLHttpRequest;r.open("GET",e,!0),r.withCredentials=!0,r.onload=()=>{200===r.status?n():t()},r.send(null)}))};var Q=t(20805);const X=new Set,ee=new Set,ne=()=>navigator.connection?.effectiveType.includes("2g")||navigator.connection?.saveData,te={prefetch:e=>{if(!(e=>!ne()&&!ee.has(e)&&!X.has(e))(e))return!1;X.add(e);const n=(0,p.f)(d.Z,e).flatMap((e=>{return n=e.route.path,Object.entries(J).filter((e=>{let[t]=e;return t.replace(/-[^-]+$/,"")===n})).flatMap((e=>{let[,n]=e;return Object.values((0,Q.Z)(n))}));var n}));return Promise.all(n.map((e=>{const n=t.gca(e);return n&&!n.includes("undefined")?Y(n).catch((()=>{})):Promise.resolve()})))},preload:e=>!!(e=>!ne()&&!ee.has(e))(e)&&(ee.add(e),A(e))},re=Object.freeze(te);function oe(e){let{children:n}=e;return"hash"===s.default.future.experimental_router?(0,f.jsx)(i.UT,{children:n}):(0,f.jsx)(i.VK,{children:n})}const ae=Boolean(!0);if(l.Z.canUseDOM){window.docusaurus=re;const e=document.getElementById("__docusaurus"),n=(0,f.jsx)(a.B6,{children:(0,f.jsx)(oe,{children:(0,f.jsx)(K,{})})}),t=(e,n)=>{console.error("Docusaurus React Root onRecoverableError:",e,n)},i=()=>{if(window.docusaurusRoot)window.docusaurusRoot.render(n);else if(ae)window.docusaurusRoot=o.hydrateRoot(e,n,{onRecoverableError:t});else{const r=o.createRoot(e,{onRecoverableError:t});r.render(n),window.docusaurusRoot=r}};A(window.location.pathname).then((()=>{(0,r.startTransition)(i)}))}},16288:(e,n,t)=>{"use strict";t.d(n,{_:()=>u,M:()=>p});var r=t(2784),o=t(36809);const a=JSON.parse('{"docusaurus-plugin-content-docs":{"default":{"path":"/format/docs","versions":[{"name":"current","label":"Next","isLast":true,"path":"/format/docs","mainDocId":"overview","docs":[{"id":"goals","path":"/format/docs/goals","sidebar":"docsSidebar"},{"id":"implementation-guides/implementation-guides","path":"/format/docs/implementation-guides/","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/dereference-logic/dereference-logic","path":"/format/docs/implementation-guides/pointers/dereference-logic/","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/dereference-logic/generating-regions","path":"/format/docs/implementation-guides/pointers/dereference-logic/generating-regions","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/dereference-logic/making-regions-concrete","path":"/format/docs/implementation-guides/pointers/dereference-logic/making-regions-concrete","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/evaluating-expressions","path":"/format/docs/implementation-guides/pointers/evaluating-expressions","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/pointers","path":"/format/docs/implementation-guides/pointers/","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/reading-from-regions","path":"/format/docs/implementation-guides/pointers/reading-from-regions","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/blockchain-simulation","path":"/format/docs/implementation-guides/pointers/testing/blockchain-simulation","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/compilation","path":"/format/docs/implementation-guides/pointers/testing/compilation","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/deployment","path":"/format/docs/implementation-guides/pointers/testing/deployment","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/example-pointers","path":"/format/docs/implementation-guides/pointers/testing/example-pointers","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/jest","path":"/format/docs/implementation-guides/pointers/testing/jest","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/machine-observation","path":"/format/docs/implementation-guides/pointers/testing/machine-observation","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/test-cases/string-storage","path":"/format/docs/implementation-guides/pointers/testing/test-cases/string-storage","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/test-cases/struct-storage","path":"/format/docs/implementation-guides/pointers/testing/test-cases/struct-storage","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/test-cases/test-cases","path":"/format/docs/implementation-guides/pointers/testing/test-cases/","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/test-cases/uint256-array-memory","path":"/format/docs/implementation-guides/pointers/testing/test-cases/uint256-array-memory","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/testing/testing","path":"/format/docs/implementation-guides/pointers/testing/","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/types/cursors","path":"/format/docs/implementation-guides/pointers/types/cursors","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/types/data-and-machines","path":"/format/docs/implementation-guides/pointers/types/data-and-machines","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/types/pointer-types","path":"/format/docs/implementation-guides/pointers/types/pointer-types","sidebar":"docsSidebar"},{"id":"implementation-guides/pointers/types/types","path":"/format/docs/implementation-guides/pointers/types/","sidebar":"docsSidebar"},{"id":"known-challenges","path":"/format/docs/known-challenges","sidebar":"docsSidebar"},{"id":"overview","path":"/format/docs/overview","sidebar":"docsSidebar"},{"id":"sketches/layout","path":"/format/docs/sketches/layout","sidebar":"docsSidebar"},{"id":"sketches/prototype","path":"/format/docs/sketches/prototype","sidebar":"docsSidebar"},{"id":"/category/prototype-sketches","path":"/format/docs/category/prototype-sketches","sidebar":"docsSidebar"}],"draftIds":[],"sidebars":{"docsSidebar":{"link":{"path":"/format/docs/overview","label":"overview"}}}}],"breadcrumbs":true},"spec":{"path":"/format/spec","versions":[{"name":"current","label":"Next","isLast":true,"path":"/format/spec","mainDocId":"overview","docs":[{"id":"data/hex","path":"/format/spec/data/hex","sidebar":"docsSidebar"},{"id":"data/overview","path":"/format/spec/data/overview","sidebar":"docsSidebar"},{"id":"data/unsigned","path":"/format/spec/data/unsigned","sidebar":"docsSidebar"},{"id":"materials/compilation","path":"/format/spec/materials/compilation","sidebar":"docsSidebar"},{"id":"materials/id","path":"/format/spec/materials/id","sidebar":"docsSidebar"},{"id":"materials/overview","path":"/format/spec/materials/overview","sidebar":"docsSidebar"},{"id":"materials/source","path":"/format/spec/materials/source","sidebar":"docsSidebar"},{"id":"materials/source-range","path":"/format/spec/materials/source-range","sidebar":"docsSidebar"},{"id":"overview","path":"/format/spec/overview","sidebar":"docsSidebar"},{"id":"pointer/collection/collection","path":"/format/spec/pointer/collection/","sidebar":"docsSidebar"},{"id":"pointer/collection/conditional","path":"/format/spec/pointer/collection/conditional","sidebar":"docsSidebar"},{"id":"pointer/collection/group","path":"/format/spec/pointer/collection/group","sidebar":"docsSidebar"},{"id":"pointer/collection/list","path":"/format/spec/pointer/collection/list","sidebar":"docsSidebar"},{"id":"pointer/collection/scope","path":"/format/spec/pointer/collection/scope","sidebar":"docsSidebar"},{"id":"pointer/concepts","path":"/format/spec/pointer/concepts","sidebar":"docsSidebar"},{"id":"pointer/expression","path":"/format/spec/pointer/expression","sidebar":"docsSidebar"},{"id":"pointer/overview","path":"/format/spec/pointer/overview","sidebar":"docsSidebar"},{"id":"pointer/pointer","path":"/format/spec/pointer/","sidebar":"docsSidebar"},{"id":"pointer/region/base","path":"/format/spec/pointer/region/base","sidebar":"docsSidebar"},{"id":"pointer/region/location/calldata","path":"/format/spec/pointer/region/location/calldata","sidebar":"docsSidebar"},{"id":"pointer/region/location/code","path":"/format/spec/pointer/region/location/code","sidebar":"docsSidebar"},{"id":"pointer/region/location/memory","path":"/format/spec/pointer/region/location/memory","sidebar":"docsSidebar"},{"id":"pointer/region/location/returndata","path":"/format/spec/pointer/region/location/returndata","sidebar":"docsSidebar"},{"id":"pointer/region/location/stack","path":"/format/spec/pointer/region/location/stack","sidebar":"docsSidebar"},{"id":"pointer/region/location/storage","path":"/format/spec/pointer/region/location/storage","sidebar":"docsSidebar"},{"id":"pointer/region/location/transient","path":"/format/spec/pointer/region/location/transient","sidebar":"docsSidebar"},{"id":"pointer/region/region","path":"/format/spec/pointer/region/","sidebar":"docsSidebar"},{"id":"pointer/region/scheme/segment","path":"/format/spec/pointer/region/scheme/segment","sidebar":"docsSidebar"},{"id":"pointer/region/scheme/slice","path":"/format/spec/pointer/region/scheme/slice","sidebar":"docsSidebar"},{"id":"pointer/template","path":"/format/spec/pointer/template","sidebar":"docsSidebar"},{"id":"program/concepts","path":"/format/spec/program/concepts","sidebar":"docsSidebar"},{"id":"program/context/code","path":"/format/spec/program/context/code","sidebar":"docsSidebar"},{"id":"program/context/context","path":"/format/spec/program/context/","sidebar":"docsSidebar"},{"id":"program/context/variables","path":"/format/spec/program/context/variables","sidebar":"docsSidebar"},{"id":"program/instruction","path":"/format/spec/program/instruction","sidebar":"docsSidebar"},{"id":"program/overview","path":"/format/spec/program/overview","sidebar":"docsSidebar"},{"id":"program/program","path":"/format/spec/program/","sidebar":"docsSidebar"},{"id":"type/base","path":"/format/spec/type/base","sidebar":"docsSidebar"},{"id":"type/complex/alias","path":"/format/spec/type/complex/alias","sidebar":"docsSidebar"},{"id":"type/complex/array","path":"/format/spec/type/complex/array","sidebar":"docsSidebar"},{"id":"type/complex/function","path":"/format/spec/type/complex/function","sidebar":"docsSidebar"},{"id":"type/complex/mapping","path":"/format/spec/type/complex/mapping","sidebar":"docsSidebar"},{"id":"type/complex/struct","path":"/format/spec/type/complex/struct","sidebar":"docsSidebar"},{"id":"type/complex/tuple","path":"/format/spec/type/complex/tuple","sidebar":"docsSidebar"},{"id":"type/concepts","path":"/format/spec/type/concepts","sidebar":"docsSidebar"},{"id":"type/elementary/address","path":"/format/spec/type/elementary/address","sidebar":"docsSidebar"},{"id":"type/elementary/bool","path":"/format/spec/type/elementary/bool","sidebar":"docsSidebar"},{"id":"type/elementary/bytes","path":"/format/spec/type/elementary/bytes","sidebar":"docsSidebar"},{"id":"type/elementary/contract","path":"/format/spec/type/elementary/contract","sidebar":"docsSidebar"},{"id":"type/elementary/enum","path":"/format/spec/type/elementary/enum","sidebar":"docsSidebar"},{"id":"type/elementary/fixed","path":"/format/spec/type/elementary/fixed","sidebar":"docsSidebar"},{"id":"type/elementary/int","path":"/format/spec/type/elementary/int","sidebar":"docsSidebar"},{"id":"type/elementary/string","path":"/format/spec/type/elementary/string","sidebar":"docsSidebar"},{"id":"type/elementary/ufixed","path":"/format/spec/type/elementary/ufixed","sidebar":"docsSidebar"},{"id":"type/elementary/uint","path":"/format/spec/type/elementary/uint","sidebar":"docsSidebar"},{"id":"type/overview","path":"/format/spec/type/overview","sidebar":"docsSidebar"},{"id":"type/type","path":"/format/spec/type/","sidebar":"docsSidebar"},{"id":"/category/elementary-types","path":"/format/spec/category/elementary-types","sidebar":"docsSidebar"},{"id":"/category/complex-types","path":"/format/spec/category/complex-types","sidebar":"docsSidebar"}],"draftIds":[],"sidebars":{"docsSidebar":{"link":{"path":"/format/spec/overview","label":"overview"}}}}],"breadcrumbs":true}},"project-code-plugin":{"default":{"packages":{"@ethdebug/pointers":{"sourceFiles":[{"filePath":"typings.d.ts","text":"declare module \\"@jest/expect\\" {\\n  interface Matchers<R> {\\n    toSatisfy(received: any): R;\\n    toSatisfyAll(values: readonly any[]): R;\\n  }\\n}\\n\\ndeclare module \\"solc\\" {\\n  function compile(input: string): string;\\n};\\n"},{"filePath":"../format/dist/yamls.d.ts","text":"export type SchemaYamlsById = {\\n    [id: string]: string;\\n};\\nexport declare const schemaYamls: SchemaYamlsById;\\ndeclare const rawSchemas: {\\n    readonly \\"schema:ethdebug/format/data/hex\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/data/hex\\";\\n        readonly title: \\"ethdebug/format/data/hex\\";\\n        readonly description: \\"A `0x`-prefixed hexadecimal string. This value **must** contain at least one\\\\nhexadecimal character (`0x` by itself is not allowed).\\\\n\\";\\n        readonly type: \\"string\\";\\n        readonly pattern: \\"^0x[0-9a-fA-F]{1,}$\\";\\n        readonly examples: readonly [\\"0x0000\\", \\"0x1\\"];\\n    };\\n    readonly \\"schema:ethdebug/format/data/unsigned\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/data/unsigned\\";\\n        readonly title: \\"ethdebug/format/data/unsigned\\";\\n        readonly description: \\"A non-negative integer encoded as a JSON number.\\\\n\\";\\n        readonly type: \\"integer\\";\\n        readonly minimum: 0;\\n        readonly examples: readonly [0, 100];\\n    };\\n    readonly \\"schema:ethdebug/format/materials/compilation\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/materials/compilation\\";\\n        readonly title: \\"ethdebug/format/materials/compilation\\";\\n        readonly description: \\"An object representing a single invocation of a compiler.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly id: {\\n                readonly description: \\"Compilation ID. Optional, but **should** be specified.\\\\n\\\\nThis value **should** be globally-unique and generated only from the\\\\ncompiler inputs (settings, sources, etc.); the same compiler inputs/\\\\nsettings **should** produce the same identifier.\\\\n\\";\\n                readonly $ref: \\"schema:ethdebug/format/materials/id\\";\\n            };\\n            readonly compiler: {\\n                readonly type: \\"object\\";\\n                readonly title: \\"Compiler name and version\\";\\n                readonly properties: {\\n                    readonly name: {\\n                        readonly type: \\"string\\";\\n                        readonly description: \\"Compiler name\\";\\n                    };\\n                    readonly version: {\\n                        readonly type: \\"string\\";\\n                        readonly description: \\"Compiler version.\\\\n\\\\nThis value **should** be specified using the most detailed version\\\\nrepresentation available, i.e., including source control hash and\\\\ncompiler build information whenever possible.\\\\n\\";\\n                    };\\n                };\\n                readonly required: readonly [\\"name\\", \\"version\\"];\\n                readonly examples: readonly [{\\n                    readonly name: \\"lllc\\";\\n                    readonly version: \\"0.4.12-develop.2017.6.27+commit.b83f77e0.Linux.g++\\";\\n                }];\\n            };\\n            readonly settings: {\\n                readonly description: \\"Compiler settings in a format native to the compiler.\\\\n\\\\nFor compilers whose settings includes full source representations, this\\\\nfield **should** be specified in such a way that avoids large data\\\\nredundancies (e.g. if compiler settings contain full source\\\\nrepresentations, then this field would significantly duplicate the\\\\ninformation represented by the `sources` field in this object).\\\\n\\\\nIn situations where settings information duplicates information\\\\nrepresented elsewhere in **ethdebug/format**, compilers **may** adopt\\\\nany reasonable strategy, e.g.:\\\\n  - omit duplications partially (leaving the rest of the settings\\\\n    intact)\\\\n  - omit this field entirely\\\\n  - specify this field as a hash of the full settings\\\\n    representation (with the expectation that users of this format will\\\\n    have access to the full representation by some other means)\\\\n\\";\\n                readonly allOf: readonly [true];\\n            };\\n            readonly sources: {\\n                readonly type: \\"array\\";\\n                readonly items: {\\n                    readonly $ref: \\"schema:ethdebug/format/materials/source\\";\\n                };\\n            };\\n        };\\n        readonly required: readonly [\\"compiler\\", \\"sources\\"];\\n        readonly examples: readonly [{\\n            readonly compiler: {\\n                readonly name: \\"lllc\\";\\n                readonly version: \\"0.4.12-develop.2017.6.27+commit.b83f77e0.Linux.g++\\";\\n            };\\n            readonly sources: readonly [{\\n                readonly id: 0;\\n                readonly path: \\"stdin\\";\\n                readonly contents: \\"(add 1 (mul 2 (add 3 4)))\\\\n\\";\\n                readonly language: \\"LLL\\";\\n            }];\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/materials/id\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/materials/id\\";\\n        readonly title: \\"ethdebug/format/materials/id\\";\\n        readonly description: \\"An opaque external ID (likely generated by compiler)\\";\\n        readonly type: readonly [\\"number\\", \\"string\\"];\\n        readonly examples: readonly [5, \\"five\\"];\\n    };\\n    readonly \\"schema:ethdebug/format/materials/reference\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/materials/reference\\";\\n        readonly title: \\"ethdebug/format/materials/reference\\";\\n        readonly description: \\"A reference to an external resource by ID\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly id: {\\n                readonly $ref: \\"schema:ethdebug/format/materials/id\\";\\n            };\\n            readonly type: {\\n                readonly enum: readonly [\\"compilation\\", \\"source\\"];\\n            };\\n        };\\n        readonly required: readonly [\\"id\\"];\\n        readonly unevaluatedProperties: false;\\n        readonly examples: readonly [{\\n            readonly id: 1;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/materials/source-range\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/materials/source-range\\";\\n        readonly title: \\"ethdebug/format/materials/source-range\\";\\n        readonly description: \\"A range of bytes in a particular source.\\\\n\\\\nNote that this refers to the bytes range in the original character encoding\\\\nfor the source, not the character encoding used for strings in this JSON\\\\nformat (UTF-8). For compilers that support input sources in encodings other\\\\nthan this format\'s transmission encoding, compilers **must** address source\\\\nranges in this original encoding, and debuggers **must** re-encode source\\\\ncontents obtained from this format _before_ performing any range addressing.\\\\n\\\\n(Compilers that only accept UTF-8 or ASCII are naturally exempt from this\\\\nconcern.)\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly compilation: {\\n                readonly title: \\"Compilation reference by ID\\";\\n                readonly $ref: \\"schema:ethdebug/format/materials/reference\\";\\n            };\\n            readonly source: {\\n                readonly title: \\"Source reference by ID\\";\\n                readonly $ref: \\"schema:ethdebug/format/materials/reference\\";\\n            };\\n            readonly range: {\\n                readonly title: \\"Bytes range within source contents\\";\\n                readonly description: \\"Ranges that span the entire source contents **may** omit this field\\\\nas a shorthand. This field is otherwise **required**.\\\\n\\";\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly offset: {\\n                        readonly description: \\"Byte offset at beginning of range.\\\\n\\";\\n                        readonly $ref: \\"schema:ethdebug/format/data/unsigned\\";\\n                    };\\n                    readonly length: {\\n                        readonly description: \\"Number of bytes contained in range\\";\\n                        readonly $ref: \\"schema:ethdebug/format/data/unsigned\\";\\n                    };\\n                };\\n                readonly unevaluatedProperties: false;\\n                readonly required: readonly [\\"offset\\", \\"length\\"];\\n            };\\n        };\\n        readonly unevaluatedProperties: false;\\n        readonly required: readonly [\\"source\\"];\\n        readonly examples: readonly [{\\n            readonly source: {\\n                readonly id: 5;\\n            };\\n            readonly range: {\\n                readonly offset: 20;\\n                readonly length: 100;\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/materials/source\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/materials/source\\";\\n        readonly title: \\"ethdebug/format/materials/source\\";\\n        readonly description: \\"An object representing one unit of compiler input, the raw text contents and\\\\nidentifying metadata (such as file path) that were given to the compiler as\\\\npart of a compilation.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly id: {\\n                readonly description: \\"Source identifier. This field **must** be unique for all sources\\\\nwithin a single compiler invocation (compilation).\\\\n\\";\\n                readonly $ref: \\"schema:ethdebug/format/materials/id\\";\\n            };\\n            readonly path: {\\n                readonly type: \\"string\\";\\n                readonly description: \\"Hierarchical file-system-like path to this source. This value may\\\\nbe an absolute path, a path relative to some root directory, a path\\\\nto some resource within a package, etc.\\\\n\\\\nThis value does not need to correspond to any file on disk (either\\\\nphysical or virtual), and might instead refer to a path identifier\\\\nfor a source that was generated by a compiler or other development tool.\\\\n\\\\nThis format makes no specific restrictions on how paths should be\\\\nspecified (e.g., no restriction on path separators, etc.), other than\\\\nthat values for this field should match what users observe elsewhere for\\\\nthe inputs/outputs of this particular compiler invocation.\\\\n\\\\nIf no path information is available for a particular source, e.g. if the\\\\nsource was provided to the compiler via shell standard input, this field\\\\nshould indicate that somehow (e.g., specifying `\\\\\\"path\\\\\\": \\\\\\"stdin\\\\\\"` or\\\\nsimilar).\\\\n\\\\nThis field\'s value **should** be unique across all sources within the\\\\nsame compilation.\\\\n\\";\\n            };\\n            readonly contents: {\\n                readonly description: \\"The full contents of the source, possibly re-encoded as UTF-8 to\\\\nmatch parent JSON encoding.\\\\n\\\\nIn cases where input source used a different encoding, this object\\\\n**must** also specify an `encoding` property to indicate the\\\\nencoding originally used. Where relevant, debuggers **must** also\\\\nconvert these `contents` back to the specified original encoding so\\\\nas to match code author expectations.\\\\n\\";\\n                readonly type: \\"string\\";\\n            };\\n            readonly encoding: {\\n                readonly description: \\"Character encoding of original source `contents`. This property\\\\nis **required** if this encoding does not match the JSON transmission\\\\nencoding (UTF-8), since the value of the `contents` property will\\\\nrepresent the text of the source of this JSON encoding.\\\\n\\\\nThis property **must not** appear in objects that do not specify\\\\na `contents` property.\\\\n\\";\\n                readonly type: \\"string\\";\\n            };\\n            readonly language: {\\n                readonly description: \\"The high-level language that the source contents are written in.\\\\n\\";\\n                readonly type: \\"string\\";\\n            };\\n        };\\n        readonly required: readonly [\\"id\\", \\"path\\", \\"contents\\", \\"language\\"];\\n        readonly examples: readonly [{\\n            readonly id: 5;\\n            readonly path: \\"./contracts/SimpleStorage.sol\\";\\n            readonly contents: \\"// SPDX-License-Identifier: GPL-3.0\\\\npragma solidity >=0.4.16 <0.9.0;\\\\n\\\\ncontract SimpleStorage {\\\\n    uint storedData;\\\\n\\\\n    function set(uint x) public {\\\\n        storedData = x;\\\\n    }\\\\n\\\\n    function get() public view returns (uint) {\\\\n        return storedData;\\\\n    }\\\\n}\\\\n\\";\\n            readonly language: \\"Solidity\\";\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/collection/conditional\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/collection/conditional\\";\\n        readonly title: \\"ethdebug/format/pointer/collection/conditional\\";\\n        readonly description: \\"A pointer defined conditionally based on the non-zero-ness of some expression\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly if: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer\\";\\n            };\\n            readonly else: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer\\";\\n            };\\n        };\\n        readonly required: readonly [\\"if\\", \\"then\\"];\\n        readonly additionalProperties: false;\\n        readonly examples: readonly [{\\n            readonly if: 0;\\n            readonly then: {\\n                readonly location: \\"memory\\";\\n                readonly offset: 0;\\n                readonly length: 1;\\n            };\\n            readonly else: {\\n                readonly location: \\"memory\\";\\n                readonly offset: 1;\\n                readonly length: 1;\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/collection/group\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/collection/group\\";\\n        readonly title: \\"ethdebug/format/pointer/collection/group\\";\\n        readonly description: \\"A composite collection of pointers\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly group: {\\n                readonly type: \\"array\\";\\n                readonly items: {\\n                    readonly $ref: \\"schema:ethdebug/format/pointer\\";\\n                };\\n                readonly minItems: 1;\\n            };\\n        };\\n        readonly required: readonly [\\"group\\"];\\n        readonly additionalProperties: false;\\n        readonly examples: readonly [{\\n            readonly group: readonly [{\\n                readonly name: \\"data-pointer\\";\\n                readonly location: \\"stack\\";\\n                readonly slot: 0;\\n            }, {\\n                readonly location: \\"memory\\";\\n                readonly offset: {\\n                    readonly $read: \\"data-pointer\\";\\n                };\\n                readonly length: 32;\\n            }];\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/collection/list\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/collection/list\\";\\n        readonly title: \\"ethdebug/format/pointer/collection/list\\";\\n        readonly description: \\"An ordered list of pointers, indexed starting at zero.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly list: {\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly count: {\\n                        readonly description: \\"The size of the list that this collection represents.\\\\n\\";\\n                        readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n                    };\\n                    readonly each: {\\n                        readonly description: \\"An identifier name whose value as an expression resolves to the index\\\\nin the list\\\\n\\";\\n                        readonly $ref: \\"schema:ethdebug/format/pointer/identifier\\";\\n                    };\\n                    readonly is: {\\n                        readonly description: \\"The dynamically-generated pointer repeated as a list\\\\n\\";\\n                        readonly $ref: \\"schema:ethdebug/format/pointer\\";\\n                    };\\n                };\\n                readonly required: readonly [\\"count\\", \\"each\\", \\"is\\"];\\n            };\\n        };\\n        readonly required: readonly [\\"list\\"];\\n        readonly additionalProperties: false;\\n        readonly examples: readonly [{\\n            readonly list: {\\n                readonly count: 5;\\n                readonly each: \\"index\\";\\n                readonly is: {\\n                    readonly location: \\"memory\\";\\n                    readonly offset: {\\n                        readonly $read: \\"index\\";\\n                    };\\n                    readonly length: 1;\\n                };\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/collection/reference\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/collection/reference\\";\\n        readonly title: \\"ethdebug/format/pointer/collection/reference\\";\\n        readonly description: \\"A pointer by named reference to a pointer template (defined elsewhere).\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly template: {\\n                readonly title: \\"Template identifier\\";\\n                readonly $ref: \\"schema:ethdebug/format/pointer/identifier\\";\\n            };\\n        };\\n        readonly required: readonly [\\"template\\"];\\n        readonly additionalProperties: false;\\n        readonly examples: readonly [{\\n            readonly template: \\"string-storage-pointer\\";\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/collection/scope\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/collection/scope\\";\\n        readonly title: \\"ethdebug/format/pointer/collection/scope\\";\\n        readonly description: \\"A pointer defined with the aid of additional variables with values specified\\\\nas expressions.\\\\n\\\\nVariables are specified by the `define` field as an object mapping of\\\\nexpression by identifier. Variables are specified **in order**, so that\\\\nlater appearing variables may reference earlier ones in the same object.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly define: {\\n                readonly title: \\"Mapping of variables to expression value\\";\\n                readonly type: \\"object\\";\\n                readonly patternProperties: {\\n                    readonly \\"^[a-zA-Z_\\\\\\\\-]+[a-zA-Z0-9$_\\\\\\\\-]*$\\": {\\n                        readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n                    };\\n                };\\n                readonly additionalProperties: false;\\n            };\\n            readonly in: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer\\";\\n            };\\n        };\\n        readonly required: readonly [\\"define\\", \\"in\\"];\\n        readonly additionalProperties: false;\\n        readonly examples: readonly [{\\n            readonly define: {\\n                readonly \\"example-offset\\": {\\n                    readonly $sum: readonly [1, 2];\\n                };\\n                readonly \\"example-length\\": {\\n                    readonly $product: readonly [2, \\"$wordsize\\"];\\n                };\\n            };\\n            readonly in: {\\n                readonly name: \\"example\\";\\n                readonly location: \\"memory\\";\\n                readonly offset: \\"example-offset\\";\\n                readonly length: \\"example-length\\";\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/collection\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/collection\\";\\n        readonly title: \\"ethdebug/format/pointer/collection\\";\\n        readonly description: \\"A representation of a collection of pointers to data in the EVM\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly allOf: readonly [{\\n            readonly oneOf: readonly [{\\n                readonly required: readonly [\\"group\\"];\\n            }, {\\n                readonly required: readonly [\\"list\\"];\\n            }, {\\n                readonly required: readonly [\\"if\\"];\\n            }, {\\n                readonly required: readonly [\\"define\\"];\\n            }, {\\n                readonly required: readonly [\\"template\\"];\\n            }];\\n        }, {\\n            readonly if: {\\n                readonly required: readonly [\\"group\\"];\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/collection/group\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly required: readonly [\\"list\\"];\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/collection/list\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly required: readonly [\\"if\\"];\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/collection/conditional\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly required: readonly [\\"define\\"];\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/collection/scope\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly required: readonly [\\"template\\"];\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/collection/reference\\";\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/expression\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/expression\\";\\n        readonly title: \\"ethdebug/format/pointer/expression\\";\\n        readonly description: \\"A schema for describing expressions that evaluate to values.\\\\n\\";\\n        readonly oneOf: readonly [{\\n            readonly $ref: \\"#/$defs/Literal\\";\\n        }, {\\n            readonly $ref: \\"#/$defs/Variable\\";\\n        }, {\\n            readonly $ref: \\"#/$defs/Constant\\";\\n        }, {\\n            readonly $ref: \\"#/$defs/Arithmetic\\";\\n        }, {\\n            readonly $ref: \\"#/$defs/Lookup\\";\\n        }, {\\n            readonly $ref: \\"#/$defs/Read\\";\\n        }, {\\n            readonly $ref: \\"#/$defs/Keccak256\\";\\n        }, {\\n            readonly $ref: \\"#/$defs/Resize\\";\\n        }];\\n        readonly $defs: {\\n            readonly Literal: {\\n                readonly title: \\"Literal value\\";\\n                readonly description: \\"An unsigned number or a `0x`-prefixed string of hexadecimal digits\\\\n\\";\\n                readonly oneOf: readonly [{\\n                    readonly description: \\"A non-negative integer literal\\";\\n                    readonly $ref: \\"schema:ethdebug/format/data/unsigned\\";\\n                }, {\\n                    readonly description: \\"A `0x`-prefixed hexadecimal string representing literal bytes\\\\n\\";\\n                    readonly $ref: \\"schema:ethdebug/format/data/hex\\";\\n                }];\\n                readonly examples: readonly [5, \\"0x0000000000000000000000000000000000000000000000000000000000000000\\"];\\n            };\\n            readonly Constant: {\\n                readonly title: \\"Constant value\\";\\n                readonly type: \\"string\\";\\n                readonly enum: readonly [\\"$wordsize\\"];\\n            };\\n            readonly Variable: {\\n                readonly title: \\"Variable identifier\\";\\n                readonly description: \\"A string that matches an identifier used in an earlier declaration of\\\\na scalar variable. This expression evaluates to the value of that\\\\nvariable.\\\\n\\";\\n                readonly $ref: \\"schema:ethdebug/format/pointer/identifier\\";\\n            };\\n            readonly Arithmetic: {\\n                readonly title: \\"Arithmetic operation\\";\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly $sum: {\\n                        readonly description: \\"A list of expressions to be added together.\\\\n\\";\\n                        readonly $ref: \\"#/$defs/Operands\\";\\n                    };\\n                    readonly $difference: {\\n                        readonly description: \\"A tuple of two expressions where the second is to be subtracted from\\\\nthe first.\\\\n\\\\nIf the second operand is larger than the first, the result of this\\\\narithmetic operation is defined to equal zero (`0`).\\\\n\\\\n(i.e., `{ \\\\\\"$difference\\\\\\": [a, b] }` equals `a` minus `b`.)\\\\n\\";\\n                        readonly $ref: \\"#/$defs/Operands\\";\\n                        readonly minItems: 2;\\n                        readonly maxItems: 2;\\n                    };\\n                    readonly $product: {\\n                        readonly description: \\"A list of expressions to be multipled.\\\\n\\";\\n                        readonly $ref: \\"#/$defs/Operands\\";\\n                    };\\n                    readonly $quotient: {\\n                        readonly description: \\"A tuple of two expressions where the first corresponds to the\\\\ndividend and the second corresponds to the divisor, for the purposes\\\\nof doing integer division.\\\\n\\\\n(i.e., `{ \\\\\\"$quotient\\\\\\": [a, b] }` equals `a` divided by `b`.)\\\\n\\";\\n                        readonly $ref: \\"#/$defs/Operands\\";\\n                        readonly minItems: 2;\\n                        readonly maxItems: 2;\\n                    };\\n                    readonly $remainder: {\\n                        readonly description: \\"A tuple of two expressions where the first corresponds to the\\\\ndividend and the second corresponds to the divisor, for the purposes\\\\nof computing the modular-arithmetic remainder.\\\\n\\\\n(i.e., `{ \\\\\\"$remainder\\\\\\": [a, b] }` equals `a` mod `b`.)\\\\n\\";\\n                        readonly $ref: \\"#/$defs/Operands\\";\\n                        readonly minItems: 2;\\n                        readonly maxItems: 2;\\n                    };\\n                };\\n                readonly additionalProperties: false;\\n                readonly minProperties: 1;\\n                readonly maxProperties: 1;\\n                readonly examples: readonly [{\\n                    readonly $sum: readonly [5, 3, 4];\\n                }, {\\n                    readonly $difference: readonly [5, 3];\\n                }, {\\n                    readonly $product: readonly [5, 3, 0];\\n                }, {\\n                    readonly $quotient: readonly [5, 3];\\n                }, {\\n                    readonly $remainder: readonly [{\\n                        readonly $product: readonly [2, 2, 2, 2];\\n                    }, 3];\\n                }];\\n            };\\n            readonly Operands: {\\n                readonly type: \\"array\\";\\n                readonly items: {\\n                    readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n                };\\n            };\\n            readonly Lookup: {\\n                readonly title: \\"Lookup region definition\\";\\n                readonly description: \\"An object of the form `{ \\\\\\".<property-name>\\\\\\": \\\\\\"<region>\\\\\\" }`, to\\\\ndenote that this expression is equivalent to the defined value for\\\\nthe property named `<property-name>` inside the region referenced as\\\\n`<region>`.\\\\n\\\\n`<property-name>` **must** be a valid and present property on the\\\\ncorresponding region, or it **must** correspond to an optional property\\\\nwhose schema specifies a default value for that property.\\\\n\\";\\n                readonly type: \\"object\\";\\n                readonly patternProperties: {\\n                    readonly \\"^\\\\\\\\.(offset|length|slot)$\\": {\\n                        readonly $ref: \\"#/$defs/Reference\\";\\n                    };\\n                };\\n                readonly additionalProperties: false;\\n                readonly minProperties: 1;\\n                readonly maxProperties: 1;\\n                readonly examples: readonly [{\\n                    readonly \\".offset\\": \\"array-count\\";\\n                }, {\\n                    readonly \\".length\\": \\"array-item\\";\\n                }, {\\n                    readonly \\".offset\\": \\"$this\\";\\n                }];\\n            };\\n            readonly Read: {\\n                readonly title: \\"Read region bytes\\";\\n                readonly description: \\"An object of the form `{ \\\\\\"$read\\\\\\": \\\\\\"<region>\\\\\\" }`. The value of this\\\\nexpression equals the raw bytes present in the running machine state\\\\nin the referenced region.\\\\n\\";\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly $read: {\\n                        readonly $ref: \\"#/$defs/Reference\\";\\n                    };\\n                };\\n                readonly required: readonly [\\"$read\\"];\\n                readonly additionalProperties: false;\\n                readonly examples: readonly [{\\n                    readonly $read: \\"struct-start\\";\\n                }];\\n            };\\n            readonly Reference: {\\n                readonly title: \\"Region reference\\";\\n                readonly description: \\"A string value that **must** either be the `\\\\\\"name\\\\\\"` of at least one\\\\nregion declared with `{ \\\\\\"name\\\\\\": \\\\\\"<region>\\\\\\" }` previously in some root\\\\npointer representation, or it **must** be the literal value `\\\\\\"$this\\\\\\"`,\\\\nwhich indicates a reference to the region containing this expression.\\\\n\\\\nIf more than one region is defined with the same name, resolution is\\\\ndefined as firstly resolving to the latest earlier sibling that declares\\\\nthe matching name, then secondly resolving to the parent if it matches,\\\\nthen to parent\'s earlier siblings, and so on.\\\\n\\";\\n                readonly type: \\"string\\";\\n                readonly oneOf: readonly [{\\n                    readonly $ref: \\"schema:ethdebug/format/pointer/identifier\\";\\n                }, {\\n                    readonly const: \\"$this\\";\\n                    readonly description: \\"Indicates a reference to the region containing this expression.\\\\n\\";\\n                }];\\n            };\\n            readonly Keccak256: {\\n                readonly title: \\"Keccak256 hash\\";\\n                readonly description: \\"An object of the form `{ \\\\\\"$keccak256\\\\\\": [...values] }`, indicating that this\\\\nexpression evaluates to the Solidity-style keccak256 hash of the\\\\ntightly-packed bytes encoded by `values`.\\\\n\\";\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly $keccak256: {\\n                        readonly title: \\"Array of hashed values\\";\\n                        readonly type: \\"array\\";\\n                        readonly items: {\\n                            readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n                        };\\n                    };\\n                };\\n                readonly additionalProperties: false;\\n                readonly required: readonly [\\"$keccak256\\"];\\n                readonly examples: readonly [{\\n                    readonly $keccak256: readonly [0, \\"0x00\\"];\\n                }];\\n            };\\n            readonly Resize: {\\n                readonly title: \\"Resize data\\";\\n                readonly description: \\"A resize operation expression is either an object of the form\\\\n`{ \\\\\\"$sized<N>\\\\\\": <expression> }` or an object of the form\\\\n`{ \\\\\\"$wordsized\\\\\\": <expression> }`, where `<expression>` is an expression\\\\nwhose value is to be resized, and, if applicable, where `<N>` is the\\\\nsmallest decimal representation of an unsigned integer.\\\\n\\\\nThis object\'s value is evaluated as follows, based on the bytes width of\\\\nthe value `<expression>` evaluates to and based on `<N>` (using the\\\\nvalue of `\\\\\\"$wordsize\\\\\\"` for `<N>` in the case of the latter form above):\\\\n- If the width equals `<N>`, this object evalutes to the same value as\\\\n  `<expression>` (equivalent to the identity function or no-op).\\\\n- If the width is less than `<N>`, this object evalutes to the same value\\\\n  as `<expression>` but with additional zero-bytes (`0x00`) prepended on\\\\n  the left (most significant) side, such that the resulting bytes width\\\\n  equals `<N>`.\\\\n- If the width exceeds `<N>`, this object evalutes to the same value\\\\n  as `<expression>` but with a number of bytes removed from the left\\\\n  (most significant) side until the bytes width equals `<N>`.\\\\n\\\\n(These cases match the behavior that Solidity uses for resizing its\\\\n`bytesN`/`uintN` types.)\\\\n\\";\\n                readonly type: \\"object\\";\\n                readonly oneOf: readonly [{\\n                    readonly title: \\"Resize to literal number of bytes\\";\\n                    readonly type: \\"object\\";\\n                    readonly patternProperties: {\\n                        readonly \\"^\\\\\\\\$sized([1-9]+[0-9]*)$\\": {\\n                            readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n                        };\\n                    };\\n                    readonly additionalProperties: false;\\n                }, {\\n                    readonly title: \\"Resize to word-size\\";\\n                    readonly type: \\"object\\";\\n                    readonly patternProperties: {\\n                        readonly \\"^\\\\\\\\$wordsized$\\": {\\n                            readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n                        };\\n                    };\\n                    readonly additionalProperties: false;\\n                }];\\n                readonly minProperties: 1;\\n                readonly maxProperties: 1;\\n                readonly examples: readonly [{\\n                    readonly $sized2: \\"0x00\\";\\n                }, {\\n                    readonly $sized2: \\"0xffffff\\";\\n                }, {\\n                    readonly $wordsized: \\"0x00\\";\\n                }];\\n            };\\n        };\\n        readonly examples: readonly [0, {\\n            readonly $sum: readonly [{\\n                readonly \\".offset\\": \\"array-start\\";\\n            }, {\\n                readonly \\".length\\": \\"array-start\\";\\n            }, 1];\\n        }, {\\n            readonly $keccak256: readonly [5, {\\n                readonly \\".offset\\": \\"array-start\\";\\n            }];\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/identifier\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/identifier\\";\\n        readonly title: \\"ethdebug/format/pointer/identifier\\";\\n        readonly description: \\"An identifier for use within the context of a root pointer\\\\n\\";\\n        readonly type: \\"string\\";\\n        readonly pattern: \\"^[a-zA-Z_\\\\\\\\-]+[a-zA-Z0-9$_\\\\\\\\-]*$\\";\\n        readonly examples: readonly [\\"a\\", \\"a0\\", \\"-$\\", \\"__init__\\"];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/region/base\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/region/base\\";\\n        readonly title: \\"ethdebug/format/pointer/region/base\\";\\n        readonly description: \\"Common schema for all region schemas, regardless of `\\\\\\"location\\\\\\": ...`.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly name: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/identifier\\";\\n            };\\n            readonly location: {\\n                readonly type: \\"string\\";\\n            };\\n        };\\n        readonly required: readonly [\\"location\\"];\\n        readonly examples: readonly [{\\n            readonly name: \\"array-item\\";\\n            readonly location: \\"memory\\";\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/region/calldata\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/region/calldata\\";\\n        readonly title: \\"ethdebug/format/pointer/region/calldata\\";\\n        readonly description: \\"A schema for representing a region of data in message calldata.\\\\n\\\\nThis schema is constructed by extending the base region schema\\\\nand the schema for the slice addressing scheme.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly allOf: readonly [{\\n            readonly title: \\"{\xa0\\\\\\"location\\\\\\":\xa0\\\\\\"calldata\\\\\\"\xa0}\\";\\n            readonly properties: {\\n                readonly location: {\\n                    readonly const: \\"calldata\\";\\n                };\\n            };\\n            readonly required: readonly [\\"location\\"];\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/region/base\\";\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/scheme/slice\\";\\n        }];\\n        readonly unevaluatedProperties: false;\\n        readonly examples: readonly [{\\n            readonly location: \\"calldata\\";\\n            readonly offset: \\"0x04\\";\\n            readonly length: 32;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/region/code\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/region/code\\";\\n        readonly title: \\"ethdebug/format/pointer/region/code\\";\\n        readonly description: \\"A schema for representing a region of data in EVM bytecode.\\\\n\\\\nThis schema is constructed by extending the base region schema\\\\nand the schema for the slice addressing scheme.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly allOf: readonly [{\\n            readonly title: \\"{\xa0\\\\\\"location\\\\\\":\xa0\\\\\\"code\\\\\\"\xa0}\\";\\n            readonly properties: {\\n                readonly location: {\\n                    readonly const: \\"code\\";\\n                };\\n            };\\n            readonly required: readonly [\\"location\\"];\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/region/base\\";\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/scheme/slice\\";\\n        }];\\n        readonly unevaluatedProperties: false;\\n        readonly examples: readonly [{\\n            readonly location: \\"code\\";\\n            readonly offset: \\"0x04\\";\\n            readonly length: 32;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/region/memory\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/region/memory\\";\\n        readonly title: \\"ethdebug/format/pointer/region/memory\\";\\n        readonly description: \\"A schema for representing a region of data in EVM memory. Pointer regions\\\\nwithin memory represent a single/atomic sequence of byte locations.\\\\n\\\\nThis schema is constructed by extending the base region schema\\\\nand the schema for the slice addressing scheme.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly allOf: readonly [{\\n            readonly title: \\"{\xa0\\\\\\"location\\\\\\":\xa0\\\\\\"memory\\\\\\"\xa0}\\";\\n            readonly properties: {\\n                readonly location: {\\n                    readonly const: \\"memory\\";\\n                };\\n            };\\n            readonly required: readonly [\\"location\\"];\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/region/base\\";\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/scheme/slice\\";\\n        }];\\n        readonly unevaluatedProperties: false;\\n        readonly examples: readonly [{\\n            readonly location: \\"memory\\";\\n            readonly offset: \\"0x04\\";\\n            readonly length: 32;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/region/returndata\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/region/returndata\\";\\n        readonly title: \\"ethdebug/format/pointer/region/returndata\\";\\n        readonly description: \\"A schema for representing a region of data in message returndata.\\\\n\\\\nThis schema is constructed by extending the base region schema\\\\nand the schema for the slice addressing scheme.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly allOf: readonly [{\\n            readonly title: \\"{\xa0\\\\\\"location\\\\\\":\xa0\\\\\\"returndata\\\\\\"\xa0}\\";\\n            readonly properties: {\\n                readonly location: {\\n                    readonly const: \\"returndata\\";\\n                };\\n            };\\n            readonly required: readonly [\\"location\\"];\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/region/base\\";\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/scheme/slice\\";\\n        }];\\n        readonly unevaluatedProperties: false;\\n        readonly examples: readonly [{\\n            readonly location: \\"returndata\\";\\n            readonly offset: \\"0x04\\";\\n            readonly length: 32;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/region/stack\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/region/stack\\";\\n        readonly title: \\"ethdebug/format/pointer/region/stack\\";\\n        readonly description: \\"A schema for representing a region of data in the EVM.\\\\n\\\\nDescribes stack slots as number of positions from the top (at time of\\\\nobservation). Debuggers reading this information **should** immediately\\\\nconvert these positions to absolute positions from the bottom.\\\\n\\\\nThis schema is constructed by extending the base region schema\\\\nand the schema for the segment addressing scheme.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly allOf: readonly [{\\n            readonly title: \\"{\xa0\\\\\\"location\\\\\\":\xa0\\\\\\"stack\\\\\\"\xa0}\\";\\n            readonly properties: {\\n                readonly location: {\\n                    readonly const: \\"stack\\";\\n                };\\n            };\\n            readonly required: readonly [\\"location\\"];\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/region/base\\";\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/scheme/segment\\";\\n        }];\\n        readonly unevaluatedProperties: false;\\n        readonly examples: readonly [{\\n            readonly location: \\"stack\\";\\n            readonly slot: 0;\\n        }, {\\n            readonly location: \\"stack\\";\\n            readonly slot: 1;\\n            readonly length: {\\n                readonly $product: readonly [\\"$wordsize\\", 2];\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/region/storage\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/region/storage\\";\\n        readonly title: \\"ethdebug/format/pointer/region/storage\\";\\n        readonly description: \\"A schema for representing a region of data in EVM storage.\\\\n\\\\nThis schema is constructed by extending the base region schema\\\\nand the schema for the segment addressing scheme.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly allOf: readonly [{\\n            readonly title: \\"{\xa0\\\\\\"location\\\\\\":\xa0\\\\\\"storage\\\\\\"\xa0}\\";\\n            readonly properties: {\\n                readonly location: {\\n                    readonly const: \\"storage\\";\\n                };\\n            };\\n            readonly required: readonly [\\"location\\"];\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/region/base\\";\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/scheme/segment\\";\\n        }];\\n        readonly unevaluatedProperties: false;\\n        readonly examples: readonly [{\\n            readonly location: \\"storage\\";\\n            readonly slot: \\"0x03\\";\\n        }, {\\n            readonly location: \\"storage\\";\\n            readonly slot: \\"0x06\\";\\n            readonly length: {\\n                readonly $product: readonly [\\"$wordsize\\", 2];\\n            };\\n        }, {\\n            readonly location: \\"storage\\";\\n            readonly slot: \\"0x08\\";\\n            readonly offset: {\\n                readonly $quotient: readonly [\\"$wordsize\\", 2];\\n            };\\n            readonly length: {\\n                readonly $quotient: readonly [\\"$wordsize\\", 2];\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/region/transient\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/region/transient\\";\\n        readonly title: \\"ethdebug/format/pointer/region/transient\\";\\n        readonly description: \\"A schema for representing a region of data in EVM transient storage.\\\\n\\\\nThis schema is constructed by extending the base region schema\\\\nand the schema for the segment addressing scheme.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly allOf: readonly [{\\n            readonly title: \\"{\xa0\\\\\\"location\\\\\\":\xa0\\\\\\"transient\\\\\\"\xa0}\\";\\n            readonly properties: {\\n                readonly location: {\\n                    readonly const: \\"transient\\";\\n                };\\n            };\\n            readonly required: readonly [\\"location\\"];\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/region/base\\";\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/scheme/segment\\";\\n        }];\\n        readonly unevaluatedProperties: false;\\n        readonly examples: readonly [{\\n            readonly location: \\"transient\\";\\n            readonly slot: \\"0x03\\";\\n        }, {\\n            readonly location: \\"transient\\";\\n            readonly slot: \\"0x06\\";\\n            readonly length: {\\n                readonly $product: readonly [\\"$wordsize\\", 2];\\n            };\\n        }, {\\n            readonly location: \\"transient\\";\\n            readonly slot: \\"0x08\\";\\n            readonly offset: {\\n                readonly $quotient: readonly [\\"$wordsize\\", 2];\\n            };\\n            readonly length: {\\n                readonly $quotient: readonly [\\"$wordsize\\", 2];\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/region\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/region\\";\\n        readonly title: \\"ethdebug/format/pointer/region\\";\\n        readonly description: \\"A representation of a region of data in the EVM\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly location: {\\n                readonly $ref: \\"#/$defs/Location\\";\\n            };\\n        };\\n        readonly allOf: readonly [{\\n            readonly if: {\\n                readonly properties: {\\n                    readonly location: {\\n                        readonly const: \\"stack\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/region/stack\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly location: {\\n                        readonly const: \\"memory\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/region/memory\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly location: {\\n                        readonly const: \\"storage\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/region/storage\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly location: {\\n                        readonly const: \\"calldata\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/region/calldata\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly location: {\\n                        readonly const: \\"returndata\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/region/returndata\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly location: {\\n                        readonly const: \\"transient\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/region/transient\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly location: {\\n                        readonly const: \\"code\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/region/code\\";\\n            };\\n        }];\\n        readonly $defs: {\\n            readonly Location: {\\n                readonly type: \\"string\\";\\n                readonly enum: readonly [\\"stack\\", \\"memory\\", \\"storage\\", \\"calldata\\", \\"returndata\\", \\"transient\\", \\"code\\"];\\n            };\\n        };\\n        readonly unevaluatedProperties: false;\\n        readonly examples: readonly [{\\n            readonly location: \\"storage\\";\\n            readonly slot: \\"0x0000000000000000000000000000000000000000000000000000000000000000\\";\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/scheme/segment\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/scheme/segment\\";\\n        readonly title: \\"ethdebug/format/pointer/scheme/segment\\";\\n        readonly description: \\"An addressing scheme for pointing to a range of bytes in a data location\\\\narranged as individually-addressable word-sized slots.\\\\n\\\\n**Note** that this addressing scheme permits addressing byte ranges that\\\\nextend beyond the last byte of a particular slot, or even covering the range\\\\nof multiple slots.\\\\n\\\\nIn such cases, this schema defines the range as the concatenation of bytes\\\\nacross slots such that the address of the first byte after the end of slot\\\\n`p` (i.e., `{ \\\\\\"offset\\\\\\": \\\\\\"$wordsize\\\\\\" }`) is interpreted as the first byte of\\\\nslot `p + 1`.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly slot: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n            };\\n            readonly offset: {\\n                readonly description: \\"The starting byte index within the slot.\\\\n\\\\nThis field is **optional**. If unspecified, it has the default value of\\\\n`0`, indicating that the segment begins at the start of the specified\\\\nslot.\\\\n\\\\nThis field\'s expression must resolve to a value _n_ such that\\\\n0&nbsp;\u2264&nbsp;_n_&nbsp;\\\\\\\\<&nbsp;`$wordsize` (i.e., the offset **must**\\\\nbegin inside the slot).\\\\n\\";\\n                readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n                readonly default: 0;\\n            };\\n            readonly length: {\\n                readonly description: \\"The length of the bytes range this segment represents.\\\\n\\\\nThis field is **optional**. If unspecified, its default value indicates\\\\nthat the segment ends at the end of the slot.\\\\n\\\\nIf this field has value larger than the default value, i.e., if the\\\\nsegment extends beyond the last byte in the slot, then this segment is\\\\ndefined to be the concatenation of the sequentially-addressed slot(s)\\\\nfollowing following the slot specified.\\\\n\\";\\n                readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n                readonly default: {\\n                    readonly $difference: readonly [\\"$wordsize\\", {\\n                        readonly \\".offset\\": \\"$this\\";\\n                    }];\\n                };\\n            };\\n        };\\n        readonly required: readonly [\\"slot\\"];\\n        readonly examples: readonly [{\\n            readonly slot: 0;\\n        }, {\\n            readonly slot: 1;\\n            readonly length: {\\n                readonly $product: readonly [\\"$wordsize\\", 3];\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/scheme/slice\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/scheme/slice\\";\\n        readonly title: \\"ethdebug/format/pointer/scheme/slice\\";\\n        readonly description: \\"An addressing scheme for pointing to a range of sequential bytes inside\\\\na data location whose structure is that of a regular bytes array\\\\n(i.e., where bytes are indexed by byte offset, with no concept of word).\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly offset: {\\n                readonly description: \\"The index of the byte (starting from zero) in the data location where\\\\nthe slice begins.\\\\n\\";\\n                readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n            };\\n            readonly length: {\\n                readonly description: \\"The length of the slice in number of bytes.\\\\n\\";\\n                readonly $ref: \\"schema:ethdebug/format/pointer/expression\\";\\n            };\\n        };\\n        readonly required: readonly [\\"offset\\", \\"length\\"];\\n        readonly examples: readonly [{\\n            readonly offset: 0;\\n            readonly length: 32;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer/template\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer/template\\";\\n        readonly title: \\"ethdebug/format/pointer/template\\";\\n        readonly description: \\"A schema for representing a pointer defined in terms of some variables whose\\\\nvalues are to be provided when invoking the template.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly expect: {\\n                readonly title: \\"Template variables\\";\\n                readonly description: \\"An array of variable identifiers used in the definition of the\\\\npointer template.\\\\n\\";\\n                readonly type: \\"array\\";\\n                readonly items: {\\n                    readonly $ref: \\"schema:ethdebug/format/pointer/identifier\\";\\n                };\\n                readonly additionalItems: false;\\n            };\\n            readonly for: {\\n                readonly $ref: \\"schema:ethdebug/format/pointer\\";\\n            };\\n        };\\n        readonly required: readonly [\\"expect\\", \\"for\\"];\\n        readonly additionalProperties: false;\\n        readonly examples: readonly [{\\n            readonly expect: readonly [\\"slot\\"];\\n            readonly for: {\\n                readonly location: \\"storage\\";\\n                readonly slot: \\"slot\\";\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/pointer\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/pointer\\";\\n        readonly title: \\"ethdebug/format/pointer\\";\\n        readonly description: \\"A schema for representing a pointer to a data position or a range of data\\\\npositions in the EVM.\\\\n\\\\nAn **ethdebug/format/pointer** is either a single region or a structured\\\\ncollection of other pointers.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly if: {\\n            readonly required: readonly [\\"location\\"];\\n        };\\n        readonly then: {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/region\\";\\n        };\\n        readonly else: {\\n            readonly $ref: \\"schema:ethdebug/format/pointer/collection\\";\\n        };\\n        readonly examples: readonly [{\\n            readonly location: \\"storage\\";\\n            readonly slot: 2;\\n        }, {\\n            readonly define: {\\n                readonly \\"uint256-array-memory-pointer-slot\\": 0;\\n            };\\n            readonly in: {\\n                readonly group: readonly [{\\n                    readonly name: \\"array-start\\";\\n                    readonly location: \\"stack\\";\\n                    readonly slot: \\"uint256-array-memory-pointer-slot\\";\\n                }, {\\n                    readonly name: \\"array-count\\";\\n                    readonly location: \\"memory\\";\\n                    readonly offset: {\\n                        readonly $read: \\"array-start\\";\\n                    };\\n                    readonly length: \\"$wordsize\\";\\n                }, {\\n                    readonly list: {\\n                        readonly count: {\\n                            readonly $read: \\"array-count\\";\\n                        };\\n                        readonly each: \\"item-index\\";\\n                        readonly is: {\\n                            readonly name: \\"array-item\\";\\n                            readonly location: \\"memory\\";\\n                            readonly offset: {\\n                                readonly $sum: readonly [{\\n                                    readonly \\".offset\\": \\"array-count\\";\\n                                }, {\\n                                    readonly \\".length\\": \\"array-count\\";\\n                                }, {\\n                                    readonly $product: readonly [\\"item-index\\", {\\n                                        readonly \\".length\\": \\"$this\\";\\n                                    }];\\n                                }];\\n                            };\\n                            readonly length: \\"$wordsize\\";\\n                        };\\n                    };\\n                }];\\n            };\\n        }, {\\n            readonly define: {\\n                readonly \\"struct-storage-contract-variable-slot\\": 0;\\n            };\\n            readonly in: {\\n                readonly group: readonly [{\\n                    readonly name: \\"x\\";\\n                    readonly location: \\"storage\\";\\n                    readonly slot: \\"struct-storage-contract-variable-slot\\";\\n                    readonly offset: {\\n                        readonly $difference: readonly [\\"$wordsize\\", {\\n                            readonly \\".length\\": \\"$this\\";\\n                        }];\\n                    };\\n                    readonly length: 1;\\n                }, {\\n                    readonly name: \\"y\\";\\n                    readonly location: \\"storage\\";\\n                    readonly slot: \\"struct-storage-contract-variable-slot\\";\\n                    readonly offset: {\\n                        readonly $difference: readonly [{\\n                            readonly \\".offset\\": \\"x\\";\\n                        }, {\\n                            readonly \\".length\\": \\"$this\\";\\n                        }];\\n                    };\\n                    readonly length: 1;\\n                }, {\\n                    readonly name: \\"salt\\";\\n                    readonly location: \\"storage\\";\\n                    readonly slot: \\"struct-storage-contract-variable-slot\\";\\n                    readonly offset: {\\n                        readonly $difference: readonly [{\\n                            readonly \\".offset\\": \\"y\\";\\n                        }, {\\n                            readonly \\".length\\": \\"$this\\";\\n                        }];\\n                    };\\n                    readonly length: 4;\\n                }];\\n            };\\n        }, {\\n            readonly group: readonly [{\\n                readonly name: \\"array-start\\";\\n                readonly location: \\"stack\\";\\n                readonly slot: 0;\\n            }, {\\n                readonly name: \\"array-count\\";\\n                readonly location: \\"memory\\";\\n                readonly offset: {\\n                    readonly $read: \\"array-start\\";\\n                };\\n                readonly length: \\"$wordsize\\";\\n            }, {\\n                readonly list: {\\n                    readonly count: {\\n                        readonly $read: \\"array-count\\";\\n                    };\\n                    readonly each: \\"item-index\\";\\n                    readonly is: {\\n                        readonly group: readonly [{\\n                            readonly name: \\"struct-pointer\\";\\n                            readonly location: \\"memory\\";\\n                            readonly offset: {\\n                                readonly $sum: readonly [{\\n                                    readonly \\".offset\\": \\"array-count\\";\\n                                }, {\\n                                    readonly \\".length\\": \\"array-count\\";\\n                                }, {\\n                                    readonly $product: readonly [\\"item-index\\", {\\n                                        readonly \\".length\\": \\"struct-pointer\\";\\n                                    }];\\n                                }];\\n                            };\\n                            readonly length: \\"$wordsize\\";\\n                        }, {\\n                            readonly name: \\"struct-member-0\\";\\n                            readonly location: \\"memory\\";\\n                            readonly offset: {\\n                                readonly $read: \\"struct-pointer\\";\\n                            };\\n                            readonly length: \\"$wordsize\\";\\n                        }, {\\n                            readonly name: \\"struct-member-1\\";\\n                            readonly location: \\"memory\\";\\n                            readonly offset: {\\n                                readonly $sum: readonly [{\\n                                    readonly \\".offset\\": \\"struct-member-0\\";\\n                                }, {\\n                                    readonly \\".length\\": \\"struct-member-0\\";\\n                                }];\\n                            };\\n                            readonly length: \\"$wordsize\\";\\n                        }];\\n                    };\\n                };\\n            }];\\n        }, {\\n            readonly define: {\\n                readonly \\"string-storage-contract-variable-slot\\": 0;\\n            };\\n            readonly in: {\\n                readonly group: readonly [{\\n                    readonly name: \\"length-flag\\";\\n                    readonly location: \\"storage\\";\\n                    readonly slot: \\"string-storage-contract-variable-slot\\";\\n                    readonly offset: {\\n                        readonly $difference: readonly [\\"$wordsize\\", 1];\\n                    };\\n                    readonly length: 1;\\n                }, {\\n                    readonly if: {\\n                        readonly $remainder: readonly [{\\n                            readonly $sum: readonly [{\\n                                readonly $read: \\"length-flag\\";\\n                            }, 1];\\n                        }, 2];\\n                    };\\n                    readonly then: {\\n                        readonly define: {\\n                            readonly \\"string-length\\": {\\n                                readonly $quotient: readonly [{\\n                                    readonly $read: \\"length-flag\\";\\n                                }, 2];\\n                            };\\n                        };\\n                        readonly in: {\\n                            readonly name: \\"string\\";\\n                            readonly location: \\"storage\\";\\n                            readonly slot: \\"string-storage-contract-variable-slot\\";\\n                            readonly offset: 0;\\n                            readonly length: \\"string-length\\";\\n                        };\\n                    };\\n                    readonly else: {\\n                        readonly group: readonly [{\\n                            readonly name: \\"long-string-length-data\\";\\n                            readonly location: \\"storage\\";\\n                            readonly slot: \\"string-storage-contract-variable-slot\\";\\n                            readonly offset: 0;\\n                            readonly length: \\"$wordsize\\";\\n                        }, {\\n                            readonly define: {\\n                                readonly \\"string-length\\": {\\n                                    readonly $quotient: readonly [{\\n                                        readonly $difference: readonly [{\\n                                            readonly $read: \\"long-string-length-data\\";\\n                                        }, 1];\\n                                    }, 2];\\n                                };\\n                                readonly \\"start-slot\\": {\\n                                    readonly $keccak256: readonly [{\\n                                        readonly $wordsized: \\"string-storage-contract-variable-slot\\";\\n                                    }];\\n                                };\\n                                readonly \\"total-slots\\": {\\n                                    readonly $quotient: readonly [{\\n                                        readonly $sum: readonly [\\"string-length\\", {\\n                                            readonly $difference: readonly [\\"$wordsize\\", 1];\\n                                        }];\\n                                    }, \\"$wordsize\\"];\\n                                };\\n                            };\\n                            readonly in: {\\n                                readonly list: {\\n                                    readonly count: \\"total-slots\\";\\n                                    readonly each: \\"i\\";\\n                                    readonly is: {\\n                                        readonly define: {\\n                                            readonly \\"current-slot\\": {\\n                                                readonly $sum: readonly [\\"start-slot\\", \\"i\\"];\\n                                            };\\n                                            readonly \\"previous-length\\": {\\n                                                readonly $product: readonly [\\"i\\", \\"$wordsize\\"];\\n                                            };\\n                                        };\\n                                        readonly in: {\\n                                            readonly if: {\\n                                                readonly $difference: readonly [\\"string-length\\", {\\n                                                    readonly $sum: readonly [\\"previous-length\\", \\"$wordsize\\"];\\n                                                }];\\n                                            };\\n                                            readonly then: {\\n                                                readonly name: \\"string\\";\\n                                                readonly location: \\"storage\\";\\n                                                readonly slot: \\"current-slot\\";\\n                                            };\\n                                            readonly else: {\\n                                                readonly name: \\"string\\";\\n                                                readonly location: \\"storage\\";\\n                                                readonly slot: \\"current-slot\\";\\n                                                readonly offset: 0;\\n                                                readonly length: {\\n                                                    readonly $difference: readonly [\\"string-length\\", \\"previous-length\\"];\\n                                                };\\n                                            };\\n                                        };\\n                                    };\\n                                };\\n                            };\\n                        }];\\n                    };\\n                }];\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/program/context/code\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/program/context/code\\";\\n        readonly title: \\"ethdebug/format/program/context/code\\";\\n        readonly description: \\"Information about the source code range corresponding to this point in\\\\nmachine execution.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly code: {\\n                readonly $ref: \\"schema:ethdebug/format/materials/source-range\\";\\n            };\\n        };\\n        readonly required: readonly [\\"code\\"];\\n        readonly examples: readonly [{\\n            readonly code: {\\n                readonly source: {\\n                    readonly id: 5;\\n                };\\n                readonly range: {\\n                    readonly offset: 68;\\n                    readonly length: 16;\\n                };\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/program/context/name\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/program/context/name\\";\\n        readonly title: \\"ethdebug/format/program/context/name\\";\\n        readonly description: \\"The name of the context, for use in disambiguating future instruction\\\\nannotations that specify one of several possible contexts based on\\\\ninformation only available at runtime.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly name: {\\n                readonly type: \\"string\\";\\n            };\\n        };\\n        readonly required: readonly [\\"name\\"];\\n        readonly examples: readonly [{\\n            readonly name: \\"Array<T=bytes32>\\";\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/program/context/variables\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/program/context/variables\\";\\n        readonly title: \\"ethdebug/format/program/context/variables\\";\\n        readonly description: \\"Information about known variables at this context\'s point in code\\\\nexecution, specified as an array whose items each correspond to a unique\\\\nvariable.\\\\n\\\\nItems in this array **should not** have duplicate non-empty `identifier`\\\\nvalues except where high-level language semantics require it. Where\\\\npossible, use other mechanisms provided by this format to indicate that\\\\nan identifier\'s corresponding variable is ambiguous.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly variables: {\\n                readonly type: \\"array\\";\\n                readonly items: {\\n                    readonly $ref: \\"#/$defs/Variable\\";\\n                };\\n                readonly minItems: 1;\\n                readonly additionalItems: false;\\n            };\\n        };\\n        readonly required: readonly [\\"variables\\"];\\n        readonly examples: readonly [{\\n            readonly variables: readonly [{\\n                readonly identifier: \\"x\\";\\n                readonly declaration: {\\n                    readonly source: {\\n                        readonly id: 5;\\n                    };\\n                    readonly range: {\\n                        readonly offset: 10;\\n                        readonly length: 56;\\n                    };\\n                };\\n                readonly type: {\\n                    readonly kind: \\"string\\";\\n                };\\n                readonly pointer: {\\n                    readonly location: \\"storage\\";\\n                    readonly slot: 0;\\n                };\\n            }];\\n        }];\\n        readonly $defs: {\\n            readonly Variable: {\\n                readonly title: \\"Variable\\";\\n                readonly description: \\"The information known about a variable at a particular point in the code\\\\nexecution.\\\\n\\";\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly identifier: {\\n                        readonly type: \\"string\\";\\n                        readonly minLength: 1;\\n                    };\\n                    readonly declaration: {\\n                        readonly description: \\"Source range corresponding to where the variable was declared.\\\\n\\";\\n                        readonly $ref: \\"schema:ethdebug/format/materials/source-range\\";\\n                    };\\n                    readonly type: {\\n                        readonly description: \\"The variable\'s static type, if it exists. This **must** be specified\\\\neither as a full **ethdebug/format/type** representation, or an\\\\n`{ \\\\\\"id\\\\\\": \\\\\\"...\\\\\\" }` type reference object.\\\\n\\";\\n                        readonly oneOf: readonly [{\\n                            readonly $ref: \\"schema:ethdebug/format/type\\";\\n                        }, {\\n                            readonly $ref: \\"schema:ethdebug/format/type/reference\\";\\n                        }];\\n                    };\\n                    readonly pointer: {\\n                        readonly description: \\"Allocation information for the variable, if it exists.\\\\n\\";\\n                        readonly $ref: \\"schema:ethdebug/format/pointer\\";\\n                    };\\n                };\\n                readonly examples: readonly [{\\n                    readonly identifier: \\"x\\";\\n                    readonly declaration: {\\n                        readonly source: {\\n                            readonly id: 5;\\n                        };\\n                        readonly range: {\\n                            readonly offset: 10;\\n                            readonly length: 56;\\n                        };\\n                    };\\n                }];\\n            };\\n        };\\n    };\\n    readonly \\"schema:ethdebug/format/program/context\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/program/context\\";\\n        readonly title: \\"ethdebug/format/program/context\\";\\n        readonly description: \\"A schema for representing the information known at compile-time about the\\\\nhigh-level language concerns at a particular point in code execution.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly anyOf: readonly [{\\n            readonly $ref: \\"schema:ethdebug/format/program/context/code\\";\\n        }, {\\n            readonly $ref: \\"schema:ethdebug/format/program/context/variables\\";\\n        }];\\n        readonly minProperties: 1;\\n        readonly unevaluatedProperties: false;\\n        readonly examples: readonly [{\\n            readonly variables: readonly [{\\n                readonly identifier: \\"x\\";\\n                readonly declaration: {\\n                    readonly source: {\\n                        readonly id: 5;\\n                    };\\n                    readonly range: {\\n                        readonly offset: 10;\\n                        readonly length: 56;\\n                    };\\n                };\\n                readonly type: {\\n                    readonly kind: \\"string\\";\\n                };\\n                readonly pointer: {\\n                    readonly location: \\"storage\\";\\n                    readonly slot: 0;\\n                };\\n            }];\\n            readonly code: {\\n                readonly source: {\\n                    readonly id: 5;\\n                };\\n                readonly range: {\\n                    readonly offset: 68;\\n                    readonly length: 16;\\n                };\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/program/instruction\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/program/instruction\\";\\n        readonly title: \\"ethdebug/format/program/instruction\\";\\n        readonly description: \\"A schema for representing the information pertaining to a particular\\\\ninstruction in machine code.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly offset: {\\n                readonly title: \\"Instruction byte offset\\";\\n                readonly description: \\"The byte offset where the instruction begins within the bytecode.\\\\n\\\\nFor legacy contract bytecode (non-EOF), this value is equivalent to the\\\\ninstruction\'s program counter. For EOF bytecode, this value **must** be\\\\nthe offset from the start of the container, not the start of a particular\\\\ncode section within that container.\\\\n\\";\\n                readonly oneOf: readonly [{\\n                    readonly $ref: \\"schema:ethdebug/format/data/unsigned\\";\\n                }, {\\n                    readonly $ref: \\"schema:ethdebug/format/data/hex\\";\\n                }];\\n            };\\n            readonly operation: {\\n                readonly title: \\"Machine operation information\\";\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly mnemonic: {\\n                        readonly description: \\"The mnemonic operation code (PUSH1, e.g.)\\";\\n                        readonly type: \\"string\\";\\n                    };\\n                    readonly arguments: {\\n                        readonly description: \\"The immediate arguments to the operation, if relevant.\\";\\n                        readonly type: \\"array\\";\\n                        readonly minItems: 1;\\n                        readonly items: {\\n                            readonly description: \\"An immediate value, specified as a `0x`-prefixed hexadecimal string.\\\\n\\";\\n                            readonly type: \\"string\\";\\n                            readonly pattern: \\"^0x[0-9a-fA-F]{1,}$\\";\\n                        };\\n                    };\\n                };\\n                readonly required: readonly [\\"mnemonic\\"];\\n            };\\n            readonly context: {\\n                readonly description: \\"The context known to exist following the execution of this instruction.\\\\n\\";\\n                readonly $ref: \\"schema:ethdebug/format/program/context\\";\\n            };\\n        };\\n        readonly required: readonly [\\"offset\\", \\"context\\"];\\n        readonly examples: readonly [{\\n            readonly offset: 0;\\n            readonly operation: {\\n                readonly mnemonic: \\"PUSH1\\";\\n                readonly arguments: readonly [\\"0x60\\"];\\n            };\\n            readonly context: {\\n                readonly code: {\\n                    readonly source: {\\n                        readonly id: 5;\\n                    };\\n                    readonly range: {\\n                        readonly offset: 10;\\n                        readonly length: 30;\\n                    };\\n                };\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/program\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/program\\";\\n        readonly title: \\"ethdebug/format/program\\";\\n        readonly description: \\"Debugging information about a particular bytecode in a compilation.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly compilation: {\\n                readonly title: \\"Compilation reference by ID\\";\\n                readonly description: \\"A reference to the compilation as an `{ \\\\\\"id\\\\\\": ... }` object.\\\\n\\";\\n                readonly $ref: \\"schema:ethdebug/format/materials/reference\\";\\n            };\\n            readonly contract: {\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly name: {\\n                        readonly type: \\"string\\";\\n                    };\\n                    readonly definition: {\\n                        readonly $ref: \\"schema:ethdebug/format/materials/source-range\\";\\n                    };\\n                };\\n                readonly required: readonly [\\"definition\\"];\\n            };\\n            readonly environment: {\\n                readonly title: \\"Bytecode execution environment\\";\\n                readonly description: \\"Whether this bytecode is for contract creation or runtime calls.\\\\n\\";\\n                readonly type: \\"string\\";\\n                readonly enum: readonly [\\"call\\", \\"create\\"];\\n            };\\n            readonly context: {\\n                readonly description: \\"The context known to exist prior to the execution of the first\\\\ninstruction in the bytecode.\\\\n\\";\\n                readonly $ref: \\"schema:ethdebug/format/program/context\\";\\n            };\\n            readonly instructions: {\\n                readonly type: \\"array\\";\\n                readonly description: \\"The full array of instructions for the bytecode.\\\\n\\";\\n                readonly items: {\\n                    readonly $ref: \\"schema:ethdebug/format/program/instruction\\";\\n                };\\n                readonly additionalItems: false;\\n            };\\n        };\\n        readonly required: readonly [\\"contract\\", \\"environment\\", \\"instructions\\"];\\n        readonly examples: readonly [{\\n            readonly contract: {\\n                readonly name: \\"Incrementer\\";\\n                readonly definition: {\\n                    readonly source: {\\n                        readonly id: 0;\\n                    };\\n                };\\n            };\\n            readonly environment: \\"call\\";\\n            readonly context: {\\n                readonly variables: readonly [{\\n                    readonly identifier: \\"storedValue\\";\\n                    readonly type: {\\n                        readonly kind: \\"uint\\";\\n                        readonly bits: 256;\\n                    };\\n                    readonly pointer: {\\n                        readonly location: \\"storage\\";\\n                        readonly slot: 0;\\n                    };\\n                }];\\n            };\\n            readonly instructions: readonly [{\\n                readonly offset: 0;\\n                readonly operation: {\\n                    readonly mnemonic: \\"PUSH0\\";\\n                };\\n                readonly context: {\\n                    readonly variables: readonly [{\\n                        readonly identifier: \\"storedValue\\";\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                        readonly pointer: {\\n                            readonly location: \\"storage\\";\\n                            readonly slot: 0;\\n                        };\\n                    }];\\n                };\\n            }, {\\n                readonly offset: 1;\\n                readonly operation: {\\n                    readonly mnemonic: \\"SLOAD\\";\\n                };\\n                readonly context: {\\n                    readonly variables: readonly [{\\n                        readonly identifier: \\"storedValue\\";\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                        readonly pointer: {\\n                            readonly location: \\"storage\\";\\n                            readonly slot: 0;\\n                        };\\n                    }, {\\n                        readonly identifier: \\"localValue\\";\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                        readonly pointer: {\\n                            readonly location: \\"stack\\";\\n                            readonly slot: 0;\\n                        };\\n                    }];\\n                };\\n            }, {\\n                readonly offset: 2;\\n                readonly operation: {\\n                    readonly mnemonic: \\"PUSH1\\";\\n                    readonly arguments: readonly [\\"0x01\\"];\\n                };\\n                readonly context: {\\n                    readonly variables: readonly [{\\n                        readonly identifier: \\"storedValue\\";\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                        readonly pointer: {\\n                            readonly location: \\"storage\\";\\n                            readonly slot: 0;\\n                        };\\n                    }, {\\n                        readonly \\"<<\\": {\\n                            readonly identifier: \\"localValue\\";\\n                            readonly type: {\\n                                readonly kind: \\"uint\\";\\n                                readonly bits: 256;\\n                            };\\n                            readonly pointer: {\\n                                readonly location: \\"stack\\";\\n                                readonly slot: 0;\\n                            };\\n                        };\\n                        readonly pointer: {\\n                            readonly location: \\"stack\\";\\n                            readonly slot: 1;\\n                        };\\n                    }];\\n                };\\n            }, {\\n                readonly offset: 4;\\n                readonly operation: {\\n                    readonly mnemonic: \\"ADD\\";\\n                };\\n                readonly context: {\\n                    readonly variables: readonly [{\\n                        readonly identifier: \\"storedValue\\";\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                        readonly pointer: {\\n                            readonly location: \\"storage\\";\\n                            readonly slot: 0;\\n                        };\\n                    }, {\\n                        readonly identifier: \\"localValue\\";\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                        readonly pointer: {\\n                            readonly location: \\"stack\\";\\n                            readonly slot: 0;\\n                        };\\n                    }];\\n                };\\n            }, {\\n                readonly offset: 5;\\n                readonly operation: {\\n                    readonly mnemonic: \\"PUSH0\\";\\n                };\\n                readonly context: {\\n                    readonly variables: readonly [{\\n                        readonly identifier: \\"storedValue\\";\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                        readonly pointer: {\\n                            readonly location: \\"storage\\";\\n                            readonly slot: 0;\\n                        };\\n                    }, {\\n                        readonly \\"<<\\": {\\n                            readonly identifier: \\"localValue\\";\\n                            readonly type: {\\n                                readonly kind: \\"uint\\";\\n                                readonly bits: 256;\\n                            };\\n                            readonly pointer: {\\n                                readonly location: \\"stack\\";\\n                                readonly slot: 0;\\n                            };\\n                        };\\n                        readonly pointer: {\\n                            readonly location: \\"stack\\";\\n                            readonly slot: 1;\\n                        };\\n                    }];\\n                };\\n            }, {\\n                readonly offset: 6;\\n                readonly operation: {\\n                    readonly mnemonic: \\"SSTORE\\";\\n                };\\n                readonly context: {\\n                    readonly variables: readonly [{\\n                        readonly identifier: \\"storedValue\\";\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                        readonly pointer: {\\n                            readonly location: \\"storage\\";\\n                            readonly slot: 0;\\n                        };\\n                    }];\\n                };\\n            }];\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/base\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/base\\";\\n        readonly title: \\"ethdebug/format/type/base\\";\\n        readonly description: \\"Defines the minimally necessary schema for a data type. Types belong to a particular `class` (`\\\\\\"elementary\\\\\\"` or `\\\\\\"complex\\\\\\"`), and are further identified by a particular `kind`.\\";\\n        readonly type: \\"object\\";\\n        readonly oneOf: readonly [{\\n            readonly $ref: \\"#/$defs/ElementaryType\\";\\n        }, {\\n            readonly $ref: \\"#/$defs/ComplexType\\";\\n        }];\\n        readonly $defs: {\\n            readonly ElementaryType: {\\n                readonly title: \\"Base elementary type\\";\\n                readonly description: \\"Represents an elementary type (one that does not compose other types)\\";\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly class: {\\n                        readonly type: \\"string\\";\\n                        readonly const: \\"elementary\\";\\n                    };\\n                    readonly kind: {\\n                        readonly type: \\"string\\";\\n                    };\\n                    readonly contains: {\\n                        readonly not: {\\n                            readonly description: \\"Elementary types **must not** specify a `contains` field (to make it easier to discriminate elementary vs. complex)\\";\\n                        };\\n                    };\\n                };\\n                readonly required: readonly [\\"kind\\"];\\n                readonly examples: readonly [{\\n                    readonly kind: \\"uint\\";\\n                    readonly bits: 256;\\n                }];\\n            };\\n            readonly ComplexType: {\\n                readonly title: \\"Base complex type\\";\\n                readonly description: \\"Represents a complex type, one that composes other types (e.g., arrays, structs, mappings)\\";\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly class: {\\n                        readonly type: \\"string\\";\\n                        readonly const: \\"complex\\";\\n                        readonly description: \\"Indicates that this is a complex type\\";\\n                    };\\n                    readonly kind: {\\n                        readonly type: \\"string\\";\\n                        readonly description: \\"The specific kind of complex type, e.g., array or struct\\";\\n                    };\\n                    readonly contains: {\\n                        readonly title: \\"Complex type `contains` field\\";\\n                        readonly description: \\"Either a type wrapper, an array of type wrappers, or an object mapping to type wrappers.\\";\\n                        readonly oneOf: readonly [{\\n                            readonly $ref: \\"#/$defs/TypeWrapper\\";\\n                        }, {\\n                            readonly $ref: \\"#/$defs/TypeWrapperArray\\";\\n                        }, {\\n                            readonly $ref: \\"#/$defs/TypeWrapperObject\\";\\n                        }];\\n                    };\\n                };\\n                readonly required: readonly [\\"kind\\", \\"contains\\"];\\n                readonly examples: readonly [{\\n                    readonly kind: \\"array\\";\\n                    readonly contains: {\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                    };\\n                }, {\\n                    readonly kind: \\"struct\\";\\n                    readonly contains: readonly [{\\n                        readonly member: \\"x\\";\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                    }, {\\n                        readonly member: \\"y\\";\\n                        readonly type: {\\n                            readonly kind: \\"uint\\";\\n                            readonly bits: 256;\\n                        };\\n                    }];\\n                }, {\\n                    readonly kind: \\"mapping\\";\\n                    readonly contains: {\\n                        readonly key: {\\n                            readonly type: {\\n                                readonly kind: \\"address\\";\\n                                readonly payable: true;\\n                            };\\n                        };\\n                        readonly value: {\\n                            readonly type: {\\n                                readonly kind: \\"uint\\";\\n                                readonly bits: 256;\\n                            };\\n                        };\\n                    };\\n                }];\\n            };\\n            readonly TypeWrapper: {\\n                readonly title: \\"{ \\\\\\"type\\\\\\": ... }\\";\\n                readonly description: \\"A wrapper around a type. Defines a `\\\\\\"type\\\\\\"` field that may include a full Type representation or a reference to a known Type by ID. Note that this schema permits additional properties on the same object.\\";\\n                readonly type: \\"object\\";\\n                readonly properties: {\\n                    readonly type: {\\n                        readonly oneOf: readonly [{\\n                            readonly $ref: \\"schema:ethdebug/format/type/base\\";\\n                        }, {\\n                            readonly $ref: \\"schema:ethdebug/format/type/reference\\";\\n                        }];\\n                    };\\n                };\\n                readonly required: readonly [\\"type\\"];\\n            };\\n            readonly TypeWrapperArray: {\\n                readonly title: \\"{ \\\\\\"type\\\\\\": ... }[]\\";\\n                readonly description: \\"A list of wrapped types, where the wrapper may add fields\\";\\n                readonly type: \\"array\\";\\n                readonly items: {\\n                    readonly $ref: \\"#/$defs/TypeWrapper\\";\\n                };\\n            };\\n            readonly TypeWrapperObject: {\\n                readonly title: \\"{ \\\\\\"key\\\\\\": { \\\\\\"type\\\\\\": ... }, ... }\\";\\n                readonly description: \\"A key-value mapping of wrapped types, where the wrapper may add fields\\";\\n                readonly type: \\"object\\";\\n                readonly additionalProperties: {\\n                    readonly $ref: \\"#/$defs/TypeWrapper\\";\\n                };\\n            };\\n        };\\n    };\\n    readonly \\"schema:ethdebug/format/type/complex/alias\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/complex/alias\\";\\n        readonly title: \\"ethdebug/format/type/complex/alias\\";\\n        readonly description: \\"Schema representing a type alias to another type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"complex\\";\\n            };\\n            readonly kind: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"alias\\";\\n            };\\n            readonly contains: {\\n                readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n            };\\n            readonly definition: {\\n                readonly $ref: \\"schema:ethdebug/format/type/definition\\";\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\", \\"contains\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"alias\\";\\n            readonly contains: {\\n                readonly type: {\\n                    readonly kind: \\"uint\\";\\n                    readonly bits: 256;\\n                };\\n            };\\n        }, {\\n            readonly kind: \\"alias\\";\\n            readonly contains: {\\n                readonly type: {\\n                    readonly kind: \\"array\\";\\n                    readonly contains: {\\n                        readonly type: {\\n                            readonly class: \\"elementary\\";\\n                            readonly kind: \\"super-uint\\";\\n                            readonly blits: -256;\\n                        };\\n                    };\\n                };\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/complex/array\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/complex/array\\";\\n        readonly title: \\"ethdebug/format/type/complex/array\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"complex\\";\\n            };\\n            readonly kind: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"array\\";\\n            };\\n            readonly contains: {\\n                readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\", \\"contains\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"array\\";\\n            readonly contains: {\\n                readonly type: {\\n                    readonly kind: \\"uint\\";\\n                    readonly bits: 256;\\n                };\\n            };\\n        }, {\\n            readonly kind: \\"array\\";\\n            readonly contains: {\\n                readonly type: {\\n                    readonly kind: \\"array\\";\\n                    readonly contains: {\\n                        readonly type: {\\n                            readonly class: \\"elementary\\";\\n                            readonly kind: \\"super-uint\\";\\n                            readonly blits: -256;\\n                        };\\n                    };\\n                };\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/complex/function\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/complex/function\\";\\n        readonly title: \\"ethdebug/format/type/complex/function\\";\\n        readonly description: \\"Schema for representing a function type.\\\\n\\\\nType representations must indicate whether they represent a function that is\\\\ncalled internally (within the semantics of the language) or a function that\\\\nis called externally (via EVM contract call semantics and the Solidity ABI).\\\\nInternal function types require the `\\\\\\"internal\\\\\\": true` field; external\\\\nfunction types require `\\\\\\"external\\\\\\": true`.\\\\n\\\\nNote that external function types may include a representation of the\\\\ncontract type that defines or provides this function as an external\\\\ninterface.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"complex\\";\\n            };\\n            readonly kind: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"function\\";\\n            };\\n            readonly contains: {\\n                readonly type: \\"object\\";\\n                readonly title: \\"Parameter and return types\\";\\n                readonly description: \\"Types this function type composes. Function types inherently compose\\\\ntwo groupings of types (an ordered list of parameter types and typically\\\\neither a return value or return parameters). Function types\' `contains`\\\\nfield is organized as a mapping of `parameters` types (a type wrapper for\\\\na tuple type) and an optional `returns` type (either a generic type\\\\nwrapper or a type wrapper for a tuple type).\\\\n\\\\nThis definition applies for both cases (internal and external function\\\\ntypes). Each of those specific types may expand this `contains` field\\\\nschema with other semantic details (such as an external function type\\\\nindicating the contract type from which it is exposed).\\\\n\\";\\n                readonly properties: {\\n                    readonly parameters: {\\n                        readonly $ref: \\"#/$defs/Parameters\\";\\n                    };\\n                    readonly returns: {\\n                        readonly type: \\"object\\";\\n                        readonly title: \\"Return type (or tuple of types)\\";\\n                        readonly description: \\"To accommodate languages differing in whether functions return single\\\\nvalues or lists of values, this field may be either a generic type\\\\nwrapper or explicitly defined as a type wrapper around a tuple type.\\\\n\\\\nDebuggers that implement this schema **should** be aware that\\\\nlanguages whose functions return sole values might return tuple\\\\ntypes. Resolving this ambiguity remains outside the scope of the\\\\nschema (but compilers **must** be consistent when representing\\\\nfunction types in this schema).\\\\n\\";\\n                        readonly anyOf: readonly [{\\n                            readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n                        }, {\\n                            readonly $ref: \\"#/$defs/Parameters\\";\\n                        }];\\n                    };\\n                };\\n                readonly required: readonly [\\"parameters\\"];\\n            };\\n            readonly definition: {\\n                readonly $ref: \\"schema:ethdebug/format/type/definition\\";\\n            };\\n        };\\n        readonly oneOf: readonly [{\\n            readonly type: \\"object\\";\\n            readonly title: \\"External function type\\";\\n            readonly properties: {\\n                readonly internal: {\\n                    readonly const: false;\\n                };\\n                readonly external: {\\n                    readonly const: true;\\n                };\\n                readonly contains: {\\n                    readonly type: \\"object\\";\\n                    readonly title: \\"Additional contents\\";\\n                    readonly properties: {\\n                        readonly contract: {\\n                            readonly type: \\"object\\";\\n                            readonly title: \\"Contract type providing external function\\";\\n                            readonly description: \\"A wrapper around the contract type that composes this external function type.\\";\\n                            readonly allOf: readonly [{\\n                                readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n                            }, {\\n                                readonly type: \\"object\\";\\n                                readonly title: \\"Contract type wrapper\\";\\n                                readonly properties: {\\n                                    readonly type: {\\n                                        readonly $ref: \\"schema:ethdebug/format/type/elementary/contract\\";\\n                                    };\\n                                };\\n                            }];\\n                        };\\n                    };\\n                };\\n            };\\n            readonly required: readonly [\\"external\\"];\\n        }, {\\n            readonly type: \\"object\\";\\n            readonly title: \\"Internal function type\\";\\n            readonly properties: {\\n                readonly internal: {\\n                    readonly const: true;\\n                };\\n                readonly external: {\\n                    readonly const: false;\\n                };\\n            };\\n            readonly required: readonly [\\"internal\\"];\\n        }];\\n        readonly examples: readonly [{\\n            readonly kind: \\"function\\";\\n            readonly internal: true;\\n            readonly definition: {\\n                readonly name: \\"increment\\";\\n            };\\n            readonly contains: {\\n                readonly parameters: {\\n                    readonly type: {\\n                        readonly kind: \\"tuple\\";\\n                        readonly contains: readonly [{\\n                            readonly name: \\"value\\";\\n                            readonly type: {\\n                                readonly kind: \\"uint\\";\\n                                readonly bits: 256;\\n                            };\\n                        }];\\n                    };\\n                };\\n                readonly returns: {\\n                    readonly type: {\\n                        readonly kind: \\"uint\\";\\n                        readonly bits: 256;\\n                    };\\n                };\\n            };\\n        }, {\\n            readonly kind: \\"function\\";\\n            readonly external: true;\\n            readonly definition: {\\n                readonly name: \\"withdraw\\";\\n            };\\n            readonly contains: {\\n                readonly contract: {\\n                    readonly type: {\\n                        readonly kind: \\"contract\\";\\n                        readonly payable: true;\\n                        readonly interface: true;\\n                        readonly definition: {\\n                            readonly name: \\"Bank\\";\\n                        };\\n                    };\\n                };\\n                readonly parameters: {\\n                    readonly type: {\\n                        readonly kind: \\"tuple\\";\\n                        readonly contains: readonly [{\\n                            readonly name: \\"beneficiary\\";\\n                            readonly type: {\\n                                readonly kind: \\"address\\";\\n                                readonly payable: true;\\n                            };\\n                        }, {\\n                            readonly name: \\"amount\\";\\n                            readonly type: {\\n                                readonly kind: \\"ufixed\\";\\n                                readonly bits: 128;\\n                                readonly places: 18;\\n                            };\\n                        }];\\n                    };\\n                };\\n                readonly returns: {\\n                    readonly type: {\\n                        readonly kind: \\"tuple\\";\\n                        readonly contains: readonly [];\\n                    };\\n                };\\n            };\\n        }];\\n        readonly $defs: {\\n            readonly Parameters: {\\n                readonly type: \\"object\\";\\n                readonly title: \\"Parameters\\";\\n                readonly description: \\"A type wrapper around a tuple of types. This schema uses a tuple type to represent an ordered list of types.\\";\\n                readonly allOf: readonly [{\\n                    readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n                }, {\\n                    readonly title: \\"Tuple type wrapper\\";\\n                    readonly type: \\"object\\";\\n                    readonly properties: {\\n                        readonly type: {\\n                            readonly $ref: \\"schema:ethdebug/format/type/complex/tuple\\";\\n                        };\\n                    };\\n                }];\\n            };\\n        };\\n    };\\n    readonly \\"schema:ethdebug/format/type/complex/mapping\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/complex/mapping\\";\\n        readonly title: \\"ethdebug/format/type/complex/mapping\\";\\n        readonly description: \\"Schema for representing mapping types\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"complex\\";\\n            };\\n            readonly kind: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"mapping\\";\\n            };\\n            readonly contains: {\\n                readonly type: \\"object\\";\\n                readonly title: \\"Mapping key/value types\\";\\n                readonly properties: {\\n                    readonly key: {\\n                        readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n                    };\\n                    readonly value: {\\n                        readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n                    };\\n                };\\n                readonly required: readonly [\\"key\\", \\"value\\"];\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\", \\"contains\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"mapping\\";\\n            readonly contains: {\\n                readonly key: {\\n                    readonly type: {\\n                        readonly kind: \\"address\\";\\n                    };\\n                };\\n                readonly value: {\\n                    readonly type: {\\n                        readonly kind: \\"uint\\";\\n                        readonly bits: 256;\\n                    };\\n                };\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/complex/struct\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/complex/struct\\";\\n        readonly title: \\"ethdebug/format/type/complex/struct\\";\\n        readonly description: \\"Schema for representing struct types\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"complex\\";\\n            };\\n            readonly kind: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"struct\\";\\n            };\\n            readonly contains: {\\n                readonly type: \\"array\\";\\n                readonly items: {\\n                    readonly $ref: \\"#/$defs/MemberField\\";\\n                };\\n            };\\n            readonly definition: {\\n                readonly $ref: \\"schema:ethdebug/format/type/definition\\";\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\", \\"contains\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"struct\\";\\n            readonly contains: readonly [{\\n                readonly name: \\"x\\";\\n                readonly type: {\\n                    readonly kind: \\"uint\\";\\n                    readonly bits: 128;\\n                };\\n            }, {\\n                readonly name: \\"y\\";\\n                readonly type: {\\n                    readonly kind: \\"uint\\";\\n                    readonly bits: 128;\\n                };\\n            }];\\n        }];\\n        readonly $defs: {\\n            readonly MemberField: {\\n                readonly type: \\"object\\";\\n                readonly title: \\"MemberField\\";\\n                readonly description: \\"A schema representing a member field inside a struct type. This is an **ethdebug/format/type/wrapper** with additional fields.\\";\\n                readonly allOf: readonly [{\\n                    readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n                }, {\\n                    readonly title: \\"Additional fields\\";\\n                    readonly description: \\"An object with optional `name` property for identifying named struct member fields. **Note** that this language does not specify that a struct must be consistent in its use of naming for all fields or none\\";\\n                    readonly type: \\"object\\";\\n                    readonly properties: {\\n                        readonly name: {\\n                            readonly type: \\"string\\";\\n                        };\\n                    };\\n                }];\\n            };\\n        };\\n    };\\n    readonly \\"schema:ethdebug/format/type/complex/tuple\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/complex/tuple\\";\\n        readonly title: \\"ethdebug/format/type/complex/tuple\\";\\n        readonly description: \\"Schema for representing tuple types\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"complex\\";\\n            };\\n            readonly kind: {\\n                readonly type: \\"string\\";\\n                readonly const: \\"tuple\\";\\n            };\\n            readonly contains: {\\n                readonly type: \\"array\\";\\n                readonly items: {\\n                    readonly $ref: \\"#/$defs/Element\\";\\n                };\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\", \\"contains\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"tuple\\";\\n            readonly contains: readonly [];\\n        }, {\\n            readonly kind: \\"tuple\\";\\n            readonly contains: readonly [{\\n                readonly name: \\"x\\";\\n                readonly type: {\\n                    readonly kind: \\"uint\\";\\n                    readonly bits: 128;\\n                };\\n            }, {\\n                readonly name: \\"y\\";\\n                readonly type: {\\n                    readonly kind: \\"uint\\";\\n                    readonly bits: 128;\\n                };\\n            }];\\n        }];\\n        readonly $defs: {\\n            readonly Element: {\\n                readonly type: \\"object\\";\\n                readonly title: \\"Element\\";\\n                readonly description: \\"An optionally named element type within a tuple. This is an **ethdebug/format/type/wrapper** with additional fields.\\";\\n                readonly allOf: readonly [{\\n                    readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n                }, {\\n                    readonly title: \\"Additional fields\\";\\n                    readonly type: \\"object\\";\\n                    readonly properties: {\\n                        readonly name: {\\n                            readonly type: \\"string\\";\\n                            readonly description: \\"For tuple types where positional element types are identified by name, this field **should** include this information.\\\\nThis schema makes no restriction on whether all-or-no elements have names, and so this field may be sparse across elements of the same tuple.\\";\\n                        };\\n                    };\\n                }];\\n            };\\n        };\\n    };\\n    readonly \\"schema:ethdebug/format/type/complex\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/complex\\";\\n        readonly title: \\"ethdebug/format/type/complex\\";\\n        readonly description: \\"Canonical representation of a complex type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly kind: {\\n                readonly $ref: \\"#/$defs/Kind\\";\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\"];\\n        readonly allOf: readonly [{\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"alias\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/complex/alias\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"tuple\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/complex/tuple\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"array\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/complex/array\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"mapping\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/complex/mapping\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"struct\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/complex/struct\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"function\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/complex/function\\";\\n            };\\n        }];\\n        readonly $defs: {\\n            readonly Kind: {\\n                readonly title: \\"Known complex kind\\";\\n                readonly description: \\"A schema for the values of `kind` reserved for known complex types included in ethdebug/format\\";\\n                readonly type: \\"string\\";\\n                readonly enum: readonly [\\"alias\\", \\"tuple\\", \\"array\\", \\"mapping\\", \\"struct\\", \\"function\\"];\\n            };\\n        };\\n    };\\n    readonly \\"schema:ethdebug/format/type/definition\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/definition\\";\\n        readonly title: \\"ethdebug/format/type/definition\\";\\n        readonly description: \\"Object containing name and location information for a type.\\\\n\\\\nThis schema does not require any particular field, but it **must** contain\\\\nat least one property.\\\\n\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly name: {\\n                readonly type: \\"string\\";\\n            };\\n            readonly location: {\\n                readonly $ref: \\"schema:ethdebug/format/materials/source-range\\";\\n            };\\n        };\\n        readonly anyOf: readonly [{\\n            readonly title: \\"Required `name`\\";\\n            readonly required: readonly [\\"name\\"];\\n        }, {\\n            readonly title: \\"Required `location`\\";\\n            readonly required: readonly [\\"location\\"];\\n        }];\\n        readonly examples: readonly [{\\n            readonly name: \\"Ballot\\";\\n            readonly location: {\\n                readonly source: {\\n                    readonly id: 5;\\n                };\\n                readonly range: {\\n                    readonly offset: 10;\\n                    readonly length: 56;\\n                };\\n            };\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary/address\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary/address\\";\\n        readonly title: \\"ethdebug/format/type/elementary/address\\";\\n        readonly description: \\"Schema describing the representation of an address type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly const: \\"elementary\\";\\n            };\\n            readonly kind: {\\n                readonly const: \\"address\\";\\n            };\\n            readonly payable: {\\n                readonly type: \\"boolean\\";\\n                readonly description: \\"If this field is omitted, this type represents an address whose payability is not known.\\";\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"address\\";\\n        }, {\\n            readonly kind: \\"address\\";\\n            readonly payable: true;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary/bool\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary/bool\\";\\n        readonly title: \\"ethdebug/format/type/elementary/bool\\";\\n        readonly description: \\"Schema describing the representation of the boolean type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly const: \\"elementary\\";\\n            };\\n            readonly kind: {\\n                readonly const: \\"bool\\";\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"bool\\";\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary/bytes\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary/bytes\\";\\n        readonly title: \\"ethdebug/format/type/elementary/bytes\\";\\n        readonly description: \\"Schema describing the representation of a type of bytes string (either dynamic or static)\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly const: \\"elementary\\";\\n            };\\n            readonly kind: {\\n                readonly const: \\"bytes\\";\\n            };\\n            readonly size: {\\n                readonly description: \\"The number of bytes in the bytes string. If this field is omitted, this type is the dynamic bytes string type.\\";\\n                readonly $ref: \\"schema:ethdebug/format/data/unsigned\\";\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"bytes\\";\\n            readonly size: 32;\\n        }, {\\n            readonly kind: \\"bytes\\";\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary/contract\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary/contract\\";\\n        readonly title: \\"ethdebug/format/type/elementary/contract\\";\\n        readonly description: \\"Schema describing the representation of a contract type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly const: \\"elementary\\";\\n            };\\n            readonly kind: {\\n                readonly const: \\"contract\\";\\n            };\\n            readonly payable: {\\n                readonly type: \\"boolean\\";\\n                readonly description: \\"If this field is omitted, this type represents an address whose payability is not known.\\";\\n            };\\n            readonly definition: {\\n                readonly $ref: \\"schema:ethdebug/format/type/definition\\";\\n            };\\n        };\\n        readonly oneOf: readonly [{\\n            readonly title: \\"Normal contract type\\";\\n            readonly properties: {\\n                readonly library: {\\n                    readonly const: false;\\n                };\\n                readonly interface: {\\n                    readonly const: false;\\n                };\\n            };\\n        }, {\\n            readonly title: \\"Contract library type\\";\\n            readonly properties: {\\n                readonly library: {\\n                    readonly const: true;\\n                    readonly description: \\"Indicates that this is a type representing a library\\";\\n                };\\n            };\\n            readonly required: readonly [\\"library\\"];\\n        }, {\\n            readonly title: \\"Contract interface type\\";\\n            readonly properties: {\\n                readonly interface: {\\n                    readonly const: true;\\n                    readonly description: \\"Indicates that this is a type representing an interface\\";\\n                };\\n            };\\n            readonly required: readonly [\\"interface\\"];\\n        }];\\n        readonly required: readonly [\\"kind\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"contract\\";\\n        }, {\\n            readonly kind: \\"contract\\";\\n            readonly library: false;\\n            readonly interface: false;\\n            readonly payable: true;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary/enum\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary/enum\\";\\n        readonly title: \\"ethdebug/format/type/elementary/enum\\";\\n        readonly description: \\"Schema describing the representation of an enumerated type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly const: \\"elementary\\";\\n            };\\n            readonly kind: {\\n                readonly const: \\"enum\\";\\n            };\\n            readonly values: {\\n                readonly description: \\"The allowed values of an enum. This format makes no restriction on which values are allowed here.\\";\\n                readonly type: \\"array\\";\\n                readonly items: true;\\n            };\\n            readonly definition: {\\n                readonly $ref: \\"schema:ethdebug/format/type/definition\\";\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\", \\"values\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"enum\\";\\n            readonly values: readonly [\\"A\\", \\"B\\", \\"C\\"];\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary/fixed\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary/fixed\\";\\n        readonly title: \\"ethdebug/format/type/elementary/fixed\\";\\n        readonly description: \\"Schema describing the representation of a signed fixed decimal type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly const: \\"elementary\\";\\n            };\\n            readonly kind: {\\n                readonly const: \\"fixed\\";\\n            };\\n            readonly bits: {\\n                readonly type: \\"integer\\";\\n                readonly multipleOf: 8;\\n                readonly minimum: 8;\\n                readonly maximum: 256;\\n            };\\n            readonly places: {\\n                readonly type: \\"integer\\";\\n                readonly description: \\"How many decimal places, implying that a raw value `v` of this type should be interpreted as `v / (10**places)`\\";\\n                readonly minimum: 1;\\n                readonly maximum: 80;\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\", \\"bits\\", \\"places\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"fixed\\";\\n            readonly bits: 256;\\n            readonly places: 10;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary/int\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary/int\\";\\n        readonly title: \\"ethdebug/format/type/elementary/int\\";\\n        readonly description: \\"Schema describing the representation of a signed integer type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly const: \\"elementary\\";\\n            };\\n            readonly kind: {\\n                readonly const: \\"int\\";\\n            };\\n            readonly bits: {\\n                readonly type: \\"integer\\";\\n                readonly multipleOf: 8;\\n                readonly minimum: 8;\\n                readonly maximum: 256;\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\", \\"bits\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"int\\";\\n            readonly bits: 256;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary/string\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary/string\\";\\n        readonly title: \\"ethdebug/format/type/elementary/string\\";\\n        readonly description: \\"Schema describing the representation of a string type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly const: \\"elementary\\";\\n            };\\n            readonly kind: {\\n                readonly const: \\"string\\";\\n            };\\n            readonly encoding: {\\n                readonly type: \\"string\\";\\n                readonly default: \\"utf-8\\";\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"string\\";\\n        }, {\\n            readonly kind: \\"string\\";\\n            readonly encoding: \\"utf-16\\";\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary/ufixed\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary/ufixed\\";\\n        readonly title: \\"ethdebug/format/type/elementary/ufixed\\";\\n        readonly description: \\"Schema describing the representation of an unsigned fixed decimal type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly const: \\"elementary\\";\\n            };\\n            readonly kind: {\\n                readonly const: \\"ufixed\\";\\n            };\\n            readonly bits: {\\n                readonly type: \\"integer\\";\\n                readonly multipleOf: 8;\\n                readonly minimum: 8;\\n                readonly maximum: 256;\\n            };\\n            readonly places: {\\n                readonly type: \\"integer\\";\\n                readonly description: \\"How many decimal places, implying that a raw value `v` of this type should be interpreted as `v / (10**places)`\\";\\n                readonly minimum: 1;\\n                readonly maximum: 80;\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\", \\"bits\\", \\"places\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"ufixed\\";\\n            readonly bits: 256;\\n            readonly places: 10;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary/uint\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary/uint\\";\\n        readonly title: \\"ethdebug/format/type/elementary/uint\\";\\n        readonly description: \\"Schema describing the representation of an unsigned integer type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly class: {\\n                readonly const: \\"elementary\\";\\n            };\\n            readonly kind: {\\n                readonly const: \\"uint\\";\\n            };\\n            readonly bits: {\\n                readonly type: \\"integer\\";\\n                readonly multipleOf: 8;\\n                readonly minimum: 8;\\n                readonly maximum: 256;\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\", \\"bits\\"];\\n        readonly examples: readonly [{\\n            readonly kind: \\"uint\\";\\n            readonly bits: 256;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/elementary\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/elementary\\";\\n        readonly title: \\"ethdebug/format/type/elementary\\";\\n        readonly description: \\"Canonical representation of an elementary type\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly kind: {\\n                readonly $ref: \\"#/$defs/Kind\\";\\n            };\\n        };\\n        readonly required: readonly [\\"kind\\"];\\n        readonly allOf: readonly [{\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"uint\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/elementary/uint\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"int\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/elementary/int\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"bool\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/elementary/bool\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"bytes\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/elementary/bytes\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"string\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/elementary/string\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"ufixed\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/elementary/ufixed\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"fixed\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/elementary/fixed\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"address\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/elementary/address\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"contract\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/elementary/contract\\";\\n            };\\n        }, {\\n            readonly if: {\\n                readonly properties: {\\n                    readonly kind: {\\n                        readonly const: \\"enum\\";\\n                    };\\n                };\\n            };\\n            readonly then: {\\n                readonly $ref: \\"schema:ethdebug/format/type/elementary/enum\\";\\n            };\\n        }];\\n        readonly $defs: {\\n            readonly Kind: {\\n                readonly title: \\"Known elementary kind\\";\\n                readonly description: \\"A schema for the values of `kind` reserved for known elementary types included in ethdebug/format\\";\\n                readonly type: \\"string\\";\\n                readonly enum: readonly [\\"uint\\", \\"int\\", \\"bool\\", \\"bytes\\", \\"string\\", \\"ufixed\\", \\"fixed\\", \\"address\\", \\"contract\\", \\"enum\\"];\\n            };\\n        };\\n    };\\n    readonly \\"schema:ethdebug/format/type/reference\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/reference\\";\\n        readonly title: \\"ethdebug/format/type/reference\\";\\n        readonly description: \\"A reference to a known type by ID\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly id: {\\n                readonly type: readonly [\\"string\\", \\"number\\"];\\n            };\\n        };\\n        readonly additionalProperties: false;\\n        readonly required: readonly [\\"id\\"];\\n        readonly examples: readonly [{\\n            readonly id: 5;\\n        }];\\n    };\\n    readonly \\"schema:ethdebug/format/type/wrapper\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type/wrapper\\";\\n        readonly title: \\"ethdebug/format/type/wrapper\\";\\n        readonly description: \\"A wrapper around a type. Defines a `\\\\\\"type\\\\\\"` field that may include a full Type representation or a reference to a known Type by ID. Note that this schema permits additional properties on the same object.\\";\\n        readonly type: \\"object\\";\\n        readonly properties: {\\n            readonly type: {\\n                readonly if: {\\n                    readonly required: readonly [\\"id\\"];\\n                };\\n                readonly then: {\\n                    readonly $ref: \\"schema:ethdebug/format/type/reference\\";\\n                };\\n                readonly else: {\\n                    readonly $ref: \\"schema:ethdebug/format/type\\";\\n                };\\n            };\\n        };\\n        readonly required: readonly [\\"type\\"];\\n        readonly examples: readonly [{\\n            readonly name: \\"beneficiary\\";\\n            readonly type: {\\n                readonly kind: \\"address\\";\\n                readonly payable: true;\\n            };\\n        }, {\\n            readonly type: {\\n                readonly id: \\"<opaque-id>\\";\\n            };\\n        }];\\n        readonly $defs: {\\n            readonly Array: {\\n                readonly title: \\"{ \\\\\\"type\\\\\\": ... }[]\\";\\n                readonly description: \\"A list of wrapped types, where the wrapper may add fields\\";\\n                readonly type: \\"array\\";\\n                readonly items: {\\n                    readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n                };\\n            };\\n            readonly Object: {\\n                readonly title: \\"{ \\\\\\"key\\\\\\": { \\\\\\"type\\\\\\": ... }, ... }\\";\\n                readonly description: \\"A key-value mapping of wrapped types, where the wrapper may add fields\\";\\n                readonly type: \\"object\\";\\n                readonly additionalProperties: {\\n                    readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n                };\\n            };\\n        };\\n    };\\n    readonly \\"schema:ethdebug/format/type\\": {\\n        readonly $schema: \\"https://json-schema.org/draft/2020-12/schema\\";\\n        readonly $id: \\"schema:ethdebug/format/type\\";\\n        readonly title: \\"ethdebug/format/type\\";\\n        readonly description: \\"Canonical representation for all types.\\";\\n        readonly type: \\"object\\";\\n        readonly if: {\\n            readonly type: \\"object\\";\\n            readonly title: \\"Known kind\\";\\n            readonly description: \\"If `kind` adheres to the set of known kinds defined by this format\\";\\n            readonly properties: {\\n                readonly kind: {\\n                    readonly anyOf: readonly [{\\n                        readonly $ref: \\"schema:ethdebug/format/type/elementary#/$defs/Kind\\";\\n                    }, {\\n                        readonly $ref: \\"schema:ethdebug/format/type/complex#/$defs/Kind\\";\\n                    }];\\n                };\\n            };\\n        };\\n        readonly then: {\\n            readonly type: \\"object\\";\\n            readonly title: \\"KnownType\\";\\n            readonly description: \\"Then the object must adhere to exactly one known kind of type\\";\\n            readonly allOf: readonly [{\\n                readonly if: {\\n                    readonly properties: {\\n                        readonly kind: {\\n                            readonly $ref: \\"schema:ethdebug/format/type/elementary#/$defs/Kind\\";\\n                        };\\n                    };\\n                };\\n                readonly then: {\\n                    readonly $ref: \\"schema:ethdebug/format/type/elementary\\";\\n                };\\n            }, {\\n                readonly if: {\\n                    readonly properties: {\\n                        readonly kind: {\\n                            readonly $ref: \\"schema:ethdebug/format/type/complex#/$defs/Kind\\";\\n                        };\\n                    };\\n                };\\n                readonly then: {\\n                    readonly $ref: \\"schema:ethdebug/format/type/complex\\";\\n                };\\n            }];\\n        };\\n        readonly else: {\\n            readonly type: \\"object\\";\\n            readonly description: \\"Else the object must be a valid **ethdebug/format/type/base** with additional constraints\\";\\n            readonly allOf: readonly [{\\n                readonly $ref: \\"schema:ethdebug/format/type/base\\";\\n            }, {\\n                readonly title: \\"Required `class` field\\";\\n                readonly required: readonly [\\"class\\"];\\n            }, {\\n                readonly title: \\"Specialized complex type `contains` field\\";\\n                readonly type: \\"object\\";\\n                readonly if: {\\n                    readonly description: \\"If this object is a complex type\\";\\n                    readonly properties: {\\n                        readonly class: {\\n                            readonly const: \\"complex\\";\\n                        };\\n                    };\\n                };\\n                readonly then: {\\n                    readonly description: \\"Then the `contains` field must adhere to **ethdebug/format/type/wrapper** schemas, not the **ethdebug/format/type/base** equivalent.\\\\n(i.e., these additional constraints must apply recursively)\\";\\n                    readonly properties: {\\n                        readonly contains: {\\n                            readonly oneOf: readonly [{\\n                                readonly $ref: \\"schema:ethdebug/format/type/wrapper\\";\\n                            }, {\\n                                readonly $ref: \\"schema:ethdebug/format/type/wrapper#/$defs/Array\\";\\n                            }, {\\n                                readonly $ref: \\"schema:ethdebug/format/type/wrapper#/$defs/Object\\";\\n                            }];\\n                        };\\n                    };\\n                };\\n            }];\\n        };\\n    };\\n};\\nexport type Schema<Id extends keyof typeof rawSchemas> = (typeof rawSchemas)[Id];\\nexport {};\\n//# sourceMappingURL=yamls.d.ts.map"},{"filePath":"bin/run-example.ts","text":"import chalk from \\"chalk\\";\\nimport { highlight } from \\"cli-highlight\\";\\nimport { describeSchema } from \\"@ethdebug/format\\";\\n\\nimport {\\n  type Cursor,\\n  Data\\n} from \\"../src/index.js\\";\\n\\nimport { observeTrace } from \\"../test/index.js\\";\\n\\nimport { observeTraceTests } from \\"../src/test-cases.js\\";\\n\\nexport async function run() {\\n  const {\\n    pointer,\\n    compileOptions,\\n    observe\\n  } = observeTraceTests[\\"string storage\\"];\\n\\n  console.log(\\n    chalk.bold(chalk.cyan(\\n      \\"demo: run compiled solidity and watch a changing ethdebug/format pointer\\\\n\\"\\n    ))\\n  );\\n\\n  console.group(chalk.bold(\\"ethdebug/format pointer used by demo\\"));\\n  console.log(\\n    highlight(\\n      describeSchema({\\n        schema: { id: \\"schema:ethdebug/format/pointer\\" },\\n        pointer: \\"#/examples/4\\"\\n      }).yaml,\\n      { language: \\"yaml\\" }\\n    ).trim()\\n  );\\n  console.groupEnd();\\n  console.log(\\"\\");\\n\\n  console.group(chalk.bold(\\"solidity source code used by demo\\"));\\n  console.log(\\n    compileOptions.sources[\\"StringStorage.sol\\"].content.trim()\\n  );\\n  console.groupEnd();\\n  console.log(\\"\\");\\n\\n  console.group(chalk.bold(\\"observing deployment trace\\"));\\n\\n  const observedValues =\\n    await observeTrace({ pointer, compileOptions, observe });\\n\\n  console.groupEnd();\\n  console.log(\\"\\");\\n\\n  console.group(chalk.bold(\\"observed values:\\"));\\n  for (const value of observedValues) {\\n    console.log(\\"- %o\\", value);\\n  }\\n  console.groupEnd();\\n  console.log(\\"\\");\\n}\\n\\nawait run();\\n"},{"filePath":"src/cursor.ts","text":"import type { Machine } from \\"./machine.js\\";\\nimport type { Pointer } from \\"./pointer.js\\";\\nimport type { Data } from \\"./data.js\\";\\n\\n/**\\n * The result of dereferencing a pointer\\n */\\nexport interface Cursor {\\n  view(state: Machine.State): Promise<Cursor.View>;\\n}\\n\\nexport namespace Cursor {\\n  /**\\n   * The result of viewing a Cursor with a given Machine.State\\n   */\\n  export interface View {\\n    /**\\n     * A collection of concrete Cursor.Regions; this is a plain array of\\n     * regions and also provides filtering/lookup of regions by name\\n     * (according to the scoping rules outlined in the specification)\\n     */\\n    regions: Cursor.Regions;\\n\\n    /**\\n     * Read bytes from the machine state corresponding to the bytes range\\n     * for a particular concrete Cursor.Region\\n     */\\n    read(region: Cursor.Region): Promise<Data>;\\n  }\\n\\n  /**\\n   * A Pointer region where all dynamic expressions have been replaced with\\n   * concrete bytes values.\\n   */\\n  export type Region<R extends Pointer.Region = Pointer.Region> = {\\n    [K in keyof R]: K extends \\"slot\\" | \\"offset\\" | \\"length\\"\\n      ? R[K] extends Pointer.Expression\\n        ? Data\\n        : R[K] extends Pointer.Expression | undefined\\n          ? Data | undefined\\n          : R[K]\\n      : R[K];\\n  }\\n\\n  /**\\n   * A collection of concrete regions.\\n   *\\n   * This collection serves as a plain array of regions, for simple iteration\\n   * and whatever filtering.\\n   *\\n   * It also provides a couple interfaces of its own for accessing regions by\\n   * name.\\n   */\\n  export type Regions =\\n    & Cursor.Region[]\\n    & {\\n        /**\\n         * Obtain an ordered list of all regions with a particular name.\\n         *\\n         * This is useful, e.g., when looking to concatenate a series of\\n         * sequential regions that were generated by index from a list\\n         * collection\\n         */\\n        named(name: string): Cursor.Region[];\\n\\n        /**\\n         * Retrieve the last concrete region generated with a particular name\\n         */\\n        lookup: { [name: string]: Cursor.Region };\\n      };\\n}\\n"},{"filePath":"src/data.test.ts","text":"import { expect, describe, it } from \\"@jest/globals\\";\\n\\nimport { Data } from \\"./data.js\\";\\n\\ndescribe(\\"Data\\", () => {\\n  describe(\\".prototype.asUint()\\", () => {\\n    it(\\"correctly converts to integers (big endian)\\", () => {\\n      const data = new Data([0x01, 0x00]);\\n\\n      expect(`${data.asUint()}`).toBe(\\"256\\");\\n    });\\n  });\\n\\n  describe(\\".fromUint()\\", () => {\\n    it(\\"correctly creates Data instances from bigints\\", () => {\\n      const data1 = Data.fromUint(0n);\\n      expect(data1).toEqual(new Data([]));\\n\\n      const data2 = Data.fromUint(255n);\\n      expect(data2).toEqual(new Data([0xff]));\\n\\n      const data3 = Data.fromUint(256n);\\n      expect(data3).toEqual(new Data([0x01, 0x00]));\\n\\n      const data4 = Data.fromUint(1234567890n);\\n      expect(data4).toEqual(new Data([0x49, 0x96, 0x02, 0xd2]));\\n    });\\n  });\\n\\n  describe(\\".fromNumber()\\", () => {\\n    it(\\"correctly creates Data instances from numbers\\", () => {\\n      const data1 = Data.fromNumber(0);\\n      expect(data1).toEqual(Data.zero());\\n\\n      const data2 = Data.fromNumber(255);\\n      expect(data2).toEqual(new Data([0xff]));\\n\\n      const data3 = Data.fromNumber(256);\\n      expect(data3).toEqual(new Data([0x01, 0x00]));\\n    });\\n  });\\n\\n  describe(\\".fromHex()\\", () => {\\n    it(\\"correctly creates Data instances from hex strings\\", () => {\\n      const data1 = Data.fromHex(\\"0x00\\");\\n      expect(data1).toEqual(new Data([0x00]));\\n\\n      const data2 = Data.fromHex(\\"0xff\\");\\n      expect(data2).toEqual(new Data([0xff]));\\n\\n      const data3 = Data.fromHex(\\"0x0100\\");\\n      expect(data3).toEqual(new Data([0x01, 0x00]));\\n\\n      const data4 = Data.fromHex(\\"0x499602d2\\");\\n      expect(data4).toEqual(new Data([0x49, 0x96, 0x02, 0xd2]));\\n    });\\n\\n    it(\\"throws an error for invalid hex string format\\", () => {\\n      expect(() => Data.fromHex(\\"ff\\")).toThrow(\\"Invalid hex string format. Expected \\\\\\"0x\\\\\\" prefix.\\");\\n    });\\n  });\\n});\\n"},{"filePath":"src/data.ts","text":"import { toHex } from \\"ethereum-cryptography/utils\\";\\n\\nimport type * as Util from \\"util\\";\\n\\nlet util: typeof Util | undefined;\\ntry {\\n  util = await import(\\"util\\");\\n} catch {}\\n\\nexport class Data extends Uint8Array {\\n  static zero(): Data {\\n    return new Data([]);\\n  }\\n\\n  static fromUint(value: bigint): Data {\\n    if (value === 0n) {\\n      return this.zero();\\n    }\\n\\n    const byteCount = Math.ceil(Number(value.toString(2).length) / 8);\\n    const bytes = new Uint8Array(byteCount);\\n    for (let i = byteCount - 1; i >= 0; i--) {\\n      bytes[i] = Number(value & 0xffn);\\n      value >>= 8n;\\n    }\\n    return new Data(bytes);\\n  }\\n\\n  static fromNumber(value: number): Data {\\n    const byteCount = Math.ceil(Math.log2(value + 1) / 8);\\n    const bytes = new Uint8Array(byteCount);\\n    for (let i = byteCount - 1; i >= 0; i--) {\\n      bytes[i] = value & 0xff;\\n      value >>= 8;\\n    }\\n    return new Data(bytes);\\n  }\\n\\n  static fromHex(hex: string): Data {\\n    if (!hex.startsWith(\'0x\')) {\\n      throw new Error(\'Invalid hex string format. Expected \\"0x\\" prefix.\');\\n    }\\n    const bytes = new Uint8Array((hex.length - 2) / 2 + 0.5);\\n    for (let i = 2; i < hex.length; i += 2) {\\n      bytes[i / 2 - 1] = parseInt(hex.slice(i, i + 2), 16);\\n    }\\n    return new Data(bytes);\\n  }\\n\\n  static fromBytes(bytes: Uint8Array): Data {\\n    return new Data(bytes);\\n  }\\n\\n  asUint(): bigint {\\n    const bits = 8n;\\n\\n    let value = 0n;\\n    for (const byte of this.values()) {\\n      const byteValue = BigInt(byte)\\n      value = (value << bits) + byteValue\\n    }\\n    return value;\\n  }\\n\\n  toHex(): string {\\n    return `0x${toHex(this)}`;\\n  }\\n\\n  padUntilAtLeast(length: number): Data {\\n    if (this.length >= length) {\\n      return this;\\n    }\\n\\n    const padded = new Uint8Array(length);\\n    padded.set(this, length - this.length);\\n    return Data.fromBytes(padded);\\n  }\\n\\n  resizeTo(length: number): Data {\\n    if (this.length === length) {\\n      return this;\\n    }\\n\\n    const resized = new Uint8Array(length);\\n\\n    if (this.length < length) {\\n      resized.set(this, length - this.length);\\n    } else {\\n      resized.set(this.slice(this.length - length));\\n    }\\n\\n    return Data.fromBytes(resized);\\n  }\\n\\n  concat(...others: Data[]): Data {\\n    // HACK concatenate via string representation\\n    const concatenatedHex = [this, ...others]\\n      .map(data => data.toHex().slice(2))\\n      .reduce((accumulator, hex) => `${accumulator}${hex}`, \\"0x\\");\\n\\n    return Data.fromHex(concatenatedHex);\\n  }\\n\\n  inspect(\\n    depth: number,\\n    options: Util.InspectOptionsStylized,\\n    inspect: typeof Util.inspect\\n  ): string {\\n    return `Data[${options.stylize(this.toHex(), \\"number\\")}]`;\\n  }\\n\\n  [\\n    util && \\"inspect\\" in util && typeof util.inspect === \\"object\\"\\n      ? util.inspect.custom\\n      : \\"_inspect\\"\\n  ](\\n    depth: number,\\n    options: Util.InspectOptionsStylized,\\n    inspect: typeof Util.inspect\\n  ): string {\\n    return this.inspect(depth, options, inspect);\\n  }\\n\\n}\\n"},{"filePath":"src/evaluate.test.ts","text":"import { expect, describe, it, beforeEach } from \\"@jest/globals\\";\\nimport { keccak256 } from \\"ethereum-cryptography/keccak\\";\\nimport { toHex } from \\"ethereum-cryptography/utils\\";\\nimport { Machine } from \\"./machine.js\\";\\nimport { Data } from \\"./data.js\\";\\nimport { Cursor } from \\"./cursor.js\\";\\nimport { Pointer } from \\"./pointer.js\\";\\nimport { evaluate, type EvaluateOptions } from \\"./evaluate.js\\";\\n\\n// Create a stub for the Machine.State interface\\nconst state: Machine.State = {\\n  traceIndex: Promise.resolve(0n),\\n  opcode: Promise.resolve(\\"PUSH1\\"),\\n  programCounter: Promise.resolve(10n),\\n  stack: {\\n    length: 50n\\n  } as any,\\n  memory: {} as any,\\n  storage: {} as any,\\n  calldata: {} as any,\\n  returndata: {} as any,\\n  transient: {} as any,\\n  code: {} as any,\\n};\\n\\ndescribe(\\"evaluate\\", () => {\\n  let regions: { [identifier: string]: Cursor.Region };\\n  let variables: { [identifier: string]: Data };\\n  let cursor: Cursor;\\n  let options: EvaluateOptions;\\n\\n  beforeEach(() => {\\n    variables = {\\n      foo: Data.fromNumber(42),\\n      bar: Data.fromHex(\\"0x1f\\"),\\n    };\\n\\n    regions = {\\n      stack: {\\n        name: \\"stack\\",\\n        location: \\"stack\\",\\n        slot: Data.fromNumber(42),\\n        offset: Data.fromNumber(0x60),\\n        length: Data.fromNumber(0x1f / 2)\\n      },\\n      memory: {\\n        name: \\"memory\\",\\n        location: \\"memory\\",\\n        offset: Data.fromNumber(0x20 * 0x05),\\n        length: Data.fromNumber(42 - 0x1f)\\n      }\\n    } ;\\n\\n    options = {\\n      state,\\n      variables,\\n      regions\\n    }\\n  });\\n\\n  it(\\"evaluates literal expressions\\", async () => {\\n    expect(await evaluate(42, options))\\n      .toEqual(Data.fromNumber(42));\\n\\n    expect(await evaluate(\\"0x1f\\", options))\\n      .toEqual(Data.fromHex(\\"0x1f\\"));\\n  });\\n\\n  it(\\"evaluates constant expressions\\", async () => {\\n    expect(await evaluate(\\"$wordsize\\", options))\\n      .toEqual(Data.fromHex(\\"0x20\\"));\\n  });\\n\\n  it(\\"evaluates variable expressions\\", async () => {\\n    expect(await evaluate(\\"foo\\", options))\\n      .toEqual(Data.fromNumber(42));\\n\\n    expect(await evaluate(\\"bar\\", options))\\n      .toEqual(Data.fromHex(\\"0x1f\\"));\\n  });\\n\\n  it(\\"evaluates sum expressions\\", async () => {\\n    const expression: Pointer.Expression = {\\n      $sum: [42, \\"0x1f\\", \\"foo\\", \\"bar\\"]\\n    };\\n\\n    expect(await evaluate(expression, options))\\n      .toEqual(Data.fromUint(42n + 0x1fn + 42n + 0x1fn));\\n  });\\n\\n  it(\\"evaluates difference expressions\\", async () => {\\n    const expression: Pointer.Expression = {\\n      $difference: [\\"foo\\", \\"bar\\"]\\n    };\\n\\n    expect(await evaluate(expression, options))\\n      .toEqual(Data.fromUint(42n - 0x1fn));\\n  });\\n\\n  it(\\"evaluates product expressions\\", async () => {\\n    const expression: Pointer.Expression = {\\n      $product: [42, \\"0x1f\\", \\"foo\\", \\"bar\\"]\\n    };\\n\\n    expect(await evaluate(expression, options))\\n      .toEqual(Data.fromUint(42n * 0x1fn * 42n * 0x1fn));\\n  });\\n\\n  it(\\"evaluates quotient expressions\\", async () => {\\n    const expression: Pointer.Expression = {\\n      $quotient: [\\"foo\\", \\"bar\\"]\\n    };\\n\\n    expect(await evaluate(expression, options))\\n      .toEqual(Data.fromUint(42n / 0x1fn));\\n  });\\n\\n  it(\\"evaluates remainder expressions\\", async () => {\\n    const expression: Pointer.Expression = {\\n      $remainder: [\\"foo\\", \\"bar\\"]\\n    };\\n\\n    expect(await evaluate(expression, options))\\n      .toEqual(Data.fromUint(42n % 0x1fn));\\n  });\\n\\n  // skipped because test does not perform proper padding\\n  it.skip(\\"evaluates keccak256 expressions\\", async () => {\\n    const expression: Pointer.Expression = {\\n      $keccak256: [\\"foo\\", \\"bar\\", 42, \\"0x1f\\"]\\n    };\\n\\n    const expectedHash = keccak256(\\n      Buffer.from(\\n        toHex(Data.fromNumber(42)).slice(2) +\\n        toHex(Data.fromHex(\\"0x1f\\")).slice(2) +\\n        toHex(variables.foo).slice(2) +\\n        toHex(variables.bar).slice(2),\\n        \\"hex\\"\\n      )\\n    );\\n\\n    expect(await evaluate(expression, options))\\n      .toEqual(Data.fromBytes(expectedHash));\\n  });\\n\\n  it(\\"evaluates offset lookup expressions\\", async () => {\\n    const expression: Pointer.Expression = {\\n      \\".offset\\": \\"stack\\"\\n    };\\n\\n    expect(await evaluate(expression, options))\\n      .toEqual(Data.fromUint(0x60n));\\n  });\\n\\n  it(\\"evaluates offset lookup expressions with $this\\", async () => {\\n    const expression: Pointer.Expression = {\\n      \\".offset\\": \\"$this\\"\\n    };\\n\\n    const $this = {\\n      name: \\"$this\\",\\n      location: \\"memory\\",\\n      offset: Data.fromNumber(0x120),\\n      length: Data.fromNumber(0x40)\\n    } as const;\\n\\n    expect(\\n      await evaluate(expression, {\\n        ...options,\\n        regions: {\\n          ...regions,\\n          $this\\n        }\\n      })\\n    ).toEqual(Data.fromUint(0x120n));\\n  });\\n\\n  it(\\"evaluates length lookup expressions\\", async () => {\\n    const expression: Pointer.Expression = {\\n      \\".length\\": \\"memory\\"\\n    };\\n\\n    expect(await evaluate(expression, options))\\n      .toEqual(Data.fromUint(11n));\\n  });\\n\\n  it(\\"evaluates slot lookup expressions\\", async () => {\\n    const expression: Pointer.Expression = {\\n      \\".slot\\": \\"stack\\"\\n    };\\n\\n    expect(await evaluate(expression, options))\\n      .toEqual(Data.fromNumber(42));\\n  });\\n\\n  describe(\\"resulting bytes widths\\", () => {\\n    it(\\"uses the fewest bytes necessary for a literal\\", async () => {\\n      expect(await evaluate(0, options)).toHaveLength(0);\\n      expect(await evaluate(\\"0x00\\", options)).toHaveLength(1);\\n      expect(await evaluate(\\"0x0000\\", options)).toHaveLength(2);\\n      expect(await evaluate(0xffff, options)).toHaveLength(2);\\n    });\\n\\n    it(\\"uses at least the largest bytes width amongst arithmetic operands\\", async () => {\\n      expect(await evaluate({ $sum: [0, 0] }, options)).toHaveLength(0);\\n\\n      expect(await evaluate({ $difference: [\\"0x00\\", \\"0x00\\"] }, options))\\n        .toHaveLength(1);\\n\\n      expect(await evaluate({ $remainder: [\\"0x0001\\", \\"0x01\\"] }, options))\\n        .toHaveLength(2);\\n    });\\n\\n    it(\\"uses exactly as many bytes necessary to avoid arithmetic overflow\\", async () => {\\n      expect(await evaluate({ $product: [\\"0xffff\\", \\"0xff\\"] }, options))\\n        .toHaveLength(3);\\n    });\\n  });\\n\\n  it(\\"evaluates resize expressions\\", async () => {\\n    expect(await evaluate({ $sized1: 0 }, options)).toHaveLength(1);\\n\\n    {\\n      const data = await evaluate({ $sized1: \\"0xabcd\\" }, options);\\n      expect(data).toHaveLength(1);\\n      expect(data).toEqual(Data.fromNumber(0xcd));\\n    }\\n\\n    {\\n      const data = await evaluate({ $wordsized: \\"0xabcd\\" }, options);\\n      expect(data).toHaveLength(32);\\n      expect(data).toEqual(Data.fromNumber(0xabcd).resizeTo(32));\\n    }\\n  });\\n});\\n"},{"filePath":"src/evaluate.ts","text":"import { Pointer } from \\"./pointer.js\\";\\nimport { Machine } from \\"./machine.js\\";\\nimport { Data } from \\"./data.js\\";\\nimport type { Cursor } from \\"./cursor.js\\";\\nimport { read } from \\"./read.js\\";\\nimport { keccak256 } from \\"ethereum-cryptography/keccak\\";\\nimport { toHex } from \\"ethereum-cryptography/utils\\";\\n\\nexport interface EvaluateOptions {\\n  state: Machine.State;\\n  regions: {\\n    [identifier: string]: Cursor.Region;\\n  };\\n  variables: {\\n    [identifier: string]: Data;\\n  };\\n}\\n\\nexport async function evaluate(\\n  expression: Pointer.Expression,\\n  options: EvaluateOptions\\n): Promise<Data> {\\n  if (Pointer.Expression.isLiteral(expression)) {\\n    return evaluateLiteral(expression);\\n  }\\n\\n  if (Pointer.Expression.isConstant(expression)) {\\n    return evaluateConstant(expression);\\n  }\\n\\n  if (Pointer.Expression.isVariable(expression)) {\\n    return evaluateVariable(expression, options);\\n  }\\n\\n  if (Pointer.Expression.isArithmetic(expression)) {\\n    if (Pointer.Expression.Arithmetic.isSum(expression)) {\\n      return evaluateArithmeticSum(expression, options);\\n    }\\n\\n    if (Pointer.Expression.Arithmetic.isDifference(expression)) {\\n      return evaluateArithmeticDifference(expression, options);\\n    }\\n\\n    if (Pointer.Expression.Arithmetic.isProduct(expression)) {\\n      return evaluateArithmeticProduct(expression, options);\\n    }\\n\\n    if (Pointer.Expression.Arithmetic.isQuotient(expression)) {\\n      return evaluateArithmeticQuotient(expression, options);\\n    }\\n\\n    if (Pointer.Expression.Arithmetic.isRemainder(expression)) {\\n      return evaluateArithmeticRemainder(expression, options);\\n    }\\n  }\\n\\n  if (Pointer.Expression.isKeccak256(expression)) {\\n    return evaluateKeccak256(expression, options);\\n  }\\n\\n  if (Pointer.Expression.isResize(expression)) {\\n    return evaluateResize(expression, options);\\n  }\\n\\n  if (Pointer.Expression.isLookup(expression)) {\\n    if (Pointer.Expression.Lookup.isOffset(expression)) {\\n      return evaluateLookup(\\".offset\\", expression, options);\\n    }\\n\\n    if (Pointer.Expression.Lookup.isLength(expression)) {\\n      return evaluateLookup(\\".length\\", expression, options);\\n    }\\n\\n    if (Pointer.Expression.Lookup.isSlot(expression)) {\\n      return evaluateLookup(\\".slot\\", expression, options);\\n    }\\n  }\\n\\n  if (Pointer.Expression.isRead(expression)) {\\n    return evaluateRead(expression, options);\\n  }\\n\\n  throw new Error(\\n    `Unexpected runtime failure to recognize kind of expression: ${\\n      JSON.stringify(expression)\\n    }`\\n  );\\n}\\n\\nasync function evaluateLiteral(\\n  literal: Pointer.Expression.Literal\\n): Promise<Data> {\\n  switch (typeof literal) {\\n    case \\"string\\":\\n      return Data.fromHex(literal);\\n    case \\"number\\":\\n      return Data.fromNumber(literal);\\n  }\\n}\\n\\nasync function evaluateConstant(\\n  constant: Pointer.Expression.Constant\\n): Promise<Data> {\\n  switch (constant) {\\n    case \\"$wordsize\\":\\n      return Data.fromHex(\\"0x20\\");\\n  }\\n}\\n\\nasync function evaluateVariable(\\n  identifier: Pointer.Expression.Variable,\\n  { variables }: EvaluateOptions\\n): Promise<Data> {\\n  const data = variables[identifier];\\n  if (typeof data === \\"undefined\\") {\\n    throw new Error(`Unknown variable with identifier ${identifier}`);\\n  }\\n\\n  return data;\\n}\\n\\nasync function evaluateArithmeticSum(\\n  expression: Pointer.Expression.Arithmetic.Sum,\\n  options: EvaluateOptions\\n): Promise<Data> {\\n  const operands = await Promise.all(expression.$sum.map(\\n    async expression => await evaluate(expression, options)\\n  ));\\n\\n  const maxLength = operands\\n    .reduce((max, { length }) => length > max ? length : max, 0);\\n\\n  const data = Data\\n    .fromUint(operands.reduce((sum, data) => sum + data.asUint(), 0n))\\n    .padUntilAtLeast(maxLength);\\n\\n  return data;\\n}\\n\\nasync function evaluateArithmeticDifference(\\n  expression: Pointer.Expression.Arithmetic.Difference,\\n  options: EvaluateOptions\\n): Promise<Data> {\\n  const [a, b] = await Promise.all(expression.$difference.map(\\n    async expression => await evaluate(expression, options)\\n  ));\\n\\n  const maxLength = a.length > b.length ? a.length : b.length;\\n\\n  const unpadded = a.asUint() > b.asUint()\\n    ? Data.fromUint(a.asUint() - b.asUint())\\n    : Data.fromNumber(0);\\n\\n  const data = unpadded.padUntilAtLeast(maxLength);\\n  return data;\\n}\\n\\nasync function evaluateArithmeticProduct(\\n  expression: Pointer.Expression.Arithmetic.Product,\\n  options: EvaluateOptions\\n): Promise<Data> {\\n  const operands = await Promise.all(expression.$product.map(\\n    async expression => await evaluate(expression, options)\\n  ));\\n\\n  const maxLength = operands\\n    .reduce((max, { length }) => length > max ? length : max, 0);\\n\\n  return Data\\n    .fromUint(operands.reduce((product, data) => product * data.asUint(), 1n))\\n    .padUntilAtLeast(maxLength);\\n}\\n\\nasync function evaluateArithmeticQuotient(\\n  expression: Pointer.Expression.Arithmetic.Quotient,\\n  options: EvaluateOptions\\n): Promise<Data> {\\n  const [a, b] = await Promise.all(expression.$quotient.map(\\n    async expression => (await evaluate(expression, options))\\n  ));\\n\\n  const maxLength = a.length > b.length ? a.length : b.length;\\n\\n  const data = Data\\n    .fromUint(a.asUint() / b.asUint())\\n    .padUntilAtLeast(maxLength);\\n\\n  return data;\\n}\\n\\nasync function evaluateArithmeticRemainder(\\n  expression: Pointer.Expression.Arithmetic.Remainder,\\n  options: EvaluateOptions\\n): Promise<Data> {\\n  const [a, b] = await Promise.all(expression.$remainder.map(\\n    async expression => await evaluate(expression, options)\\n  ));\\n\\n  const maxLength = a.length > b.length ? a.length : b.length;\\n\\n  const data = Data\\n    .fromUint(a.asUint() % b.asUint())\\n    .padUntilAtLeast(maxLength);\\n\\n  return data;\\n}\\n\\nasync function evaluateKeccak256(\\n  expression: Pointer.Expression.Keccak256,\\n  options: EvaluateOptions\\n): Promise<Data> {\\n  const operands = await Promise.all(expression.$keccak256.map(\\n    async expression => await evaluate(expression, options)\\n  ));\\n\\n  const preimage = Data.zero().concat(...operands);\\n  const hash = Data.fromBytes(keccak256(preimage));\\n\\n  return hash;\\n}\\n\\nasync function evaluateResize(\\n  expression: Pointer.Expression.Resize,\\n  options: EvaluateOptions\\n): Promise<Data> {\\n  const [[operation, subexpression]] = Object.entries(expression);\\n\\n  const newLength = Pointer.Expression.Resize.isToNumber(expression)\\n    ? Number(operation.match(/^\\\\$sized([1-9]+[0-9]*)$/)![1])\\n    : 32;\\n\\n  return (await evaluate(subexpression, options)).resizeTo(newLength);\\n}\\n\\nasync function evaluateLookup<O extends Pointer.Expression.Lookup.Operation>(\\n  operation: O,\\n  lookup: Pointer.Expression.Lookup.ForOperation<O>,\\n  options: EvaluateOptions\\n): Promise<Data> {\\n  const { regions } = options;\\n\\n  const identifier = lookup[operation];\\n  const region = regions[identifier];\\n  if (!region) {\\n    throw new Error(`Region not found: ${identifier}`);\\n  }\\n\\n  const property = Pointer.Expression.Lookup.propertyFrom(operation);\\n\\n  const data = region[property as keyof typeof region] as Data | undefined;\\n\\n  if (typeof data === \\"undefined\\") {\\n    throw new Error(\\n      `Region named ${identifier} does not have ${property} needed by lookup`\\n    );\\n  }\\n\\n  return data;\\n}\\n\\nasync function evaluateRead(\\n  expression: Pointer.Expression.Read,\\n  options: EvaluateOptions\\n): Promise<Data> {\\n  const { state, regions } = options;\\n\\n  const identifier = expression.$read;\\n  const region = regions[identifier];\\n  if (!region) {\\n    throw new Error(`Region not found: ${identifier}`);\\n  }\\n\\n  return await read(region, options);\\n}\\n"},{"filePath":"src/index.ts","text":"export { Pointer, isPointer } from \\"./pointer.js\\";\\nexport { dereference, DereferenceOptions } from \\"./dereference/index.js\\";\\nexport { Cursor } from \\"./cursor.js\\";\\n\\nexport type { Machine } from \\"./machine.js\\";\\nexport { Data } from \\"./data.js\\";\\n"},{"filePath":"src/integration.test.ts","text":"import { jest, expect, describe, it, beforeEach } from \\"@jest/globals\\";\\n\\nimport { observeTrace } from \\"../test/index.js\\";\\nimport { observeTraceTests } from \\"./test-cases.js\\";\\n\\ndescribe(\\"dereference (integration)\\", () => {\\n  describe(\\"changing pointer values over the course of a trace\\", () => {\\n    for (const [name, test] of Object.entries(observeTraceTests)) {\\n      const { expectedValues, ...options } = test;\\n\\n      describe(`example pointer: ${name}`, () => {\\n        it(\\"resolves to values containing the expected sequence\\", async () => {\\n          const observedValues =\\n            await observeTrace(options as Parameters<typeof observeTrace>[0]);\\n\\n          expect(observedValues)\\n            .toEqual(expect.arrayContaining(expectedValues));\\n        });\\n      });\\n    }\\n  });\\n});\\n"},{"filePath":"src/machine.ts","text":"import type { Data } from \\"./data.js\\";\\n\\nexport interface Machine {\\n  trace(): AsyncIterable<Machine.State>;\\n}\\n\\nexport namespace Machine {\\n\\n  export interface State {\\n    get traceIndex(): Promise<bigint>;\\n    get programCounter(): Promise<bigint>;\\n    get opcode(): Promise<string>;\\n\\n    get stack(): State.Stack;\\n    get memory(): State.Bytes;\\n    get storage(): State.Words;\\n    get calldata(): State.Bytes;\\n    get returndata(): State.Bytes;\\n    get transient(): State.Words;\\n    get code(): State.Bytes;\\n  }\\n\\n  export namespace State {\\n    export interface Slice {\\n      offset: bigint;\\n      length: bigint;\\n    }\\n\\n    export interface Stack {\\n      get length(): Promise<bigint>;\\n\\n      /** read element at position from top of stack */\\n      peek(options: {\\n        depth: bigint;\\n        slice?: Slice;\\n      }): Promise<Data>;\\n    }\\n\\n    export interface Bytes {\\n      get length(): Promise<bigint>;\\n\\n      read(options: { slice: Slice }): Promise<Data>;\\n    }\\n\\n    export interface Words {\\n      read(options: { slot: Data; slice?: Slice }): Promise<Data>;\\n    }\\n  }\\n}\\n"},{"filePath":"src/pointer.test.ts","text":"import { expect, describe, it } from \\"@jest/globals\\";\\nimport chalk from \\"chalk\\";\\n\\nimport { describeSchema } from \\"@ethdebug/format\\";\\n\\nimport { Pointer, isPointer } from \\"./index.js\\";\\n\\nexpect.extend({\\n  toSatisfy<T, P extends (value: unknown) => value is T>(\\n    predicate: P,\\n    received: any\\n  ) {\\n    const pass = predicate(received);\\n\\n    return {\\n      pass,\\n      message: () => `expected ${\\n        JSON.stringify(received)\\n      } ${\\n        pass\\n          ? \\"not to satisfy\\"\\n          : \\"to satisfy\\"\\n      } the predicate ${predicate.name}`\\n    };\\n  },\\n\\n  toSatisfyAll<T, P extends (value: unknown) => value is T>(\\n    predicate: P,\\n    values: any[]\\n  ) {\\n    const results = values.map(value => ({\\n      value,\\n      pass: predicate(value)\\n    }));\\n\\n    const pass = results.every(result => result.pass);\\n\\n    return {\\n      pass,\\n      message: () => `expected the predicate ${predicate.name} ${\\n        pass\\n          ? \\"not to be satisfied by all\\"\\n          : \\"to be satisfied by all\\"\\n      } of the following values:\\\\n${\\n        results.map(result => `  ${\\n          result.pass\\n            ? chalk.green(\\"\u2713\\")\\n            : chalk.red(\\"\u2717\\")\\n        } ${\\n          // @ts-ignore\\n          this.utils.printReceived(result.value)\\n        }`).join(\\"\\\\n\\")\\n      }`\\n    };\\n  }\\n});\\n\\ndescribe(\\"type guards\\", () => {\\n  const expressionSchema = {\\n    id: \\"schema:ethdebug/format/pointer/expression\\"\\n  };\\n\\n  const schemaGuards = [\\n    {\\n      schema: expressionSchema,\\n      guard: Pointer.isExpression\\n    },\\n    {\\n      schema: expressionSchema,\\n      pointer: \\"#/$defs/Literal\\",\\n      guard: Pointer.Expression.isLiteral\\n    },\\n    {\\n      schema: expressionSchema,\\n      pointer: \\"#/$defs/Constant\\",\\n      guard: Pointer.Expression.isConstant\\n    },\\n    {\\n      schema: expressionSchema,\\n      pointer: \\"#/$defs/Variable\\",\\n      guard: Pointer.Expression.isVariable\\n    },\\n    {\\n      schema: expressionSchema,\\n      pointer: \\"#/$defs/Arithmetic\\",\\n      guard: Pointer.Expression.isArithmetic\\n    },\\n    {\\n      schema: expressionSchema,\\n      pointer: \\"#/$defs/Lookup\\",\\n      guard: Pointer.Expression.isLookup\\n    },\\n    {\\n      schema: expressionSchema,\\n      pointer: \\"#/$defs/Read\\",\\n      guard: Pointer.Expression.isRead\\n    },\\n    {\\n      schema: expressionSchema,\\n      pointer: \\"#/$defs/Reference\\",\\n      guard: Pointer.Expression.isReference\\n    },\\n    {\\n      schema: expressionSchema,\\n      pointer: \\"#/$defs/Keccak256\\",\\n      guard: Pointer.Expression.isKeccak256\\n    },\\n    {\\n      schema: expressionSchema,\\n      pointer: \\"#/$defs/Resize\\",\\n      guard: Pointer.Expression.isResize\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/region\\"\\n      },\\n      guard: Pointer.isRegion\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/region/stack\\"\\n      },\\n      guard: Pointer.Region.isStack\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/region/memory\\"\\n      },\\n      guard: Pointer.Region.isMemory\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/region/storage\\"\\n      },\\n      guard: Pointer.Region.isStorage\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/region/calldata\\"\\n      },\\n      guard: Pointer.Region.isCalldata\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/region/returndata\\"\\n      },\\n      guard: Pointer.Region.isReturndata\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/region/transient\\"\\n      },\\n      guard: Pointer.Region.isTransient\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/region/code\\"\\n      },\\n      guard: Pointer.Region.isCode\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/collection/group\\"\\n      },\\n      guard: Pointer.Collection.isGroup\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/collection/list\\"\\n      },\\n      guard: Pointer.Collection.isList\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer\\"\\n      },\\n      guard: isPointer\\n    },\\n    {\\n      schema: {\\n        id: \\"schema:ethdebug/format/pointer/template\\"\\n      },\\n      guard: Pointer.isTemplate\\n    },\\n  ] as const;\\n\\n  it.each(schemaGuards)(\\"matches its examples\\", ({\\n    guard,\\n    ...describeSchemaOptions\\n  }) => {\\n    const { schema: { examples = [] } } = describeSchema(describeSchemaOptions);\\n\\n    expect(guard).toSatisfyAll(examples);\\n  });\\n});\\n"},{"filePath":"src/pointer.ts","text":"export type Pointer =\\n  | Pointer.Region\\n  | Pointer.Collection;\\n\\nexport const isPointer = (value: unknown): value is Pointer =>\\n  [\\n    Pointer.isRegion,\\n    Pointer.isCollection\\n  ].some(guard => guard(value));\\n\\nexport namespace Pointer {\\n  export type Identifier = string;\\n  export const isIdentifier = (value: unknown): value is Identifier =>\\n    typeof value === \\"string\\" && /^[a-zA-Z_\\\\\\\\-]+[a-zA-Z0-9$_\\\\\\\\-]*$/.test(value);\\n\\n  export type Region =\\n    | Region.Stack\\n    | Region.Memory\\n    | Region.Storage\\n    | Region.Calldata\\n    | Region.Returndata\\n    | Region.Transient\\n    | Region.Code;\\n\\n  export const isRegion = (value: unknown): value is Region =>\\n    [\\n      Region.isStack,\\n      Region.isMemory,\\n      Region.isStorage,\\n      Region.isCalldata,\\n      Region.isReturndata,\\n      Region.isTransient,\\n      Region.isCode\\n    ].some(guard => guard(value));\\n\\n  export namespace Region {\\n    export interface Base {\\n      name?: string;\\n      location: string;\\n    }\\n    export const isBase = (value: unknown): value is Base =>\\n      !!value &&\\n        typeof value === \\"object\\" &&\\n        (!(\\"name\\" in value) || typeof value.name === \\"string\\") &&\\n        \\"location\\" in value &&\\n        typeof value.location === \\"string\\";\\n\\n    export type Name = Base[\\"name\\"];\\n\\n    export type Stack =\\n      & Base\\n      & Scheme.Segment\\n      & { location: \\"stack\\" };\\n    export const isStack = (value: unknown): value is Stack =>\\n      isBase(value) && Scheme.isSegment(value) && value.location === \\"stack\\";\\n\\n    export type Memory =\\n      & Base\\n      & Scheme.Slice\\n      & { location: \\"memory\\" };\\n    export const isMemory = (value: unknown): value is Memory =>\\n      isBase(value) && Scheme.isSlice(value) && value.location === \\"memory\\";\\n\\n    export type Storage =\\n      & Base\\n      & Scheme.Segment\\n      & { location: \\"storage\\" };\\n    export const isStorage = (value: unknown): value is Storage =>\\n      isBase(value) && Scheme.isSegment(value) && value.location === \\"storage\\";\\n\\n    export type Calldata =\\n      & Base\\n      & Scheme.Slice\\n      & { location: \\"calldata\\" };\\n    export const isCalldata = (value: unknown): value is Calldata =>\\n      isBase(value) && Scheme.isSlice(value) && value.location === \\"calldata\\";\\n\\n    export type Returndata =\\n      & Base\\n      & Scheme.Slice\\n      & { location: \\"returndata\\" };\\n    export const isReturndata = (value: unknown): value is Returndata =>\\n      isBase(value) && Scheme.isSlice(value) && value.location === \\"returndata\\";\\n\\n    export type Transient =\\n      & Base\\n      & Scheme.Segment\\n      & { location: \\"transient\\" };\\n    export const isTransient = (value: unknown): value is Transient =>\\n      isBase(value) && Scheme.isSegment(value) && value.location === \\"transient\\";\\n\\n    export type Code =\\n      & Base\\n      & Scheme.Slice\\n      & { location: \\"code\\" };\\n    export const isCode = (value: unknown): value is Code =>\\n      isBase(value) && Scheme.isSlice(value) && value.location === \\"code\\";\\n  }\\n\\n  export namespace Scheme {\\n    export interface Segment {\\n      slot: Expression;\\n      offset?: Expression;\\n      length?: Expression;\\n    }\\n    export const isSegment = (value: unknown): value is Segment =>\\n      !!value &&\\n        typeof value === \\"object\\" &&\\n        \\"slot\\" in value &&\\n        isExpression(value.slot) &&\\n        (!(\\"offset\\" in value) || isExpression(value.offset)) &&\\n        (!(\\"length\\" in value) || isExpression(value.length));\\n\\n    export interface Slice {\\n      offset: Expression;\\n      length: Expression;\\n    }\\n\\n    export const isSlice = (value: unknown): value is Slice =>\\n      !!value &&\\n        typeof value === \\"object\\" &&\\n        \\"offset\\" in value &&\\n        isExpression(value.offset) &&\\n        \\"length\\" in value &&\\n        isExpression(value.length);\\n  }\\n\\n  export type Collection =\\n    | Collection.Group\\n    | Collection.List\\n    | Collection.Conditional\\n    | Collection.Scope\\n    | Collection.Reference;\\n\\n  export const isCollection = (value: unknown): value is Collection =>\\n    [\\n      Collection.isGroup,\\n      Collection.isList,\\n      Collection.isConditional,\\n      Collection.isScope,\\n      Collection.isReference\\n    ].some(guard => guard(value));\\n\\n  export namespace Collection {\\n    export interface Group {\\n      group: Pointer[];\\n    }\\n    export const isGroup = (value: unknown): value is Group =>\\n      !!value &&\\n        typeof value === \\"object\\" &&\\n        Object.keys(value).length === 1 &&\\n        \\"group\\" in value &&\\n        value.group instanceof Array &&\\n        value.group.length >= 1 &&\\n        value.group.every(isPointer);\\n\\n    export interface List {\\n      list: {\\n        count: Expression;\\n        each: Identifier;\\n        is: Pointer;\\n      }\\n    }\\n    export const isList = (value: unknown): value is List =>\\n      !!value &&\\n        typeof value === \\"object\\" &&\\n        Object.keys(value).length === 1 &&\\n        \\"list\\" in value &&\\n        !!value.list &&\\n        typeof value.list === \\"object\\" &&\\n        Object.keys(value.list).length === 3 &&\\n        \\"count\\" in value.list &&\\n        isExpression(value.list.count) &&\\n        \\"each\\" in value.list &&\\n        isIdentifier(value.list.each) &&\\n        \\"is\\" in value.list &&\\n        isPointer(value.list.is);\\n\\n    export interface Conditional {\\n      if: Expression;\\n      then: Pointer;\\n      else?: Pointer;\\n    }\\n    export const isConditional = (value: unknown): value is Conditional =>\\n      !!value &&\\n        typeof value === \\"object\\" &&\\n        \\"if\\" in value &&\\n        isExpression(value.if) &&\\n        \\"then\\" in value &&\\n        isPointer(value.then) &&\\n        (!(\\"else\\" in value) || isPointer(value.else));\\n\\n    export interface Scope {\\n      define: {\\n        [identifier: string]: Expression;\\n      }\\n      in: Pointer;\\n    }\\n\\n    export const isScope = (value: unknown): value is Scope =>\\n      !!value &&\\n        typeof value === \\"object\\" &&\\n        \\"define\\" in value &&\\n        typeof value.define === \\"object\\" && !!value.define &&\\n        Object.keys(value.define).every(key => isIdentifier(key)) &&\\n        \\"in\\" in value &&\\n        isPointer(value.in);\\n\\n    export interface Reference {\\n      template: string;\\n    }\\n\\n    export const isReference = (value: unknown): value is Reference =>\\n      !!value &&\\n        typeof value === \\"object\\" &&\\n        \\"template\\" in value &&\\n        typeof value.template === \\"string\\" && !!value.template\\n  }\\n\\n  export type Expression =\\n    | Expression.Literal\\n    | Expression.Constant\\n    | Expression.Variable\\n    | Expression.Arithmetic\\n    | Expression.Lookup\\n    | Expression.Read\\n    | Expression.Keccak256\\n    | Expression.Resize;\\n\\n  export const isExpression = (value: unknown): value is Expression =>\\n    [\\n      Expression.isLiteral,\\n      Expression.isConstant,\\n      Expression.isVariable,\\n      Expression.isArithmetic,\\n      Expression.isLookup,\\n      Expression.isRead,\\n      Expression.isKeccak256,\\n      Expression.isResize\\n    ].some(guard => guard(value));\\n\\n  export namespace Expression {\\n    export type Literal = number | `0x${string}`;\\n    export const isLiteral = (value: unknown): value is Literal =>\\n      typeof value === \\"number\\" ||\\n        typeof value === \\"string\\" && /^0x[0-9a-fA-F]+$/.test(value);\\n\\n    export type Constant =\\n      | \\"$wordsize\\";\\n    export const isConstant = (value: unknown): value is Constant =>\\n      typeof value === \\"string\\" && [\\"$wordsize\\"].includes(value);\\n\\n    export type Variable = string;\\n    export const isVariable = (value: unknown): value is Variable =>\\n      isIdentifier(value);\\n\\n    export type Arithmetic =\\n      | Arithmetic.Sum\\n      | Arithmetic.Difference\\n      | Arithmetic.Product\\n      | Arithmetic.Quotient\\n      | Arithmetic.Remainder;\\n\\n    export const isArithmetic = (value: unknown): value is Arithmetic =>\\n      [\\n        Arithmetic.isSum,\\n        Arithmetic.isDifference,\\n        Arithmetic.isProduct,\\n        Arithmetic.isQuotient,\\n        Arithmetic.isRemainder\\n      ].some(guard => guard(value));\\n\\n    const makeIsOperation = <\\n      O extends string,\\n      T extends { [K in O]: any; }\\n    >(\\n      operation: O,\\n      checkOperands: (operands: unknown) => operands is T[O]\\n    ) => (value: unknown): value is T =>\\n      !!value &&\\n        typeof value === \\"object\\" &&\\n        Object.keys(value).length === 1 &&\\n        operation in value &&\\n        checkOperands(value[operation as keyof typeof value]);\\n\\n    export type Operands = Expression[];\\n    export const isOperands =\\n      (value: unknown): value is Expression[] =>\\n        value instanceof Array && value.every(isExpression);\\n\\n    export namespace Arithmetic {\\n      export type Operation =\\n        | keyof Sum\\n        | keyof Difference\\n        | keyof Product\\n        | keyof Quotient\\n        | keyof Remainder;\\n\\n      export const isTwoOperands =\\n        (value: unknown): value is [Expression, Expression] =>\\n          isOperands(value) && value.length === 2;\\n\\n      export interface Sum {\\n        $sum: Expression[];\\n      }\\n      export const isSum =\\n        makeIsOperation<\\"$sum\\", Sum>(\\"$sum\\", isOperands);\\n\\n      export interface Difference {\\n        $difference: [Expression, Expression];\\n      }\\n      export const isDifference =\\n        makeIsOperation<\\"$difference\\", Difference>(\\"$difference\\", isTwoOperands);\\n\\n      export interface Product {\\n        $product: Expression[];\\n      }\\n      export const isProduct =\\n        makeIsOperation<\\"$product\\", Product>(\\"$product\\", isOperands);\\n\\n      export interface Quotient {\\n        $quotient: [Expression, Expression];\\n      }\\n      export const isQuotient =\\n        makeIsOperation<\\"$quotient\\", Quotient>(\\"$quotient\\", isTwoOperands);\\n\\n      export interface Remainder {\\n        $remainder: [Expression, Expression];\\n      }\\n      export const isRemainder =\\n        makeIsOperation<\\"$remainder\\", Remainder>(\\"$remainder\\", isTwoOperands);\\n    }\\n\\n    export type Reference =\\n      | Identifier\\n      | \\"$this\\";\\n    export const isReference = (value: unknown): value is Reference =>\\n      isIdentifier(value) || value === \\"$this\\";\\n\\n    export type Lookup =\\n      | Lookup.Offset\\n      | Lookup.Length\\n      | Lookup.Slot;\\n    export const isLookup = (value: unknown): value is Lookup =>\\n      [\\n        Lookup.isOffset,\\n        Lookup.isLength,\\n        Lookup.isSlot\\n      ].some(guard => guard(value));\\n\\n    export namespace Lookup {\\n      export type Operation =\\n        | keyof Offset\\n        | keyof Length\\n        | keyof Slot;\\n\\n      export type ForOperation<O extends Operation> =\\n        & Lookup\\n        & { [K in O]: any };\\n\\n      export const propertyFrom = <O extends Operation>(\\n        operation: O\\n      ): \\"slot\\" | \\"offset\\" | \\"length\\" => {\\n        return operation.slice(1) as \\"slot\\" | \\"offset\\" | \\"length\\";\\n      }\\n\\n      export interface Offset {\\n        \\".offset\\": Reference;\\n      }\\n      export const isOffset =\\n        makeIsOperation<\\".offset\\", Offset>(\\".offset\\", isReference);\\n\\n      export interface Length {\\n        \\".length\\": Reference;\\n      }\\n      export const isLength =\\n        makeIsOperation<\\".length\\", Length>(\\".length\\", isReference);\\n\\n      export interface Slot {\\n        \\".slot\\": Reference;\\n      }\\n      export const isSlot =\\n        makeIsOperation<\\".slot\\", Slot>(\\".slot\\", isReference);\\n    }\\n\\n    export interface Read {\\n      $read: Reference\\n    }\\n    export const isRead = makeIsOperation<\\"$read\\", Read>(\\"$read\\", isReference);\\n\\n    export interface Keccak256 {\\n      $keccak256: Expression[];\\n    }\\n    export const isKeccak256 =\\n      makeIsOperation<\\"$keccak256\\", Keccak256>(\\"$keccak256\\", isOperands);\\n\\n    export type Resize<N extends number = number> =\\n      | Resize.ToNumber<N>\\n      | Resize.ToWordsize;\\n    export const isResize = <N extends number>(\\n      value: unknown\\n    ): value is Resize<N> =>\\n      [\\n        Resize.isToWordsize,\\n        Resize.isToNumber,\\n      ].some(guard => guard(value));\\n\\n    export namespace Resize {\\n      export type ToNumber<N extends number> = {\\n        [K in `$sized${N}`]: Expression;\\n      };\\n      export const isToNumber = <N extends number>(\\n        value: unknown\\n      ): value is ToNumber<N> => {\\n        if (\\n          !value ||\\n            typeof value !== \\"object\\" ||\\n            Object.keys(value).length !== 1\\n        ) {\\n          return false;\\n        }\\n        const [key] = Object.keys(value);\\n\\n        return typeof key === \\"string\\" && /^\\\\$sized([1-9]+[0-9]*)$/.test(key);\\n      };\\n\\n      export type ToWordsize = {\\n        $wordsized: Expression;\\n      }\\n      export const isToWordsize = (value: unknown): value is ToWordsize =>\\n        !!value &&\\n          typeof value === \\"object\\" &&\\n          Object.keys(value).length === 1 &&\\n          \\"$wordsized\\" in value &&\\n          typeof value.$wordsized !== \\"undefined\\" &&\\n          isExpression(value.$wordsized);\\n    }\\n  }\\n\\n  export interface Templates {\\n    [identifier: string]: Pointer.Template;\\n  }\\n\\n  export const isTemplates = (value: unknown): value is Templates =>\\n    !!value &&\\n      typeof value === \\"object\\" &&\\n      Object.keys(value).every(isIdentifier) &&\\n      Object.values(value).every(isTemplate);\\n\\n  export interface Template {\\n    expect: string[];\\n    for: Pointer;\\n  }\\n\\n  export const isTemplate = (value: unknown): value is Template =>\\n    !!value &&\\n      typeof value === \\"object\\" &&\\n      Object.keys(value).length === 2 &&\\n      \\"expect\\" in value &&\\n      value.expect instanceof Array &&\\n      value.expect.every(isIdentifier) &&\\n      \\"for\\" in value &&\\n      isPointer(value.for);\\n\\n}\\n"},{"filePath":"src/read.test.ts","text":"import { jest, expect, describe, it, beforeEach } from \\"@jest/globals\\";\\nimport { Machine } from \\"./machine.js\\";\\nimport { Data } from \\"./data.js\\";\\nimport type { Pointer } from \\"./pointer.js\\";\\nimport { read, type ReadOptions } from \\"./read.js\\";\\nimport { Cursor } from \\"./cursor.js\\";\\n\\ndescribe(\\"read\\", () => {\\n  let options: ReadOptions;\\n\\n  beforeEach(() => {\\n    const state: Machine.State = {\\n      stack: {\\n        length: 50n,\\n        peek: jest.fn(\\n          async ({ depth, slice }) =>\\n            Data.fromBytes(new Uint8Array([0x11, 0x22, 0x33, 0x44]))\\n        ),\\n      },\\n      memory: {\\n        read: jest.fn(\\n          async ({ slice }) =>\\n            Data.fromBytes(new Uint8Array([0x55, 0x66, 0x77, 0x88]))\\n        ),\\n      },\\n      storage: {\\n        read: jest.fn(\\n          async ({ slot, slice }) =>\\n            Data.fromBytes(new Uint8Array([0xaa, 0xbb, 0xcc, 0xdd]))\\n        ),\\n      },\\n      calldata: {\\n        read: jest.fn(\\n          async ({ slice }) =>\\n            Data.fromBytes(new Uint8Array([0x11, 0x22, 0x33, 0x44]))\\n        ),\\n      },\\n      returndata: {\\n        read: jest.fn(\\n          async ({ slice }) =>\\n            Data.fromBytes(new Uint8Array([0x55, 0x66, 0x77, 0x88]))\\n        ),\\n      },\\n      transient: {\\n        read: jest.fn(\\n          async ({ slot, slice }) =>\\n            Data.fromBytes(new Uint8Array([0xaa, 0xbb, 0xcc, 0xdd]))\\n        ),\\n      },\\n      code: {\\n        read: jest.fn(\\n          async ({ slice }) =>\\n            Data.fromBytes(new Uint8Array([0x11, 0x22, 0x33, 0x44]))\\n        ),\\n      },\\n    } as unknown as Machine.State;\\n\\n    options = {\\n      state\\n    };\\n  });\\n\\n  it(\\"reads data from stack\\", async () => {\\n    const region: Cursor.Region<Pointer.Region.Stack> = {\\n      location: \\"stack\\",\\n      slot: Data.fromNumber(42),\\n      offset: Data.fromNumber(1),\\n      length: Data.fromNumber(2),\\n    };\\n\\n    const result = await read(region, options);\\n\\n    expect(options.state.stack.peek)\\n      .toHaveBeenCalledWith({ depth: 42n, slice: { offset: 1n, length: 2n } });\\n    expect(result)\\n      .toEqual(Data.fromBytes(new Uint8Array([0x11, 0x22, 0x33, 0x44])));\\n  });\\n\\n  it(\\"reads data from memory\\", async () => {\\n    const region: Cursor.Region<Pointer.Region.Memory> = {\\n      location: \\"memory\\",\\n      offset: Data.fromNumber(0),\\n      length: Data.fromNumber(4),\\n    };\\n\\n    const result = await read(region, options);\\n\\n    expect(options.state.memory.read)\\n      .toHaveBeenCalledWith({ slice: { offset: 0n, length: 4n } });\\n    expect(result)\\n      .toEqual(Data.fromBytes(new Uint8Array([0x55, 0x66, 0x77, 0x88])));\\n  });\\n\\n  it(\\"reads data from storage\\", async () => {\\n    const region: Cursor.Region<Pointer.Region.Storage> = {\\n      location: \\"storage\\",\\n      slot: Data.fromNumber(0),\\n      offset: Data.fromNumber(2),\\n      length: Data.fromNumber(2),\\n    };\\n\\n    const result = await read(region, options);\\n\\n    expect(options.state.storage.read)\\n      .toHaveBeenCalledWith({\\n        slot: Data.fromNumber(0),\\n        slice: { offset: 2n, length: 2n }\\n      });\\n\\n    expect(result)\\n      .toEqual(Data.fromBytes(new Uint8Array([0xaa, 0xbb, 0xcc, 0xdd])));\\n  });\\n\\n  it(\\"reads data from calldata\\", async () => {\\n    const region: Cursor.Region<Pointer.Region.Calldata> = {\\n      location: \\"calldata\\",\\n      offset: Data.fromNumber(0),\\n      length: Data.fromNumber(4),\\n    };\\n\\n    const result = await read(region, options);\\n\\n    expect(options.state.calldata.read)\\n      .toHaveBeenCalledWith({ slice: { offset: 0n, length: 4n } });\\n    expect(result)\\n      .toEqual(Data.fromBytes(new Uint8Array([0x11, 0x22, 0x33, 0x44])));\\n  });\\n\\n  it(\\"reads data from returndata\\", async () => {\\n    const region: Cursor.Region<Pointer.Region.Returndata> = {\\n      location: \\"returndata\\",\\n      offset: Data.fromNumber(0),\\n      length: Data.fromNumber(4),\\n    };\\n\\n    const result = await read(region, options);\\n\\n    expect(options.state.returndata.read)\\n      .toHaveBeenCalledWith({ slice: { offset: 0n, length: 4n } });\\n    expect(result)\\n      .toEqual(Data.fromBytes(new Uint8Array([0x55, 0x66, 0x77, 0x88])));\\n  });\\n\\n  it(\\"reads data from transient\\", async () => {\\n    const region: Cursor.Region<Pointer.Region.Transient> = {\\n      location: \\"transient\\",\\n      slot: Data.fromNumber(42),\\n      offset: Data.fromNumber(1),\\n      length: Data.fromNumber(2),\\n    };\\n\\n    const result = await read(region, options);\\n\\n    expect(options.state.transient.read)\\n      .toHaveBeenCalledWith({\\n        slot: Data.fromNumber(42),\\n        slice: { offset: 1n, length: 2n }\\n      });\\n\\n    expect(result)\\n      .toEqual(Data.fromBytes(new Uint8Array([0xaa, 0xbb, 0xcc, 0xdd])));\\n  });\\n\\n  it(\\"reads data from code\\", async () => {\\n    const region: Cursor.Region<Pointer.Region.Code> = {\\n      location: \\"code\\",\\n      offset: Data.fromNumber(0),\\n      length: Data.fromNumber(4),\\n    };\\n\\n    const result = await read(region, options);\\n\\n    expect(options.state.code.read)\\n      .toHaveBeenCalledWith({\\n        slice: { offset: 0n, length: 4n }\\n      });\\n\\n    expect(result)\\n      .toEqual(Data.fromBytes(new Uint8Array([0x11, 0x22, 0x33, 0x44])));\\n  });\\n\\n  it(\\"uses default offset and length values for stack region\\", async () => {\\n    const region: Cursor.Region<Pointer.Region.Stack> = {\\n      location: \\"stack\\",\\n      slot: Data.fromNumber(42),\\n    };\\n\\n    const result = await read(region, options);\\n\\n    expect(options.state.stack.peek)\\n      .toHaveBeenCalledWith({\\n        depth: 42n,\\n        slice: { offset: 0n, length: 32n }\\n      });\\n\\n    expect(result)\\n      .toEqual(Data.fromBytes(new Uint8Array([0x11, 0x22, 0x33, 0x44])));\\n  });\\n\\n  it(\\"uses default offset and length values for storage region\\", async () => {\\n    const region: Cursor.Region<Pointer.Region.Storage> = {\\n      location: \\"storage\\",\\n      slot: Data.fromHex(\\"0x1f\\"),\\n    };\\n\\n    const result = await read(region, options);\\n\\n    expect(options.state.storage.read)\\n      .toHaveBeenCalledWith({\\n        slot: Data.fromHex(\\"0x1f\\"),\\n        slice: { offset: 0n, length: 32n }\\n      });\\n\\n    expect(result)\\n      .toEqual(Data.fromBytes(new Uint8Array([0xaa, 0xbb, 0xcc, 0xdd])));\\n  });\\n\\n  it(\\"uses default offset and length values for transient region\\", async () => {\\n    const region: Cursor.Region<Pointer.Region.Transient> = {\\n      location: \\"transient\\",\\n      slot: Data.fromNumber(42)\\n    };\\n\\n    const result = await read(region, options);\\n\\n    expect(options.state.transient.read)\\n      .toHaveBeenCalledWith({\\n        slot: Data.fromNumber(42),\\n        slice: { offset: 0n, length: 32n }\\n      });\\n\\n    expect(result)\\n      .toEqual(Data.fromBytes(new Uint8Array([0xaa, 0xbb, 0xcc, 0xdd])));\\n  });\\n});\\n"},{"filePath":"src/read.ts","text":"import { Pointer } from \\"./pointer.js\\";\\nimport { Machine } from \\"./machine.js\\";\\nimport { Data } from \\"./data.js\\";\\nimport type { Cursor } from \\"./cursor.js\\";\\n\\nexport interface ReadOptions {\\n  state: Machine.State;\\n}\\n\\nexport async function read(\\n  region: Cursor.Region,\\n  options: ReadOptions\\n): Promise<Data> {\\n  const { location } = region;\\n  const { state } = options;\\n\\n  switch (location) {\\n    case \\"stack\\": {\\n      const {\\n        slot,\\n        offset = 0n,\\n        length = 32n\\n      } = withPropertiesAsUints([\\"slot\\", \\"offset\\", \\"length\\"], region);\\n\\n      return await state.stack.peek({\\n        depth: slot,\\n        slice: {\\n          offset,\\n          length\\n        }\\n      });\\n    }\\n    case \\"memory\\": {\\n      const {\\n        offset,\\n        length\\n      } = withPropertiesAsUints([\\"offset\\", \\"length\\"], region);\\n\\n      return await state.memory.read({\\n        slice: {\\n          offset: offset,\\n          length: length\\n        }\\n      });\\n    }\\n    case \\"storage\\": {\\n      const { slot } = region;\\n      const {\\n        offset = 0n,\\n        length = 32n\\n      } = withPropertiesAsUints([\\"offset\\", \\"length\\"], region);\\n\\n      return await state.storage.read({\\n        slot,\\n        slice: {\\n          offset,\\n          length\\n        }\\n      });\\n    }\\n    case \\"calldata\\": {\\n      const {\\n        offset,\\n        length\\n      } = withPropertiesAsUints([\\"offset\\", \\"length\\"], region);\\n\\n      return await state.calldata.read({ slice: { offset, length } });\\n    }\\n    case \\"returndata\\": {\\n      const {\\n        offset,\\n        length\\n      } = withPropertiesAsUints([\\"offset\\", \\"length\\"], region);\\n\\n      return await state.returndata.read({ slice: { offset, length } });\\n    }\\n    case \\"transient\\": {\\n      const { slot } = region;\\n      const {\\n        offset = 0n,\\n        length = 32n\\n      } = withPropertiesAsUints([\\"offset\\", \\"length\\"], region);\\n\\n      return await state.transient.read({\\n        slot,\\n        slice: {\\n          offset,\\n          length\\n        }\\n      });\\n    }\\n    case \\"code\\": {\\n      const {\\n        offset,\\n        length\\n      } = withPropertiesAsUints([\\"offset\\", \\"length\\"], region);\\n\\n      return await state.code.read({ slice: { offset, length } });\\n    }\\n  }\\n}\\n\\ntype DataProperties<R extends Pointer.Region> = {\\n  [K in (\\n    & keyof Cursor.Region<R>\\n    & (\\"slot\\" | \\"offset\\" | \\"length\\")\\n  )]: Cursor.Region<R>[K];\\n}\\n\\ntype PickDataPropertiesAsUints<\\n  R extends Pointer.Region,\\n  U extends keyof DataProperties<R>\\n> = {\\n  [K in U]:\\n    undefined extends Cursor.Region<R>[K]\\n      ? bigint | undefined\\n      : bigint\\n};\\n\\nfunction withPropertiesAsUints<\\n  R extends Pointer.Region,\\n  U extends keyof DataProperties<R>\\n>(\\n  uintKeys: U[],\\n  region: Cursor.Region<R>\\n): PickDataPropertiesAsUints<R, U> {\\n  const result: Partial<PickDataPropertiesAsUints<R, U>> = {};\\n  for (const key of uintKeys) {\\n    const data: Data | undefined = region[key] as Data | undefined;\\n    if (typeof data !== \\"undefined\\") {\\n      result[key] = data.asUint();\\n    }\\n  }\\n\\n  return result as PickDataPropertiesAsUints<R, U>;\\n}\\n"},{"filePath":"src/test-cases.ts","text":"import {\\n  singleSourceCompilation,\\n  findExamplePointer,\\n  type ObserveTraceOptions\\n} from \\"../test/index.js\\";\\nimport { type Cursor, Data } from \\"./index.js\\";\\n\\nexport interface ObserveTraceTest<V> extends ObserveTraceOptions<V> {\\n  expectedValues: V[];\\n}\\n\\nconst structStorageTest: ObserveTraceTest<{\\n  x: number;\\n  y: number;\\n  salt: string;\\n}> = {\\n  pointer: findExamplePointer(\\"struct-storage-contract-variable-slot\\"),\\n  compileOptions: singleSourceCompilation({\\n    path: \\"StructStorage.sol\\",\\n    contractName: \\"StructStorage\\",\\n    content: `contract StructStorage {\\n      Record record;\\n\\n      uint8 step;\\n\\n      constructor() {\\n        record = Record({\\n          x: 5,\\n          y: 8,\\n          salt: 0xdeadbeef\\n        });\\n\\n        // trick the optimizer maybe (otherwise the first record assignment\\n        // will get optimized out)\\n        //\\n        // compiler might be smarter in the future and cause this test to fail\\n        step = 1;\\n\\n        record = Record({\\n          x: 1,\\n          y: 2,\\n          salt: 0xfeedface\\n        });\\n\\n        step = 2;\\n      }\\n    }\\n\\n    struct Record {\\n      uint8 x;\\n      uint8 y;\\n      bytes4 salt;\\n    }\\n    `\\n  }),\\n\\n  expectedValues: [\\n    { x: 0, y: 0, salt: \\"0x\\" },\\n    { x: 5, y: 8, salt: \\"0xdeadbeef\\" },\\n    { x: 1, y: 2, salt: \\"0xfeedface\\" },\\n  ],\\n\\n  async observe({ regions, read }) {\\n    const x = Number(\\n      (await read(regions.lookup[\\"x\\"])).asUint()\\n    );\\n\\n    const y = Number(\\n      (await read(regions.lookup[\\"y\\"])).asUint()\\n    );\\n\\n    const salt = (await read(regions.lookup[\\"salt\\"])).toHex();\\n\\n    return { x, y, salt };\\n  },\\n\\n  equals(a, b) {\\n    return a.x === b.x && a.y === b.y && a.salt === b.salt;\\n  }\\n};\\n\\nconst stringStorageTest: ObserveTraceTest<string> = {\\n  pointer: findExamplePointer(\\"string-storage-contract-variable-slot\\"),\\n\\n  compileOptions: singleSourceCompilation({\\n    path: \\"StringStorage.sol\\",\\n    contractName: \\"StringStorage\\",\\n    content: `contract StringStorage {\\n      string storedString;\\n      bool done;\\n\\n      event Done();\\n\\n      constructor() {\\n        storedString = \\"hello world\\";\\n        storedString = \\"solidity storage is a fun lesson in endianness\\";\\n\\n        done = true;\\n      }\\n    }\\n    `\\n  }),\\n\\n  expectedValues: [\\n    \\"\\",\\n    \\"hello world\\",\\n    \\"solidity storage is a fun lesson in endianness\\"\\n  ],\\n\\n  async observe({ regions, read }: Cursor.View): Promise<string> {\\n    // collect all the regions corresponding to string contents\\n    const strings = regions.named(\\"string\\");\\n\\n    // read each region and concatenate all the bytes\\n    const stringData: Data = Data.zero()\\n      .concat(...await Promise.all(strings.map(read)));\\n\\n    // decode into JS string\\n    return new TextDecoder().decode(stringData);\\n  },\\n};\\n\\nconst uint256ArrayMemoryTest: ObserveTraceTest<number[]> = {\\n  pointer: findExamplePointer(\\"uint256-array-memory-pointer-slot\\"),\\n  compileOptions: singleSourceCompilation({\\n    path: \\"Uint256Arraymemory.sol\\",\\n    contractName: \\"Uint256ArrayMemory\\",\\n    content: `contract Uint256ArrayMemory {\\n      constructor() {\\n        uint256[] memory values = new uint256[](0);\\n        values = appendToArray(values, 1);\\n        values = appendToArray(values, 2);\\n        values = appendToArray(values, 3);\\n      }\\n\\n      function appendToArray(\\n        uint256[] memory arr,\\n        uint256 value\\n      )\\n        private\\n        pure\\n        returns (uint256[] memory)\\n      {\\n        uint256[] memory newArray = new uint256[](arr.length + 1);\\n\\n        for (uint i = 0; i < arr.length; i++) {\\n          newArray[i] = arr[i];\\n        }\\n\\n        newArray[arr.length] = value;\\n        return newArray;\\n      }\\n    }\\n    `\\n  }),\\n\\n  expectedValues: [\\n    [],\\n    [1],\\n    [1, 2],\\n    [1, 2, 3]\\n  ],\\n\\n  async observe({ regions, read }, state): Promise<number[]> {\\n    const items = regions.named(\\"array-item\\");\\n\\n    return (await Promise.all(\\n      items.map(async (item) => {\\n        const data = await read(item);\\n\\n        return Number(data.asUint());\\n      })\\n    ));\\n  },\\n\\n  equals(a, b) {\\n    if (a.length !== b.length) {\\n      return false;\\n    }\\n\\n    for (const [index, value] of a.entries()) {\\n      if (b[index] !== value) {\\n        return false;\\n      }\\n    }\\n\\n    return true;\\n  },\\n\\n  // this function uses observation of solc + viaIR behavior to determine\\n  // that the memory array we\'re looking for is going to have a pointer at\\n  // the bottom of the stack\\n  //\\n  // also include a check to exclude observation when that bottom stack value\\n  // would have `cursor.view()` yield more regions than expected\\n  async shouldObserve(state) {\\n    const stackLength = await state.stack.length;\\n    if (stackLength === 0n) {\\n      return false;\\n    }\\n\\n    // only consider the bottom of the stack\\n    const arrayOffset = await state.stack.peek({ depth: stackLength - 1n });\\n\\n    const arrayCount = await state.memory.read({\\n      slice: {\\n        offset: arrayOffset.asUint(),\\n        length: 32n\\n      }\\n    })\\n\\n    // the example code only appends three times\\n    return arrayCount.asUint() < 4n;\\n  }\\n};\\n\\n/**\\n * collection of descriptions of tests that compile+deploy Solidity code,\\n * then step through the machine trace of that code\'s execution, watching\\n * and recording a pointer\'s value over the course of that trace.\\n *\\n * tests are described in terms of an expected sequence of values which the\\n * list of observed values should contain by the end of the trace, allowing\\n * for additional unexpected values in between and around the expected values.\\n */\\nexport const observeTraceTests = {\\n  \\"struct storage\\": structStorageTest,\\n  \\"string storage\\": stringStorageTest,\\n  \\"uint256[] memory\\": uint256ArrayMemoryTest,\\n};\\n"},{"filePath":"test/deploy.ts","text":"import type { EthereumProvider } from \\"ganache\\";\\n\\nimport { Data } from \\"../src/data.js\\";\\n\\nexport async function deployContract(\\n  createBytecode: Data,\\n  provider: EthereumProvider\\n): Promise<{\\n  transactionHash: Data;\\n  contractAddress: Data;\\n}> {\\n  // just use the first unlocked account\\n  const [account] = await provider.request({\\n    method: \\"eth_accounts\\",\\n    params: []\\n  });\\n\\n  // issue a transaction that will be mined immediately\\n  const transactionHash = Data.fromHex(await provider.request({\\n    method: \\"eth_sendTransaction\\",\\n    params: [{\\n      from: account,\\n      gas: \\"0x989680\\",\\n      data: createBytecode.toHex()\\n    }]\\n  }));\\n\\n  // read the receipt and extract the deployed contract address\\n  const contractAddress = Data.fromHex((await provider.request({\\n    method: \\"eth_getTransactionReceipt\\",\\n    params: [transactionHash.toHex()]\\n  })).contractAddress);\\n\\n  return {\\n    transactionHash,\\n    contractAddress\\n  };\\n}\\n"},{"filePath":"test/examples.ts","text":"import { describeSchema } from \\"@ethdebug/format\\";\\n\\nimport type { Pointer } from \\"../src/pointer.js\\";\\nimport type { CompileOptions } from \\"./solc.js\\";\\n\\nexport const findExamplePointer = (() => {\\n  const {\\n    schema: {\\n      examples: examplePointers\\n    }\\n  } = describeSchema({\\n    schema: { id: \\"schema:ethdebug/format/pointer\\" }\\n  }) as { schema: { examples: Pointer[] } };\\n\\n  return (text: string): Pointer =>\\n    examplePointers\\n      .find(pointer => JSON.stringify(pointer).includes(text))!;\\n})();\\n"},{"filePath":"test/ganache.ts","text":"import type { EthereumProvider } from \\"ganache\\";\\n\\nimport { Machine } from \\"../src/machine.js\\";\\nimport { Data } from \\"../src/data.js\\";\\n\\nexport async function loadGanache() {\\n  const originalWarn = console.warn;\\n  console.warn = (...args: any[]) => {\\n    if (\\n      args.length > 0 &&\\n      typeof args[0] === \\"string\\" &&\\n      args[0].includes(\\"bigint: Failed to load bindings\\")\\n    ) {\\n      return;\\n    }\\n\\n    originalWarn(...args);\\n  };\\n\\n  const { default: Ganache } = await import(\\"ganache\\");\\n\\n  console.warn = originalWarn;\\n  return Ganache;\\n}\\n\\nexport function machineForProvider(\\n  provider: EthereumProvider,\\n  transactionHash: Data\\n): Machine {\\n  return {\\n    trace(): AsyncIterable<Machine.State> {\\n      return {\\n        async *[Symbol.asyncIterator]() {\\n          const structLogs = await requestStructLogs(\\n            `0x${transactionHash.asUint().toString(16)}`,\\n            provider\\n          );\\n\\n          for (const [index, structLog] of structLogs.entries()) {\\n            yield toMachineState(structLog, index);\\n          }\\n        }\\n      };\\n    }\\n  };\\n}\\n\\nasync function requestStructLogs(\\n  transactionHash: string,\\n  provider: EthereumProvider\\n) {\\n  const { structLogs } = await provider.request({\\n    method: \\"debug_traceTransaction\\",\\n    params: [transactionHash]\\n  });\\n\\n  return structLogs;\\n}\\n\\ntype StructLogs = Depromise<ReturnType<typeof requestStructLogs>>;\\ntype StructLog = Dearray<StructLogs>;\\ntype Depromise<P> = P extends Promise<infer T> ? T : P;\\ntype Dearray<A> = A extends Array<infer T> ? T : A;\\n\\nfunction toMachineState(step: StructLog, index: number): Machine.State {\\n  return {\\n    traceIndex: constantUint(index),\\n    programCounter: constantUint(step.pc),\\n    opcode: Promise.resolve(step.op),\\n\\n    stack: makeStack(step.stack),\\n\\n    memory: makeBytes(step.memory),\\n\\n    storage: makeWords(step.storage),\\n\\n    calldata: undefined as unknown as Machine.State.Bytes,\\n    returndata: undefined as unknown as Machine.State.Bytes,\\n    code: undefined as unknown as Machine.State.Bytes,\\n\\n    transient: undefined as unknown as Machine.State.Words,\\n  };\\n}\\n\\nfunction constantUint(value: number): Promise<bigint> {\\n  return Promise.resolve(Data.fromNumber(value).asUint());\\n}\\n\\nfunction makeStack(stack: StructLog[\\"stack\\"]): Machine.State.Stack {\\n  const length = stack.length;\\n\\n  return {\\n    length: constantUint(length),\\n\\n    async peek({\\n      depth,\\n      slice: {\\n        offset = 0n,\\n        length = 32n\\n      } = {}\\n    }) {\\n      const entry = stack.at(-Number(depth));\\n      const data = Data.fromHex(`0x${entry || \\"\\"}`);\\n\\n      const sliced = new Uint8Array(data).slice(\\n        Number(offset),\\n        Number(offset + length)\\n      );\\n\\n      return new Data(sliced);\\n    }\\n  };\\n}\\n\\nfunction makeBytes(words: StructLog[\\"memory\\"]): Machine.State.Bytes {\\n  const data = Data.fromHex(`0x${words.join(\\"\\")}`);\\n\\n  return {\\n    length: constantUint(data.length),\\n\\n    async read({ slice: { offset, length } }) {\\n      return new Data(data.slice(\\n        Number(offset),\\n        Number(offset + length)\\n      ));\\n    }\\n  }\\n}\\n\\nfunction makeWords(slots: StructLog[\\"storage\\"]): Machine.State.Words {\\n  return {\\n    async read({\\n      slot,\\n      slice: {\\n        offset = 0n,\\n        length = 32n\\n      } = {}\\n    }) {\\n      const rawHex = slots[\\n        slot.resizeTo(32).toHex().slice(2) as keyof typeof slots\\n      ];\\n\\n      const data = Data.fromHex(`0x${rawHex}`);\\n\\n      return new Data(data.slice(\\n        Number(offset),\\n        Number(offset + length)\\n      ));\\n    }\\n  };\\n}\\n"},{"filePath":"test/index.ts","text":"export {\\n  loadGanache,\\n  machineForProvider\\n} from \\"./ganache.js\\";\\n\\nexport {\\n  compileCreateBytecode,\\n  singleSourceCompilation,\\n  type CompileOptions\\n} from \\"./solc.js\\";\\n\\nexport { deployContract, } from \\"./deploy.js\\";\\n\\nexport { findExamplePointer } from \\"./examples.js\\";\\n\\nexport {\\n  observeTrace,\\n  type ObserveTraceOptions\\n} from \\"./observe.js\\";\\n"},{"filePath":"test/observe.ts","text":"import { type Machine, type Pointer, type Cursor, dereference } from \\"../src/index.js\\";\\n\\nimport { loadGanache, machineForProvider } from \\"./ganache.js\\";\\nimport { compileCreateBytecode, type CompileOptions } from \\"./solc.js\\";\\nimport { deployContract } from \\"./deploy.js\\";\\n\\nexport interface ObserveTraceOptions<V> {\\n  /**\\n   * Pointer that is used repeatedly over the course of a trace to view the\\n   * machine at each step.\\n   */\\n  pointer: Pointer;\\n\\n  /**\\n   * Pointer templates that may be referenced by the given pointer\\n   */\\n  templates?: Pointer.Templates;\\n\\n  /**\\n   * The necessary metadata and the Solidity source code for a contract whose\\n   * `constructor()` manages the lifecycle of the variable that the specified\\n   * `pointer` corresponds to\\n   */\\n  compileOptions: CompileOptions;\\n\\n  /**\\n   * A function that understands the structure of the specified `pointer` and\\n   * converts a particular `Cursor.View` for that pointer into a\\n   * JavaScript-native value of type `V`\\n   */\\n  observe({ regions, read }: Cursor.View, state: Machine.State): Promise<V>;\\n\\n  /**\\n   * Optional predicate that compares two `V` values for domain-specific\\n   * equality.\\n   *\\n   * If not specified, this defaults to `(a, b) => a === b`.\\n   */\\n  equals?(a: V, b: V): boolean;\\n\\n  /**\\n   * Optional asynchronous predicate that specifies whether or not a particular\\n   * step in the machine trace is a safe time to view the cursor for the\\n   * specified `pointer`.\\n   *\\n   * If not specified, this defaults to `() => Promise.resolve(true)` (i.e.,\\n   * every step gets observed).\\n   */\\n  shouldObserve?(state: Machine.State): Promise<boolean>;\\n}\\n\\n/**\\n * This function performs the steps necessary to setup and watch the code\\n * execution of the given contract\'s deployment.\\n *\\n * This function tracks the changes to the given pointer\'s dereferenced cursor\\n * by invoking the given `observe()` function to obtain a single primitive\\n * result of type `V`.\\n *\\n * Upon reaching the end of the trace for this code execution, this function\\n * then returns an ordered list of all the observed values, removing sequential\\n * duplicates (using the defined `equals` function if it exists or just `===`).\\n */\\nexport async function observeTrace<V>({\\n  pointer,\\n  templates = {},\\n  compileOptions,\\n  observe,\\n  equals = (a, b) => a === b,\\n  shouldObserve = () => Promise.resolve(true)\\n}: ObserveTraceOptions<V>): Promise<V[]> {\\n  const observedValues: V[] = [];\\n\\n  // initialize local development blockchain\\n  const provider = (await loadGanache()).provider({\\n    logging: {\\n      quiet: true\\n    }\\n  });\\n\\n  // perform compilation\\n  const bytecode = await compileCreateBytecode(compileOptions);\\n\\n  // deploy contract\\n  const { transactionHash } = await deployContract(bytecode, provider);\\n\\n  // prepare to inspect the EVM for that deployment transaction\\n  const machine = machineForProvider(provider, transactionHash);\\n\\n  let cursor; // delay initialization until first state of trace\\n  let lastObservedValue;\\n  for await (const state of machine.trace()) {\\n    if (!await shouldObserve(state)) {\\n      continue;\\n    }\\n\\n    if (!cursor) {\\n      cursor = await dereference(pointer, { state, templates });\\n    }\\n\\n    const { regions, read } = await cursor.view(state);\\n    const observedValue = await observe({ regions, read }, state);\\n\\n    if (\\n      typeof lastObservedValue === \\"undefined\\" ||\\n      !equals(observedValue, lastObservedValue)\\n    ) {\\n      observedValues.push(observedValue);\\n      lastObservedValue = observedValue;\\n    }\\n  }\\n\\n  return observedValues;\\n}\\n"},{"filePath":"test/solc.ts","text":"import { Data } from \\"../src/data.js\\";\\nimport type * as Solc from \\"solc\\";\\n\\nlet solc: typeof Solc | undefined;\\ntry {\\n  solc = (await import(\\"solc\\")).default;\\n} catch {}\\n\\n/**\\n * Organizes the sources being compiled by their path identifier, as well\\n * as includes information about which contract\'s bytecode is desired\\n */\\nexport interface CompileOptions {\\n  sources: {\\n    [path: string]: {\\n      content: string\\n    }\\n  };\\n\\n  target: {\\n    path: string;\\n    contractName: string;\\n  };\\n}\\n\\n/**\\n * Compile a collection of sources and return the create (deployment) bytecode\\n * for a particular target contract\\n */\\nexport async function compileCreateBytecode({\\n  sources,\\n  target\\n}: CompileOptions): Promise<Data> {\\n  if (!solc) {\\n    throw new Error(\\"Unable to load solc\\");\\n  }\\n\\n  const input = {\\n    language: \\"Solidity\\",\\n    sources,\\n    settings: {\\n      outputSelection: {\\n        \\"*\\": {\\n          \\"*\\": [\\"ir\\", \\"*\\"],\\n          \\"\\": [\\"*\\"]\\n        }\\n      },\\n      viaIR: true,\\n      optimizer: {\\n        enabled: true\\n      }\\n    }\\n  };\\n\\n  const output = JSON.parse(\\n    solc.compile(\\n      JSON.stringify(input),\\n    )\\n  );\\n\\n  const { errors = [] } = output;\\n  if (errors.length > 0) {\\n    throw new Error(`Compilation error: ${JSON.stringify(errors, undefined, 2)}`);\\n  }\\n\\n  const {\\n    evm: {\\n      bytecode: createBytecode\\n    }\\n  } = output.contracts[target.path][target.contractName];\\n\\n  return Data.fromHex(`0x${createBytecode.object}`);\\n}\\n\\n/**\\n * \\"Syntactic sugar\\"-like helper function to initialize CompileOptions for\\n * compiling only a single source file.\\n */\\nexport function singleSourceCompilation(options: {\\n  path: string;\\n  contractName: string;\\n  content: string;\\n}): CompileOptions {\\n  const { path, contractName, content: contentWithoutHeader } = options;\\n\\n  const spdxLicenseIdentifier = \\"// SPDX-License-Identifier: UNLICENSED\\";\\n  const pragma = \\"pragma solidity ^0.8.25;\\";\\n  const header = `${spdxLicenseIdentifier}\\\\n${pragma}\\\\n`;\\n\\n  return {\\n    sources: {\\n      [path]: {\\n        content: `${header}\\\\n${contentWithoutHeader}\\\\n`\\n      }\\n    },\\n\\n    target: {\\n      path,\\n      contractName\\n    }\\n  };\\n}\\n"},{"filePath":"../format/dist/src/describe.d.ts","text":"import type { JSONSchema as JSONSchemaTyped } from \\"json-schema-typed/draft-2020-12\\";\\nexport type JSONSchema = Exclude<JSONSchemaTyped, boolean>;\\nexport interface DescribeSchemaOptions<S extends SchemaReference = SchemaReference> {\\n    schema: S;\\n    pointer?: SchemaPointer;\\n}\\nexport interface SchemaInfo {\\n    id?: string;\\n    pointer?: SchemaPointer;\\n    yaml: string;\\n    schema: JSONSchema;\\n    rootSchema: JSONSchema;\\n}\\nexport declare function describeSchema({ schema, pointer }: DescribeSchemaOptions): SchemaInfo;\\ntype Impossible<K extends keyof any> = {\\n    [P in K]: never;\\n};\\ntype NoExtraProperties<T, U extends T = T> = U & Impossible<Exclude<keyof U, keyof T>>;\\nexport type SchemaPointer = `#${string}`;\\nexport type SchemaReference = SchemaById | SchemaByYaml | object;\\nexport type SchemaById = NoExtraProperties<{\\n    id: string;\\n}>;\\nexport type SchemaByYaml = NoExtraProperties<{\\n    yaml: string;\\n}>;\\nexport declare function referencesId(schema: SchemaReference): schema is SchemaById;\\nexport declare function referencesYaml(schema: SchemaReference): schema is SchemaByYaml;\\nexport {};\\n//# sourceMappingURL=describe.d.ts.map"},{"filePath":"../format/dist/src/index.d.ts","text":"export * from \\"./describe\\";\\nexport { schemas, schemaIds, type Schema } from \\"./schemas\\";\\n//# sourceMappingURL=index.d.ts.map"},{"filePath":"../format/dist/src/schemas.d.ts","text":"export type { Schema } from \\"../yamls\\";\\nexport declare const schemaIds: string[];\\nexport declare const schemas: {\\n    [x: string]: {\\n        $anchor?: string | undefined;\\n        $comment?: string | undefined;\\n        $defs?: Record<string, import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>> | undefined;\\n        $dynamicAnchor?: string | undefined;\\n        $dynamicRef?: string | undefined;\\n        $id?: string | undefined;\\n        $ref?: string | undefined;\\n        $schema?: string | undefined;\\n        $vocabulary?: Record<string, string> | undefined;\\n        additionalItems?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        additionalProperties?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        allOf?: (import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>[] | readonly import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>[]) | undefined;\\n        anyOf?: (import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>[] | readonly import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>[]) | undefined;\\n        const?: any;\\n        contains?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        contentEncoding?: \\"7bit\\" | \\"8bit\\" | \\"base64\\" | \\"binary\\" | \\"ietf-token\\" | \\"quoted-printable\\" | \\"x-token\\" | undefined;\\n        contentMediaType?: string | undefined;\\n        contentSchema?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        default?: any;\\n        definitions?: Record<string, import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>> | undefined;\\n        dependencies?: Record<string, import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | (string[] | readonly string[])> | undefined;\\n        dependentRequired?: Record<string, string[] | readonly string[]> | undefined;\\n        dependentSchemas?: Record<string, import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>> | undefined;\\n        deprecated?: boolean | undefined;\\n        description?: string | undefined;\\n        else?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        enum?: (any[] | readonly any[]) | undefined;\\n        examples?: (any[] | readonly any[]) | undefined;\\n        exclusiveMaximum?: number | undefined;\\n        exclusiveMinimum?: number | undefined;\\n        format?: string | undefined;\\n        if?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        items?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        maxContains?: number | undefined;\\n        maximum?: number | undefined;\\n        maxItems?: number | undefined;\\n        maxLength?: number | undefined;\\n        maxProperties?: number | undefined;\\n        minContains?: number | undefined;\\n        minimum?: number | undefined;\\n        minItems?: number | undefined;\\n        minLength?: number | undefined;\\n        minProperties?: number | undefined;\\n        multipleOf?: number | undefined;\\n        not?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        oneOf?: (import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>[] | readonly import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>[]) | undefined;\\n        pattern?: string | undefined;\\n        patternProperties?: Record<string, import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>> | undefined;\\n        prefixItems?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | (import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>[] | readonly import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>[]) | undefined;\\n        properties?: Record<string, import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue>> | undefined;\\n        propertyNames?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        readOnly?: boolean | undefined;\\n        required?: (string[] | readonly string[]) | undefined;\\n        then?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        title?: string | undefined;\\n        type?: import(\\"json-schema-typed\\").JSONSchema.TypeValue | undefined;\\n        unevaluatedItems?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        unevaluatedProperties?: import(\\"json-schema-typed\\").JSONSchema<any, import(\\"json-schema-typed\\").JSONSchema.TypeValue> | undefined;\\n        uniqueItems?: boolean | undefined;\\n        writeOnly?: boolean | undefined;\\n    };\\n};\\n//# sourceMappingURL=schemas.d.ts.map"},{"filePath":"src/dereference/cursor.ts","text":"import type { Machine } from \\"../machine.js\\";\\nimport type { Cursor } from \\"../cursor.js\\";\\nimport { read } from \\"../read.js\\";\\n\\nexport function createCursor(\\n  simpleCursor: (state: Machine.State) => AsyncIterable<Cursor.Region>\\n): Cursor {\\n  return {\\n    async view(state: Machine.State) {\\n      const list = [];\\n      for await (const region of simpleCursor(state)) {\\n        list.push(region);\\n      }\\n\\n      const named: { [name: string]: Cursor.Region[] } = {};\\n      const current: { [name: string]: Cursor.Region } = {};\\n\\n      const propertyFlags = {\\n        writable: false,\\n        enumerable: false,\\n        configurable: false\\n      } as const;\\n\\n      const regions: Cursor.Regions = Object.create(Array.prototype, {\\n        length: {\\n          value: list.length,\\n          ...propertyFlags\\n        }\\n      });\\n\\n      for (const [index, region] of list.entries()) {\\n        Object.defineProperty(regions, index, {\\n          value: region,\\n          ...propertyFlags,\\n          enumerable: true,\\n        });\\n\\n        if (typeof region.name === \\"string\\") {\\n          if (!(region.name in named)) {\\n            named[region.name] = [];\\n          }\\n          named[region.name].push(region);\\n          current[region.name] = region;\\n        }\\n      }\\n\\n      for (const [name, region] of Object.entries(current)) {\\n        Object.defineProperty(regions, name, {\\n          value: region,\\n          ...propertyFlags\\n        });\\n      }\\n\\n      Object.defineProperties(regions, {\\n        named: {\\n          value: (name: string) => named[name] || [],\\n          ...propertyFlags\\n        },\\n        lookup: {\\n          value: {\\n            ...current\\n          },\\n          ...propertyFlags\\n        }\\n      });\\n\\n      return {\\n        regions,\\n        async read(region: Cursor.Region) {\\n          return await read(region, { state });\\n        }\\n      };\\n    }\\n  };\\n}\\n"},{"filePath":"src/dereference/generate.ts","text":"import type { Machine } from \\"../machine.js\\";\\nimport type { Cursor } from \\"../cursor.js\\";\\nimport type { Data } from \\"../data.js\\";\\nimport type { Pointer } from \\"../pointer.js\\";\\n\\nimport { Memo } from \\"./memo.js\\";\\nimport { processPointer, type ProcessOptions } from \\"./process.js\\";\\n\\n/**\\n * Upfront information needed for generating the concrete Cursor.Regions\\n * for a particular pointer at runtime.\\n */\\nexport interface GenerateRegionsOptions {\\n  templates: Pointer.Templates;\\n  state: Machine.State;\\n  initialStackLength: bigint;\\n}\\n\\n/**\\n * Generator function that yields Cursor.Regions for a given Pointer.\\n *\\n * This function maintains an internal stack of memos to evaluate,\\n * initially populating this stack with a single entry for evaluating the\\n * given pointer.\\n */\\nexport async function* generateRegions(\\n  pointer: Pointer,\\n  generateRegionsOptions: GenerateRegionsOptions\\n): AsyncIterable<Cursor.Region> {\\n  const options = await initializeProcessOptions(generateRegionsOptions);\\n\\n  // extract records for mutation\\n  const {\\n    regions,\\n    variables\\n  } = options;\\n\\n  const stack: Memo[] = [Memo.dereferencePointer(pointer)];\\n  while (stack.length > 0) {\\n    const memo: Memo = stack.pop() as Memo;\\n\\n    let memos: Memo[] = [];\\n    switch (memo.kind) {\\n      case \\"dereference-pointer\\": {\\n        memos = yield* processPointer(memo.pointer, options);\\n        break;\\n      }\\n      case \\"save-regions\\": {\\n        Object.assign(regions, memo.regions);\\n        break;\\n      }\\n      case \\"save-variables\\": {\\n        Object.assign(variables, memo.variables);\\n        break;\\n      }\\n    }\\n\\n    // add new memos to the stack in reverse order\\n    for (let index = memos.length - 1; index >= 0; index--) {\\n      stack.push(memos[index]);\\n    }\\n  }\\n}\\n\\nasync function initializeProcessOptions({\\n  templates,\\n  state,\\n  initialStackLength\\n}: GenerateRegionsOptions): Promise<ProcessOptions> {\\n  const currentStackLength = await state.stack.length;\\n  const stackLengthChange = currentStackLength - initialStackLength;\\n\\n  const regions: Record<string, Cursor.Region> = {};\\n  const variables: Record<string, Data> = {};\\n\\n  return {\\n    templates,\\n    state,\\n    stackLengthChange,\\n    regions,\\n    variables\\n  };\\n}\\n"},{"filePath":"src/dereference/index.test.ts","text":"import { jest, expect, describe, it, beforeEach } from \\"@jest/globals\\";\\nimport { Machine } from \\"../machine.js\\";\\nimport { Data } from \\"../data.js\\";\\nimport { Pointer } from \\"../pointer.js\\";\\nimport { dereference } from \\"./index.js\\";\\n\\ndescribe(\\"dereference\\", () => {\\n  let state: Machine.State;\\n\\n  beforeEach(() => {\\n    state = {\\n      stack: {\\n        length: Promise.resolve(10n),\\n        peek: jest.fn(async () => Data.fromBytes(new Uint8Array([0x11, 0x22, 0x33, 0x44]))),\\n      },\\n      memory: {\\n        read: jest.fn(async () => Data.fromBytes(new Uint8Array([0x55, 0x66, 0x77, 0x88]))),\\n      },\\n      storage: {\\n        read: jest.fn(async () => Data.fromBytes(new Uint8Array([0xaa, 0xbb, 0xcc, 0xdd]))),\\n      },\\n      calldata: {\\n        read: jest.fn(async () => Data.fromBytes(new Uint8Array([0x11, 0x22, 0x33, 0x44]))),\\n      },\\n      returndata: {\\n        read: jest.fn(async () => Data.fromBytes(new Uint8Array([0x55, 0x66, 0x77, 0x88]))),\\n      },\\n      transient: {\\n        read: jest.fn(async () => Data.fromBytes(new Uint8Array([0xaa, 0xbb, 0xcc, 0xdd]))),\\n      },\\n      code: {\\n        read: jest.fn(async () => Data.fromBytes(new Uint8Array([0x11, 0x22, 0x33, 0x44]))),\\n      },\\n    } as unknown as Machine.State;\\n  });\\n\\n  it(\\"works for a single region\\", async () => {\\n    const pointer: Pointer = {\\n      location: \\"memory\\",\\n      offset: {\\n        $sum: [0x40, 0x20]\\n      },\\n      length: 0x20\\n    };\\n\\n    const cursor = await dereference(pointer);\\n\\n    const { regions } = await cursor.view(state);\\n\\n    expect(regions).toHaveLength(1);\\n    expect(regions[0]).toEqual({\\n      location: \\"memory\\",\\n      offset: Data.fromNumber(0x60),\\n      length: Data.fromNumber(0x20)\\n    });\\n  });\\n\\n  it(\\"works for a group of regions\\", async () => {\\n    const pointer: Pointer = {\\n      group: [{\\n        name: \\"a\\",\\n        location: \\"memory\\",\\n        offset: {\\n          $sum: [0x40, 0x20]\\n        },\\n        length: 0x20\\n      }, {\\n        location: \\"memory\\",\\n        offset: {\\n          $sum: [\\n            { \\".offset\\": \\"a\\" },\\n            { \\".length\\": \\"a\\" }\\n          ]\\n        },\\n        length: { \\".length\\": \\"a\\" }\\n      }]\\n    };\\n\\n    const cursor = await dereference(pointer);\\n\\n    const { regions } = await cursor.view(state);\\n\\n    expect(regions).toHaveLength(2);\\n    expect(regions.lookup[\\"a\\"]).toEqual({\\n      name: \\"a\\",\\n      location: \\"memory\\",\\n      offset: Data.fromNumber(0x60),\\n      length: Data.fromNumber(0x20)\\n    });\\n    expect(regions[1]).toEqual({\\n      location: \\"memory\\",\\n      offset: Data.fromNumber(0x80),\\n      length: Data.fromNumber(0x20)\\n    });\\n  });\\n\\n  it(\\"works for a list of regions\\", async () => {\\n    const pointer: Pointer = {\\n      list: {\\n        count: 3,\\n        each: \\"i\\",\\n        is: {\\n          name: \\"item\\",\\n          location: \\"memory\\",\\n          offset: {\\n            $product: [\\"i\\", 32],\\n          },\\n          length: 32\\n        },\\n      },\\n    };\\n\\n    const cursor = await dereference(pointer);\\n\\n    const { regions } = await cursor.view(state);\\n\\n    const itemRegions = regions.named(\\"item\\");\\n    expect(itemRegions).toHaveLength(3);\\n\\n    for (const [index, region] of itemRegions.entries()) {\\n      expect(region).toEqual({\\n        name: \\"item\\",\\n        location: \\"memory\\",\\n        offset: Data.fromUint(\\n          Data.fromNumber(index).asUint() * 32n\\n        ).padUntilAtLeast(1),\\n        length: Data.fromNumber(32),\\n      })\\n    }\\n  });\\n\\n  it(\\"allows referencing previous fields by way of $this\\", async () => {\\n    const pointer: Pointer = {\\n      location: \\"memory\\",\\n      offset: 32,\\n      length: { \\".offset\\": \\"$this\\" }\\n    };\\n\\n    const cursor = await dereference(pointer);\\n\\n    const { regions } = await cursor.view(state);\\n\\n    expect(regions).toHaveLength(1);\\n    expect(regions[0]).toEqual({\\n      location: \\"memory\\",\\n      offset: Data.fromNumber(32),\\n      length: Data.fromNumber(32)\\n    });\\n  });\\n\\n  it(\\"allows referencing later fields by way of $this\\", async () => {\\n    const pointer: Pointer = {\\n      location: \\"memory\\",\\n      offset: { \\".length\\": \\"$this\\" },\\n      length: 32\\n    };\\n\\n    const cursor = await dereference(pointer);\\n\\n    const { regions } = await cursor.view(state);\\n\\n    expect(regions).toHaveLength(1);\\n    expect(regions[0]).toEqual({\\n      location: \\"memory\\",\\n      offset: Data.fromNumber(32),\\n      length: Data.fromNumber(32)\\n    });\\n  });\\n\\n  it(\\"allows referencing fields that reference other fields\\", async () => {\\n    const pointer: Pointer = {\\n      location: \\"storage\\",\\n      slot: { \\".offset\\": \\"$this\\" },\\n      offset: { \\".length\\": \\"$this\\" },\\n      length: 32\\n    };\\n\\n    const cursor = await dereference(pointer);\\n\\n    const { regions } = await cursor.view(state);\\n\\n    expect(regions).toHaveLength(1);\\n    expect(regions[0]).toEqual({\\n      location: \\"storage\\",\\n      slot: Data.fromNumber(32),\\n      offset: Data.fromNumber(32),\\n      length: Data.fromNumber(32)\\n    });\\n  });\\n\\n  it(\\"throws an error on circular reference\\", async () => {\\n    const pointer: Pointer = {\\n      location: \\"memory\\",\\n      offset: { \\".length\\": \\"$this\\" },\\n      length: { \\".offset\\": \\"$this\\" },\\n    };\\n\\n    const cursor = await dereference(pointer);\\n\\n    await expect(cursor.view(state)).rejects.toThrow(\\n      \\"Circular reference detected: $this.offset\\"\\n    );\\n  });\\n\\n  it(\\"works for conditionals\\", async () => {\\n    const pointer: Pointer = {\\n      if: {\\n        $difference: [5, 5]\\n      },\\n      then: {\\n        name: \\"a\\",\\n        location: \\"memory\\",\\n        offset: 0,\\n        length: 0\\n      },\\n      else: {\\n        name: \\"b\\",\\n        location: \\"memory\\",\\n        offset: 0,\\n        length: 0\\n      }\\n    };\\n\\n    const cursor = await dereference(pointer);\\n\\n    const { regions } = await cursor.view(state);\\n\\n    expect(regions).toHaveLength(1);\\n    expect(regions[0].name).toEqual(\\"b\\");\\n  });\\n\\n  it(\\"works for scopes\\", async () => {\\n    const pointer: Pointer = {\\n      define: {\\n        \\"example-offset\\": 0,\\n        \\"example-length\\": 32\\n      },\\n      in: {\\n        location: \\"memory\\",\\n        offset: \\"example-offset\\",\\n        length: \\"example-length\\"\\n      }\\n    };\\n\\n    const cursor = await dereference(pointer);\\n\\n    const { regions } = await cursor.view(state);\\n\\n    expect(regions).toHaveLength(1);\\n    expect(regions[0].offset).toEqual(Data.fromNumber(0));\\n    expect(regions[0].length).toEqual(Data.fromNumber(32));\\n  });\\n\\n  it(\\"works for templates\\", async () => {\\n    const templates: Pointer.Templates = {\\n      \\"memory-range\\": {\\n        expect: [\\"offset\\", \\"length\\"],\\n        for: {\\n          location: \\"memory\\",\\n          offset: \\"offset\\",\\n          length: \\"length\\"\\n        }\\n      }\\n    };\\n\\n    const pointer: Pointer = {\\n      define: {\\n        \\"offset\\": 0,\\n        \\"length\\": 32\\n      },\\n      in: {\\n        template: \\"memory-range\\"\\n      }\\n    };\\n\\n    const cursor = await dereference(pointer, { templates });\\n\\n    const { regions } = await cursor.view(state);\\n\\n    expect(regions).toHaveLength(1);\\n    expect(regions[0].offset).toEqual(Data.fromNumber(0));\\n    expect(regions[0].length).toEqual(Data.fromNumber(32));\\n  });\\n});\\n"},{"filePath":"src/dereference/index.ts","text":"import type { Pointer } from \\"../pointer.js\\";\\nimport type { Machine } from \\"../machine.js\\";\\nimport type { Cursor } from \\"../cursor.js\\";\\n\\nimport { generateRegions, type GenerateRegionsOptions } from \\"./generate.js\\";\\nimport { createCursor } from \\"./cursor.js\\";\\n\\nexport interface DereferenceOptions {\\n  /*\\n   * Initial machine state\\n   * Required for any pointers that reference the stack.\\n   */\\n  state?: Machine.State;\\n  templates?: Pointer.Templates\\n}\\n\\n/**\\n * Dereference an ethdebug/format/pointer document into a Cursor object,\\n * which allows inspecting machine state corresponding to the given pointer.\\n *\\n * Note that `options.state` is required if `pointer` contains any stack\\n * regions.\\n */\\nexport async function dereference(\\n  pointer: Pointer,\\n  dereferenceOptions: DereferenceOptions = {}\\n): Promise<Cursor> {\\n  const options = await initializeGenerateRegionsOptions(dereferenceOptions);\\n\\n  // use a closure to build a simple Cursor-like interface for accepting\\n  // a machine state and producing a collection of regions.\\n  const simpleCursor =\\n    (state: Machine.State): AsyncIterable<Cursor.Region> => ({\\n      async *[Symbol.asyncIterator]() {\\n        yield* generateRegions(pointer, { ...options, state });\\n      }\\n    });\\n\\n  return createCursor(simpleCursor);\\n}\\n\\n/**\\n * Convert DereferenceOptions into the specific pieces of information that\\n * `generateRegions()` will potentially need.\\n */\\nasync function initializeGenerateRegionsOptions({\\n  templates = {},\\n  state: initialState\\n}: DereferenceOptions): Promise<Omit<GenerateRegionsOptions, \\"state\\">> {\\n  const initialStackLength = initialState\\n    ? await initialState.stack.length\\n    : 0n;\\n\\n  return {\\n    templates,\\n    initialStackLength\\n  };\\n}\\n"},{"filePath":"src/dereference/memo.ts","text":"import type { Pointer } from \\"../pointer.js\\";\\nimport type { Cursor } from \\"../cursor.js\\";\\nimport type { Data } from \\"../data.js\\";\\n\\n/**\\n * A single state transition for processing on a stack\\n */\\nexport type Memo =\\n  | Memo.DereferencePointer\\n  | Memo.SaveRegions\\n  | Memo.SaveVariables;\\n\\nexport namespace Memo {\\n  /**\\n   * A request to dereference a pointer\\n   */\\n  export interface DereferencePointer {\\n    kind: \\"dereference-pointer\\";\\n    pointer: Pointer;\\n  }\\n\\n  /**\\n   * Initialize a DereferencePointer memo\\n   */\\n  export const dereferencePointer =\\n    (pointer: Pointer): DereferencePointer => ({\\n      kind: \\"dereference-pointer\\",\\n      pointer\\n    });\\n\\n  /**\\n   * A request to modify the stateful map of regions by name with a\\n   * particular set of new entries.\\n   *\\n   * This does not indicate that any change should be made to region names not\\n   * included in this memo.\\n   */\\n  export interface SaveRegions {\\n    kind: \\"save-regions\\";\\n    regions: Record<string, Cursor.Region>;\\n  }\\n\\n  /**\\n   * Initialize a SaveRegions memo\\n   */\\n  export const saveRegions =\\n    (regions: Record<string, Cursor.Region>): SaveRegions => ({\\n      kind: \\"save-regions\\",\\n      regions\\n    });\\n\\n  /**\\n   * A request to modify the stateful map of variable values with a\\n   * particular set of new entries.\\n   *\\n   * This does not indicate that any change should be made to variables not\\n   * included in this memo.\\n   */\\n  export interface SaveVariables {\\n    kind: \\"save-variables\\";\\n    variables: Record<string, Data>;\\n  }\\n\\n  /**\\n   * Initialize a SaveVariables memo\\n   */\\n  export const saveVariables =\\n    (variables: Record<string, Data>): SaveVariables => ({\\n      kind: \\"save-variables\\",\\n      variables\\n    });\\n}\\n"},{"filePath":"src/dereference/process.ts","text":"import type { Machine } from \\"../machine.js\\";\\nimport type { Cursor } from \\"../cursor.js\\";\\nimport { Data } from \\"../data.js\\";\\nimport { Pointer } from \\"../pointer.js\\";\\nimport { evaluate } from \\"../evaluate.js\\";\\n\\nimport { Memo } from \\"./memo.js\\";\\nimport { adjustStackLength, evaluateRegion } from \\"./region.js\\";\\n\\n\\n/**\\n * Contextual information for use within a pointer dereference process\\n */\\nexport interface ProcessOptions {\\n  templates: Pointer.Templates;\\n  state: Machine.State;\\n  stackLengthChange: bigint;\\n  regions: Record<string, Cursor.Region>;\\n  variables: Record<string, Data>;\\n}\\n\\n/**\\n * an generator that yields Cursor regions and returns a list of new memos\\n * to add to the stack\\n */\\nexport type Process = AsyncGenerator<Cursor.Region, Memo[]>;\\n\\n/**\\n * Process a pointer into a yielded list of concrete, evaluated Cursor.Regions\\n * and return a list of new memos to add to the stack for processing next\\n */\\nexport async function* processPointer(\\n  pointer: Pointer,\\n  options: ProcessOptions\\n): Process {\\n  if (Pointer.isRegion(pointer)) {\\n    const region = pointer;\\n\\n    return yield* processRegion(region, options);\\n  }\\n\\n  const collection = pointer;\\n\\n  if (Pointer.Collection.isGroup(collection)) {\\n    return yield* processGroup(collection, options);\\n  }\\n\\n  if (Pointer.Collection.isList(collection)) {\\n    return yield* processList(collection, options);\\n  }\\n\\n  if (Pointer.Collection.isConditional(collection)) {\\n    return yield* processConditional(collection, options);\\n  }\\n\\n  if (Pointer.Collection.isScope(collection)) {\\n    return yield* processScope(collection, options);\\n  }\\n\\n  if (Pointer.Collection.isReference(collection)) {\\n    return yield* processReference(collection, options);\\n  }\\n\\n  console.error(\\"%s\\", JSON.stringify(pointer, undefined, 2));\\n  throw new Error(\\"Unexpected unknown kind of pointer\\");\\n}\\n\\nasync function* processRegion(\\n  region: Pointer.Region,\\n  { stackLengthChange, ...options}: ProcessOptions\\n): Process {\\n  const evaluatedRegion = await evaluateRegion(\\n    adjustStackLength(region, stackLengthChange),\\n    options\\n  );\\n\\n  yield evaluatedRegion;\\n\\n  if (typeof region.name !== \\"undefined\\") {\\n    return [Memo.saveRegions({ [region.name]: evaluatedRegion })];\\n  }\\n\\n  return [];\\n}\\n\\nasync function* processGroup(\\n  collection: Pointer.Collection.Group,\\n  options: ProcessOptions\\n): Process {\\n  const { group } = collection;\\n  return group.map(Memo.dereferencePointer);\\n}\\n\\nasync function* processList(\\n  collection: Pointer.Collection.List,\\n  options: ProcessOptions\\n): Process {\\n  const { list } = collection;\\n  const { count: countExpression, each, is } = list;\\n\\n  const count = (await evaluate(countExpression, options)).asUint();\\n\\n  const memos: Memo[] = [];\\n  for (let index = 0n; index < count; index++) {\\n    memos.push(Memo.saveVariables({\\n      [each]: Data.fromUint(index)\\n    }));\\n\\n    memos.push(Memo.dereferencePointer(is));\\n  }\\n\\n  return memos;\\n}\\n\\nasync function* processConditional(\\n  collection: Pointer.Collection.Conditional,\\n  options: ProcessOptions\\n): Process {\\n  const { if: ifExpression, then: then_, else: else_ } = collection;\\n\\n  const if_ = (await evaluate(ifExpression, options)).asUint();\\n\\n  if (if_) {\\n    return [Memo.dereferencePointer(then_)];\\n  }\\n\\n  // otherwise, return the else clause if it exists (it is optional)\\n  return else_\\n    ? [Memo.dereferencePointer(else_)]\\n    : [];\\n}\\n\\nasync function* processScope(\\n  collection: Pointer.Collection.Scope,\\n  options: ProcessOptions\\n): Process {\\n  const { define: variableExpressions, in: in_ } = collection;\\n\\n  const allVariables = {\\n    ...options.variables\\n  };\\n  const newVariables: { [identifier: string]: Data } = {};\\n  for (const [identifier, expression] of Object.entries(variableExpressions)) {\\n    const data = await evaluate(expression, {\\n      ...options,\\n      variables: allVariables\\n    });\\n\\n    allVariables[identifier] = data;\\n    newVariables[identifier] = data;\\n  }\\n\\n  return [\\n    Memo.saveVariables(newVariables),\\n    Memo.dereferencePointer(in_)\\n  ];\\n}\\n\\nasync function* processReference(\\n  collection: Pointer.Collection.Reference,\\n  options: ProcessOptions\\n): Process {\\n  const { template: templateName } = collection;\\n\\n  const { templates, variables } = options;\\n\\n  const template = templates[templateName];\\n\\n  if (!template) {\\n    throw new Error(\\n      `Unknown pointer template named ${templateName}`\\n    );\\n  }\\n\\n  const {\\n    expect: expectedVariables,\\n    for: pointer\\n  } = template;\\n\\n  const definedVariables = new Set(Object.keys(variables));\\n  const missingVariables = expectedVariables\\n    .filter(identifier => !definedVariables.has(identifier));\\n\\n  if (missingVariables.length > 0) {\\n    throw new Error([\\n      `Invalid reference to template named ${templateName}; missing expected `,\\n      `variables with identifiers: ${missingVariables.join(\\", \\")}. `,\\n      `Please ensure these variables are defined prior to this reference.`\\n    ].join(\\"\\"));\\n  }\\n\\n  return [\\n    Memo.dereferencePointer(pointer)\\n  ];\\n}\\n"},{"filePath":"src/dereference/region.ts","text":"import type { Cursor } from \\"../cursor.js\\";\\nimport type { Data } from \\"../data.js\\";\\nimport { Pointer } from \\"../pointer.js\\";\\nimport { evaluate, type EvaluateOptions } from \\"../evaluate.js\\";\\n\\n/**\\n * Evaluate all Pointer.Expression-value properties on a given region\\n *\\n * Due to the availability of `$this` as a builtin allowable by the schema,\\n * this function evaluates each property as part of a queue. If a property\'s\\n * expression fails to evaluate due to a missing reference, the property is\\n * added to the end of the queue.\\n *\\n * Circular dependencies are detected na\xefvely by counting evaluation attempts\\n * for each property, since the maximum length of a chain of $this references\\n * within a single region is one less than the number of properties that\\n * require evaluation). Exceeding this many attempts indicates circularity.\\n */\\nexport async function evaluateRegion<R extends Pointer.Region>(\\n  region: R,\\n  options: EvaluateOptions\\n): Promise<Cursor.Region<R>> {\\n  const evaluatedProperties: {\\n    [K in keyof R]?: Data\\n  } = {};\\n  const propertyAttempts: {\\n    [K in keyof R]?: number\\n  } = {};\\n\\n  const partialRegion: Cursor.Region<R> = new Proxy(\\n    { ...region } as Cursor.Region<R>,\\n    {\\n      get(target, property) {\\n        if (property in evaluatedProperties) {\\n          return evaluatedProperties[property as keyof R];\\n        }\\n        throw new Error(`Property not evaluated yet: $this.${property.toString()}`)\\n      },\\n    }\\n  );\\n\\n  const propertiesRequiringEvaluation = [\\"slot\\", \\"offset\\", \\"length\\"] as const;\\n\\n  const expressionQueue: [keyof R, Pointer.Expression][] =\\n    propertiesRequiringEvaluation\\n      .filter(property => property in region)\\n      .map(\\n        property => [property, region[property as keyof R]]\\n      ) as [keyof R, Pointer.Expression][];\\n\\n  while (expressionQueue.length > 0) {\\n    const [property, expression] = expressionQueue.shift()!;\\n\\n    try {\\n      const data = await evaluate(expression, {\\n        ...options,\\n        regions: {\\n          ...options.regions,\\n          $this: partialRegion,\\n        },\\n      });\\n\\n      evaluatedProperties[property as keyof R] = data;\\n    } catch (error) {\\n      if (\\n        error instanceof Error &&\\n        error.message.startsWith(\\"Property not evaluated yet: $this.\\")\\n      ) {\\n        const attempts = propertyAttempts[property] || 0;\\n        // fields may reference each other, but the chain of references\\n        // should not exceed the number of fields minus 1\\n        if (attempts > propertiesRequiringEvaluation.length - 1) {\\n          throw new Error(`Circular reference detected: $this.${property.toString()}`);\\n        }\\n\\n        propertyAttempts[property] = attempts + 1;\\n        expressionQueue.push([property, expression]);\\n      } else {\\n        throw error;\\n      }\\n    }\\n  }\\n\\n  return {\\n    ...region,\\n    ...evaluatedProperties,\\n  } as Cursor.Region<R>;\\n}\\n\\n/**\\n * Detect a stack region and modify its `slot` expression to include the\\n * appropriate sum or difference based on the machine stack length change\\n * since the Cursor was originally created\\n */\\nexport function adjustStackLength<R extends Pointer.Region>(\\n  region: R,\\n  stackLengthChange: bigint\\n): R {\\n  if (Pointer.Region.isStack(region)) {\\n    const slot: Pointer.Expression = stackLengthChange === 0n\\n      ? region.slot\\n      : stackLengthChange > 0n\\n        ? { $sum: [region.slot, `0x${stackLengthChange.toString(16)}`] }\\n        : { $difference: [region.slot, `0x${-stackLengthChange.toString(16)}`] };\\n\\n    return {\\n      ...region,\\n      slot\\n    };\\n  }\\n\\n  return region;\\n}\\n"}]}}}}}'),i=JSON.parse('{"defaultLocale":"en","locales":["en"],"path":"i18n","currentLocale":"en","localeConfigs":{"en":{"label":"English","direction":"ltr","htmlLang":"en","calendar":"gregory","path":"en"}}}');var s=t(57529);const l=JSON.parse('{"docusaurusVersion":"3.4.0","siteVersion":"0.1.0-0","pluginVersions":{"docusaurus-plugin-content-docs":{"type":"package","name":"@docusaurus/plugin-content-docs","version":"3.4.0"},"docusaurus-plugin-content-blog":{"type":"package","name":"@docusaurus/plugin-content-blog","version":"3.4.0"},"docusaurus-plugin-content-pages":{"type":"package","name":"@docusaurus/plugin-content-pages","version":"3.4.0"},"docusaurus-plugin-sitemap":{"type":"package","name":"@docusaurus/plugin-sitemap","version":"3.4.0"},"docusaurus-theme-classic":{"type":"package","name":"@docusaurus/theme-classic","version":"3.4.0"},"ignore-buffer":{"type":"local"},"project-code-plugin":{"type":"project"},"docusaurus-json-schema-plugin":{"type":"package","name":"docusaurus-json-schema-plugin","version":"1.12.1"},"docusaurus-theme-github-codeblock":{"type":"package","name":"@saucelabs/theme-github-codeblock","version":"0.2.3"}}}');var c=t(52322);const d={siteConfig:o.default,siteMetadata:l,globalData:a,i18n:i,codeTranslations:s},u=r.createContext(d);function p(e){let{children:n}=e;return(0,c.jsx)(u.Provider,{value:d,children:n})}},63951:(e,n,t)=>{"use strict";t.d(n,{Z:()=>y});var r=t(2784),o=t(31263),a=t(69854),i=t(60958),s=t(76266),l=t(71313),c=t(52322);function d(e){let{error:n,tryAgain:t}=e;return(0,c.jsxs)("div",{style:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"flex-start",minHeight:"100vh",width:"100%",maxWidth:"80ch",fontSize:"20px",margin:"0 auto",padding:"1rem"},children:[(0,c.jsx)("h1",{style:{fontSize:"3rem"},children:"This page crashed"}),(0,c.jsx)("button",{type:"button",onClick:t,style:{margin:"1rem 0",fontSize:"2rem",cursor:"pointer",borderRadius:20,padding:"1rem"},children:"Try again"}),(0,c.jsx)(u,{error:n})]})}function u(e){let{error:n}=e;const t=(0,i.getErrorCausalChain)(n).map((e=>e.message)).join("\n\nCause:\n");return(0,c.jsx)("p",{style:{whiteSpace:"pre-wrap"},children:t})}function p(e){let{children:n}=e;return(0,c.jsx)(l.z,{value:{plugin:{name:"docusaurus-core-error-boundary",id:"default"}},children:n})}function f(e){let{error:n,tryAgain:t}=e;return(0,c.jsx)(p,{children:(0,c.jsxs)(y,{fallback:()=>(0,c.jsx)(d,{error:n,tryAgain:t}),children:[(0,c.jsx)(a.Z,{children:(0,c.jsx)("title",{children:"Page Error"})}),(0,c.jsx)(s.Z,{children:(0,c.jsx)(d,{error:n,tryAgain:t})})]})})}const m=e=>(0,c.jsx)(f,{...e});class y extends r.Component{constructor(e){super(e),this.state={error:null}}componentDidCatch(e){o.Z.canUseDOM&&this.setState({error:e})}render(){const{children:e}=this.props,{error:n}=this.state;if(n){const e={error:n,tryAgain:()=>this.setState({error:null})};return(this.props.fallback??m)(e)}return e??null}}},31263:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});const r="undefined"!=typeof window&&"document"in window&&"createElement"in window.document,o={canUseDOM:r,canUseEventListeners:r&&("addEventListener"in window||"attachEvent"in window),canUseIntersectionObserver:r&&"IntersectionObserver"in window,canUseViewport:r&&"screen"in window}},69854:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});t(2784);var r=t(72175),o=t(52322);function a(e){return(0,o.jsx)(r.ql,{...e})}},27718:(e,n,t)=>{"use strict";t.d(n,{Z:()=>f});var r=t(2784),o=t(47933),a=t(60958),i=t(37614),s=t(71344),l=t(31263),c=t(42530),d=t(90077),u=t(52322);function p(e,n){let{isNavLink:t,to:p,href:f,activeClassName:m,isActive:y,"data-noBrokenLinkCheck":h,autoAddBaseUrl:g=!0,...b}=e;const{siteConfig:v}=(0,i.Z)(),{trailingSlash:x,baseUrl:w}=v,k=v.future.experimental_router,{withBaseUrl:S}=(0,d.Cg)(),E=(0,c.Z)(),P=(0,r.useRef)(null);(0,r.useImperativeHandle)(n,(()=>P.current));const C=p||f;const _=(0,s.Z)(C),j=C?.replace("pathname://","");let T=void 0!==j?($=j,g&&(e=>e.startsWith("/"))($)?S($):$):void 0;var $;"hash"===k&&T?.startsWith("./")&&(T=T?.slice(1)),T&&_&&(T=(0,a.applyTrailingSlash)(T,{trailingSlash:x,baseUrl:w}));const O=(0,r.useRef)(!1),N=t?o.OL:o.rU,R=l.Z.canUseIntersectionObserver,A=(0,r.useRef)(),L=()=>{O.current||null==T||(window.docusaurus.preload(T),O.current=!0)};(0,r.useEffect)((()=>(!R&&_&&null!=T&&window.docusaurus.prefetch(T),()=>{R&&A.current&&A.current.disconnect()})),[A,T,R,_]);const D=T?.startsWith("#")??!1,I=!b.target||"_self"===b.target,M=!T||!_||!I;return h||!D&&M||E.collectLink(T),b.id&&E.collectAnchor(b.id),M?(0,u.jsx)("a",{ref:P,href:T,...C&&!_&&{target:"_blank",rel:"noopener noreferrer"},...b}):(0,u.jsx)(N,{...b,onMouseEnter:L,onTouchStart:L,innerRef:e=>{P.current=e,R&&e&&_&&(A.current=new window.IntersectionObserver((n=>{n.forEach((n=>{e===n.target&&(n.isIntersecting||n.intersectionRatio>0)&&(A.current.unobserve(e),A.current.disconnect(),null!=T&&window.docusaurus.prefetch(T))}))})),A.current.observe(e))},to:T,...t&&{isActive:y,activeClassName:m}})}const f=r.forwardRef(p)},15594:(e,n,t)=>{"use strict";t.d(n,{Z:()=>r});const r=()=>null},1077:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>c,translate:()=>l});var r=t(2784),o=t(52322);function a(e,n){const t=e.split(/(\{\w+\})/).map(((e,t)=>{if(t%2==1){const t=n?.[e.slice(1,-1)];if(void 0!==t)return t}return e}));return t.some((e=>(0,r.isValidElement)(e)))?t.map(((e,n)=>(0,r.isValidElement)(e)?r.cloneElement(e,{key:n}):e)).filter((e=>""!==e)):t.join("")}var i=t(57529);function s(e){let{id:n,message:t}=e;if(void 0===n&&void 0===t)throw new Error("Docusaurus translation declarations must have at least a translation id or a default translation message");return i[n??t]??t??n}function l(e,n){let{message:t,id:r}=e;return a(s({message:t,id:r}),n)}function c(e){let{children:n,id:t,values:r}=e;if(n&&"string"!=typeof n)throw console.warn("Illegal <Translate> children",n),new Error("The Docusaurus <Translate> component only accept simple string values");const i=s({message:n,id:t});return(0,o.jsx)(o.Fragment,{children:a(i,r)})}},78183:(e,n,t)=>{"use strict";t.d(n,{m:()=>r});const r="default"},71344:(e,n,t)=>{"use strict";function r(e){return/^(?:\w*:|\/\/)/.test(e)}function o(e){return void 0!==e&&!r(e)}t.d(n,{Z:()=>o,b:()=>r})},90077:(e,n,t)=>{"use strict";t.d(n,{Cg:()=>i,ZP:()=>s});var r=t(2784),o=t(37614),a=t(71344);function i(){const{siteConfig:e}=(0,o.Z)(),{baseUrl:n,url:t}=e,i=e.future.experimental_router,s=(0,r.useCallback)(((e,r)=>function(e){let{siteUrl:n,baseUrl:t,url:r,options:{forcePrependBaseUrl:o=!1,absolute:i=!1}={},router:s}=e;if(!r||r.startsWith("#")||(0,a.b)(r))return r;if("hash"===s)return r.startsWith("/")?`.${r}`:`./${r}`;if(o)return t+r.replace(/^\//,"");if(r===t.replace(/\/$/,""))return t;const l=r.startsWith(t)?r:t+r.replace(/^\//,"");return i?n+l:l}({siteUrl:t,baseUrl:n,url:e,options:r,router:i})),[t,n,i]);return{withBaseUrl:s}}function s(e,n){void 0===n&&(n={});const{withBaseUrl:t}=i();return t(e,n)}},42530:(e,n,t)=>{"use strict";t.d(n,{Z:()=>i});var r=t(2784);t(52322);const o=r.createContext({collectAnchor:()=>{},collectLink:()=>{}}),a=()=>(0,r.useContext)(o);function i(){return a()}},37614:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=t(2784),o=t(16288);function a(){return(0,r.useContext)(o._)}},42408:(e,n,t)=>{"use strict";t.d(n,{OD:()=>a,eZ:()=>i});var r=t(37614),o=t(78183);function a(e,n){void 0===n&&(n={});const t=function(){const{globalData:e}=(0,r.Z)();return e}()[e];if(!t&&n.failfast)throw new Error(`Docusaurus plugin global data not found for "${e}" plugin.`);return t}function i(e,n,t){void 0===n&&(n=o.m),void 0===t&&(t={});const r=a(e),i=r?.[n];if(!i&&t.failfast)throw new Error(`Docusaurus plugin global data not found for "${e}" plugin with id "${n}".`);return i}},89741:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=t(2784),o=t(60108);function a(){return(0,r.useContext)(o._)}},70164:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var r=t(2784);const o=t(31263).Z.canUseDOM?r.useLayoutEffect:r.useEffect},20805:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});const r=e=>"object"==typeof e&&!!e&&Object.keys(e).length>0;function o(e){const n={};return function e(t,o){Object.entries(t).forEach((t=>{let[a,i]=t;const s=o?`${o}.${a}`:a;r(i)?e(i,s):n[s]=i}))}(e),n}},71313:(e,n,t)=>{"use strict";t.d(n,{_:()=>a,z:()=>i});var r=t(2784),o=t(52322);const a=r.createContext(null);function i(e){let{children:n,value:t}=e;const i=r.useContext(a),s=(0,r.useMemo)((()=>function(e){let{parent:n,value:t}=e;if(!n){if(!t)throw new Error("Unexpected: no Docusaurus route context found");if(!("plugin"in t))throw new Error("Unexpected: Docusaurus topmost route context has no `plugin` attribute");return t}const r={...n.data,...t?.data};return{plugin:n.plugin,data:r}}({parent:i,value:t})),[i,t]);return(0,o.jsx)(a.Provider,{value:s,children:n})}},27415:(e,n,t)=>{"use strict";t.d(n,{Iw:()=>f,gA:()=>d,_r:()=>l,Jo:()=>m,zh:()=>c,yW:()=>p,gB:()=>u});var r=t(7267),o=t(42408);const a=e=>e.versions.find((e=>e.isLast));function i(e,n){const t=function(e,n){const t=a(e);return[...e.versions.filter((e=>e!==t)),t].find((e=>!!(0,r.LX)(n,{path:e.path,exact:!1,strict:!1})))}(e,n),o=t?.docs.find((e=>!!(0,r.LX)(n,{path:e.path,exact:!0,strict:!1})));return{activeVersion:t,activeDoc:o,alternateDocVersions:o?function(n){const t={};return e.versions.forEach((e=>{e.docs.forEach((r=>{r.id===n&&(t[e.name]=r)}))})),t}(o.id):{}}}const s={},l=()=>(0,o.OD)("docusaurus-plugin-content-docs")??s,c=e=>{try{return(0,o.eZ)("docusaurus-plugin-content-docs",e,{failfast:!0})}catch(n){throw new Error("You are using a feature of the Docusaurus docs plugin, but this plugin does not seem to be enabled"+("Default"===e?"":` (pluginId=${e}`),{cause:n})}};function d(e){void 0===e&&(e={});const n=l(),{pathname:t}=(0,r.TH)();return function(e,n,t){void 0===t&&(t={});const o=Object.entries(e).sort(((e,n)=>n[1].path.localeCompare(e[1].path))).find((e=>{let[,t]=e;return!!(0,r.LX)(n,{path:t.path,exact:!1,strict:!1})})),a=o?{pluginId:o[0],pluginData:o[1]}:void 0;if(!a&&t.failfast)throw new Error(`Can't find active docs plugin for "${n}" pathname, while it was expected to be found. Maybe you tried to use a docs feature that can only be used on a docs-related page? Existing docs plugin paths are: ${Object.values(e).map((e=>e.path)).join(", ")}`);return a}(n,t,e)}function u(e){return c(e).versions}function p(e){const n=c(e);return a(n)}function f(e){const n=c(e),{pathname:t}=(0,r.TH)();return i(n,t)}function m(e){const n=c(e),{pathname:t}=(0,r.TH)();return function(e,n){const t=a(e);return{latestDocSuggestion:i(e,n).alternateDocVersions[t.name],latestVersionSuggestion:t}}(n,t)}},80401:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>a});var r=t(92521),o=t.n(r);o().configure({showSpinner:!1});const a={onRouteUpdate(e){let{location:n,previousLocation:t}=e;if(t&&n.pathname!==t.pathname){const e=window.setTimeout((()=>{o().start()}),200);return()=>window.clearTimeout(e)}},onRouteDidUpdate(){o().done()}}},86120:(e,n,t)=>{"use strict";t.r(n);var r=t(16935),o=t(36809);!function(e){const{themeConfig:{prism:n}}=o.default,{additionalLanguages:r}=n;globalThis.Prism=e,r.forEach((e=>{"php"===e&&t(23502),t(97861)(`./prism-${e}`)})),delete globalThis.Prism}(r.p1)},83851:(e,n,t)=>{"use strict";t.d(n,{Z:()=>d});t(2784);var r=t(40489),o=t(1077),a=t(97683),i=t(27718),s=t(42530);const l={anchorWithStickyNavbar:"anchorWithStickyNavbar_fF9Z",anchorWithHideOnScrollNavbar:"anchorWithHideOnScrollNavbar_Yh18"};var c=t(52322);function d(e){let{as:n,id:t,...d}=e;const u=(0,s.Z)(),{navbar:{hideOnScroll:p}}=(0,a.L)();if("h1"===n||!t)return(0,c.jsx)(n,{...d,id:void 0});u.collectAnchor(t);const f=(0,o.translate)({id:"theme.common.headingLinkTitle",message:"Direct link to {heading}",description:"Title for link to heading"},{heading:"string"==typeof d.children?d.children:t});return(0,c.jsxs)(n,{...d,className:(0,r.Z)("anchor",p?l.anchorWithHideOnScrollNavbar:l.anchorWithStickyNavbar,d.className),id:t,children:[d.children,(0,c.jsx)(i.Z,{className:"hash-link",to:`#${t}`,"aria-label":f,title:f,children:"\u200b"})]})}},74442:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});t(2784);const r={iconExternalLink:"iconExternalLink_awgD"};var o=t(52322);function a(e){let{width:n=13.5,height:t=13.5}=e;return(0,o.jsx)("svg",{width:n,height:t,"aria-hidden":"true",viewBox:"0 0 24 24",className:r.iconExternalLink,children:(0,o.jsx)("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})})}},76266:(e,n,t)=>{"use strict";t.d(n,{Z:()=>mn});var r=t(2784),o=t(40489),a=t(63951),i=t(50328),s=t(7267),l=t(1077),c=t(12105),d=t(52322);const u="__docusaurus_skipToContent_fallback";function p(e){e.setAttribute("tabindex","-1"),e.focus(),e.removeAttribute("tabindex")}function f(){const e=(0,r.useRef)(null),{action:n}=(0,s.k6)(),t=(0,r.useCallback)((e=>{e.preventDefault();const n=document.querySelector("main:first-of-type")??document.getElementById(u);n&&p(n)}),[]);return(0,c.S)((t=>{let{location:r}=t;e.current&&!r.hash&&"PUSH"===n&&p(e.current)})),{containerRef:e,onClick:t}}const m=(0,l.translate)({id:"theme.common.skipToMainContent",description:"The skip to content label used for accessibility, allowing to rapidly navigate to main content with keyboard tab/enter navigation",message:"Skip to main content"});function y(e){const n=e.children??m,{containerRef:t,onClick:r}=f();return(0,d.jsx)("div",{ref:t,role:"region","aria-label":m,children:(0,d.jsx)("a",{...e,href:`#${u}`,onClick:r,children:n})})}var h=t(90211),g=t(9499);const b={skipToContent:"skipToContent_G6ar"};function v(){return(0,d.jsx)(y,{className:b.skipToContent})}var x=t(97683),w=t(13717);function k(e){let{width:n=21,height:t=21,color:r="currentColor",strokeWidth:o=1.2,className:a,...i}=e;return(0,d.jsx)("svg",{viewBox:"0 0 15 15",width:n,height:t,...i,children:(0,d.jsx)("g",{stroke:r,strokeWidth:o,children:(0,d.jsx)("path",{d:"M.75.75l13.5 13.5M14.25.75L.75 14.25"})})})}const S={closeButton:"closeButton_rfix"};function E(e){return(0,d.jsx)("button",{type:"button","aria-label":(0,l.translate)({id:"theme.AnnouncementBar.closeButtonAriaLabel",message:"Close",description:"The ARIA label for close button of announcement bar"}),...e,className:(0,o.Z)("clean-btn close",S.closeButton,e.className),children:(0,d.jsx)(k,{width:14,height:14,strokeWidth:3.1})})}const P={content:"content_L1uV"};function C(e){const{announcementBar:n}=(0,x.L)(),{content:t}=n;return(0,d.jsx)("div",{...e,className:(0,o.Z)(P.content,e.className),dangerouslySetInnerHTML:{__html:t}})}const _={announcementBar:"announcementBar_ncOr",announcementBarPlaceholder:"announcementBarPlaceholder_ajMw",announcementBarClose:"announcementBarClose_c9u4",announcementBarContent:"announcementBarContent__57G"};function j(){const{announcementBar:e}=(0,x.L)(),{isActive:n,close:t}=(0,w.n)();if(!n)return null;const{backgroundColor:r,textColor:o,isCloseable:a}=e;return(0,d.jsxs)("div",{className:_.announcementBar,style:{backgroundColor:r,color:o},role:"banner",children:[a&&(0,d.jsx)("div",{className:_.announcementBarPlaceholder}),(0,d.jsx)(C,{className:_.announcementBarContent}),a&&(0,d.jsx)(E,{onClick:t,className:_.announcementBarClose})]})}var T=t(54313),$=t(24126);var O=t(6335),N=t(47548);const R=r.createContext(null);function A(e){let{children:n}=e;const t=function(){const e=(0,T.e)(),n=(0,N.HY)(),[t,o]=(0,r.useState)(!1),a=null!==n.component,i=(0,O.D9)(a);return(0,r.useEffect)((()=>{a&&!i&&o(!0)}),[a,i]),(0,r.useEffect)((()=>{a?e.shown||o(!0):o(!1)}),[e.shown,a]),(0,r.useMemo)((()=>[t,o]),[t])}();return(0,d.jsx)(R.Provider,{value:t,children:n})}function L(e){if(e.component){const n=e.component;return(0,d.jsx)(n,{...e.props})}}function D(){const e=(0,r.useContext)(R);if(!e)throw new O.i6("NavbarSecondaryMenuDisplayProvider");const[n,t]=e,o=(0,r.useCallback)((()=>t(!1)),[t]),a=(0,N.HY)();return(0,r.useMemo)((()=>({shown:n,hide:o,content:L(a)})),[o,a,n])}function I(e){let{header:n,primaryMenu:t,secondaryMenu:r}=e;const{shown:a}=D();return(0,d.jsxs)("div",{className:"navbar-sidebar",children:[n,(0,d.jsxs)("div",{className:(0,o.Z)("navbar-sidebar__items",{"navbar-sidebar__items--show-secondary":a}),children:[(0,d.jsx)("div",{className:"navbar-sidebar__item menu",children:t}),(0,d.jsx)("div",{className:"navbar-sidebar__item menu",children:r})]})]})}var M=t(60361),F=t(89741);function z(e){return(0,d.jsx)("svg",{viewBox:"0 0 24 24",width:24,height:24,...e,children:(0,d.jsx)("path",{fill:"currentColor",d:"M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z"})})}function U(e){return(0,d.jsx)("svg",{viewBox:"0 0 24 24",width:24,height:24,...e,children:(0,d.jsx)("path",{fill:"currentColor",d:"M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"})})}const B={toggle:"toggle_OLSw",toggleButton:"toggleButton_wYmb",darkToggleIcon:"darkToggleIcon_Yem1",lightToggleIcon:"lightToggleIcon_Sxwe",toggleButtonDisabled:"toggleButtonDisabled_vaDU"};function q(e){let{className:n,buttonClassName:t,value:r,onChange:a}=e;const i=(0,F.Z)(),s=(0,l.translate)({message:"Switch between dark and light mode (currently {mode})",id:"theme.colorToggle.ariaLabel",description:"The ARIA label for the navbar color mode toggle"},{mode:"dark"===r?(0,l.translate)({message:"dark mode",id:"theme.colorToggle.ariaLabel.mode.dark",description:"The name for the dark color mode"}):(0,l.translate)({message:"light mode",id:"theme.colorToggle.ariaLabel.mode.light",description:"The name for the light color mode"})});return(0,d.jsx)("div",{className:(0,o.Z)(B.toggle,n),children:(0,d.jsxs)("button",{className:(0,o.Z)("clean-btn",B.toggleButton,!i&&B.toggleButtonDisabled,t),type:"button",onClick:()=>a("dark"===r?"light":"dark"),disabled:!i,title:s,"aria-label":s,"aria-live":"polite",children:[(0,d.jsx)(z,{className:(0,o.Z)(B.toggleIcon,B.lightToggleIcon)}),(0,d.jsx)(U,{className:(0,o.Z)(B.toggleIcon,B.darkToggleIcon)})]})})}const H=r.memo(q),V={darkNavbarColorModeToggle:"darkNavbarColorModeToggle_wZ1H"};function Z(e){let{className:n}=e;const t=(0,x.L)().navbar.style,r=(0,x.L)().colorMode.disableSwitch,{colorMode:o,setColorMode:a}=(0,M.I)();return r?null:(0,d.jsx)(H,{className:n,buttonClassName:"dark"===t?V.darkNavbarColorModeToggle:void 0,value:o,onChange:a})}var W=t(51881);function G(){return(0,d.jsx)(W.Z,{className:"navbar__brand",imageClassName:"navbar__logo",titleClassName:"navbar__title text--truncate"})}function K(){const e=(0,T.e)();return(0,d.jsx)("button",{type:"button","aria-label":(0,l.translate)({id:"theme.docs.sidebar.closeSidebarButtonAriaLabel",message:"Close navigation bar",description:"The ARIA label for close button of mobile sidebar"}),className:"clean-btn navbar-sidebar__close",onClick:()=>e.toggle(),children:(0,d.jsx)(k,{color:"var(--ifm-color-emphasis-600)"})})}function J(){return(0,d.jsxs)("div",{className:"navbar-sidebar__brand",children:[(0,d.jsx)(G,{}),(0,d.jsx)(Z,{className:"margin-right--md"}),(0,d.jsx)(K,{})]})}var Y=t(27718),Q=t(90077),X=t(71344);function ee(e,n){return void 0!==e&&void 0!==n&&new RegExp(e,"gi").test(n)}var ne=t(74442);function te(e){let{activeBasePath:n,activeBaseRegex:t,to:r,href:o,label:a,html:i,isDropdownLink:s,prependBaseUrlToHref:l,...c}=e;const u=(0,Q.ZP)(r),p=(0,Q.ZP)(n),f=(0,Q.ZP)(o,{forcePrependBaseUrl:!0}),m=a&&o&&!(0,X.Z)(o),y=i?{dangerouslySetInnerHTML:{__html:i}}:{children:(0,d.jsxs)(d.Fragment,{children:[a,m&&(0,d.jsx)(ne.Z,{...s&&{width:12,height:12}})]})};return o?(0,d.jsx)(Y.Z,{href:l?f:o,...c,...y}):(0,d.jsx)(Y.Z,{to:u,isNavLink:!0,...(n||t)&&{isActive:(e,n)=>t?ee(t,n.pathname):n.pathname.startsWith(p)},...c,...y})}function re(e){let{className:n,isDropdownItem:t=!1,...r}=e;const a=(0,d.jsx)(te,{className:(0,o.Z)(t?"dropdown__link":"navbar__item navbar__link",n),isDropdownLink:t,...r});return t?(0,d.jsx)("li",{children:a}):a}function oe(e){let{className:n,isDropdownItem:t,...r}=e;return(0,d.jsx)("li",{className:"menu__list-item",children:(0,d.jsx)(te,{className:(0,o.Z)("menu__link",n),...r})})}function ae(e){let{mobile:n=!1,position:t,...r}=e;const o=n?oe:re;return(0,d.jsx)(o,{...r,activeClassName:r.activeClassName??(n?"menu__link--active":"navbar__link--active")})}var ie=t(28698),se=t(87661),le=t(37614);const ce={dropdownNavbarItemMobile:"dropdownNavbarItemMobile_yXZl"};function de(e,n){return e.some((e=>function(e,n){return!!(0,se.Mg)(e.to,n)||!!ee(e.activeBaseRegex,n)||!(!e.activeBasePath||!n.startsWith(e.activeBasePath))}(e,n)))}function ue(e){let{items:n,position:t,className:a,onClick:i,...s}=e;const l=(0,r.useRef)(null),[c,u]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{const e=e=>{l.current&&!l.current.contains(e.target)&&u(!1)};return document.addEventListener("mousedown",e),document.addEventListener("touchstart",e),document.addEventListener("focusin",e),()=>{document.removeEventListener("mousedown",e),document.removeEventListener("touchstart",e),document.removeEventListener("focusin",e)}}),[l]),(0,d.jsxs)("div",{ref:l,className:(0,o.Z)("navbar__item","dropdown","dropdown--hoverable",{"dropdown--right":"right"===t,"dropdown--show":c}),children:[(0,d.jsx)(te,{"aria-haspopup":"true","aria-expanded":c,role:"button",href:s.to?void 0:"#",className:(0,o.Z)("navbar__link",a),...s,onClick:s.to?void 0:e=>e.preventDefault(),onKeyDown:e=>{"Enter"===e.key&&(e.preventDefault(),u(!c))},children:s.children??s.label}),(0,d.jsx)("ul",{className:"dropdown__menu",children:n.map(((e,n)=>(0,r.createElement)(Pe,{isDropdownItem:!0,activeClassName:"dropdown__link--active",...e,key:n})))})]})}function pe(e){let{items:n,className:t,position:a,onClick:i,...l}=e;const c=function(){const{siteConfig:{baseUrl:e}}=(0,le.Z)(),{pathname:n}=(0,s.TH)();return n.replace(e,"/")}(),u=de(n,c),{collapsed:p,toggleCollapsed:f,setCollapsed:m}=(0,ie.u)({initialState:()=>!u});return(0,r.useEffect)((()=>{u&&m(!u)}),[c,u,m]),(0,d.jsxs)("li",{className:(0,o.Z)("menu__list-item",{"menu__list-item--collapsed":p}),children:[(0,d.jsx)(te,{role:"button",className:(0,o.Z)(ce.dropdownNavbarItemMobile,"menu__link menu__link--sublist menu__link--sublist-caret",t),...l,onClick:e=>{e.preventDefault(),f()},children:l.children??l.label}),(0,d.jsx)(ie.z,{lazy:!0,as:"ul",className:"menu__list",collapsed:p,children:n.map(((e,n)=>(0,r.createElement)(Pe,{mobile:!0,isDropdownItem:!0,onClick:i,activeClassName:"menu__link--active",...e,key:n})))})]})}function fe(e){let{mobile:n=!1,...t}=e;const r=n?pe:ue;return(0,d.jsx)(r,{...t})}var me=t(55552);function ye(e){let{width:n=20,height:t=20,...r}=e;return(0,d.jsx)("svg",{viewBox:"0 0 24 24",width:n,height:t,"aria-hidden":!0,...r,children:(0,d.jsx)("path",{fill:"currentColor",d:"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"})})}const he="iconLanguage_xrmG";var ge=t(15594);const be={navbarSearchContainer:"navbarSearchContainer_bmvg"};function ve(e){let{children:n,className:t}=e;return(0,d.jsx)("div",{className:(0,o.Z)(t,be.navbarSearchContainer),children:n})}var xe=t(27415),we=t(38350);var ke=t(37949);const Se=e=>e.docs.find((n=>n.id===e.mainDocId));const Ee={default:ae,localeDropdown:function(e){let{mobile:n,dropdownItemsBefore:t,dropdownItemsAfter:r,queryString:o="",...a}=e;const{i18n:{currentLocale:i,locales:c,localeConfigs:u}}=(0,le.Z)(),p=(0,me.l)(),{search:f,hash:m}=(0,s.TH)(),y=[...t,...c.map((e=>{const t=`${`pathname://${p.createUrl({locale:e,fullyQualified:!1})}`}${f}${m}${o}`;return{label:u[e].label,lang:u[e].htmlLang,to:t,target:"_self",autoAddBaseUrl:!1,className:e===i?n?"menu__link--active":"dropdown__link--active":""}})),...r],h=n?(0,l.translate)({message:"Languages",id:"theme.navbar.mobileLanguageDropdown.label",description:"The label for the mobile language switcher dropdown"}):u[i].label;return(0,d.jsx)(fe,{...a,mobile:n,label:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(ye,{className:he}),h]}),items:y})},search:function(e){let{mobile:n,className:t}=e;return n?null:(0,d.jsx)(ve,{className:t,children:(0,d.jsx)(ge.Z,{})})},dropdown:fe,html:function(e){let{value:n,className:t,mobile:r=!1,isDropdownItem:a=!1}=e;const i=a?"li":"div";return(0,d.jsx)(i,{className:(0,o.Z)({navbar__item:!r&&!a,"menu__list-item":r},t),dangerouslySetInnerHTML:{__html:n}})},doc:function(e){let{docId:n,label:t,docsPluginId:r,...o}=e;const{activeDoc:a}=(0,xe.Iw)(r),i=(0,we.vY)(n,r),s=a?.path===i?.path;return null===i||i.unlisted&&!s?null:(0,d.jsx)(ae,{exact:!0,...o,isActive:()=>s||!!a?.sidebar&&a.sidebar===i.sidebar,label:t??i.id,to:i.path})},docSidebar:function(e){let{sidebarId:n,label:t,docsPluginId:r,...o}=e;const{activeDoc:a}=(0,xe.Iw)(r),i=(0,we.oz)(n,r).link;if(!i)throw new Error(`DocSidebarNavbarItem: Sidebar with ID "${n}" doesn't have anything to be linked to.`);return(0,d.jsx)(ae,{exact:!0,...o,isActive:()=>a?.sidebar===n,label:t??i.label,to:i.path})},docsVersion:function(e){let{label:n,to:t,docsPluginId:r,...o}=e;const a=(0,we.lO)(r)[0],i=n??a.label,s=t??(e=>e.docs.find((n=>n.id===e.mainDocId)))(a).path;return(0,d.jsx)(ae,{...o,label:i,to:s})},docsVersionDropdown:function(e){let{mobile:n,docsPluginId:t,dropdownActiveClassDisabled:r,dropdownItemsBefore:o,dropdownItemsAfter:a,...i}=e;const{search:c,hash:u}=(0,s.TH)(),p=(0,xe.Iw)(t),f=(0,xe.gB)(t),{savePreferredVersionName:m}=(0,ke.J)(t),y=[...o,...f.map((e=>{const n=p.alternateDocVersions[e.name]??Se(e);return{label:e.label,to:`${n.path}${c}${u}`,isActive:()=>e===p.activeVersion,onClick:()=>m(e.name)}})),...a],h=(0,we.lO)(t)[0],g=n&&y.length>1?(0,l.translate)({id:"theme.navbar.mobileVersionsDropdown.label",message:"Versions",description:"The label for the navbar versions dropdown on mobile view"}):h.label,b=n&&y.length>1?void 0:Se(h).path;return y.length<=1?(0,d.jsx)(ae,{...i,mobile:n,label:g,to:b,isActive:r?()=>!1:void 0}):(0,d.jsx)(fe,{...i,mobile:n,label:g,to:b,items:y,isActive:r?()=>!1:void 0})}};function Pe(e){let{type:n,...t}=e;const r=function(e,n){return e&&"default"!==e?e:"items"in n?"dropdown":"default"}(n,t),o=Ee[r];if(!o)throw new Error(`No NavbarItem component found for type "${n}".`);return(0,d.jsx)(o,{...t})}function Ce(){const e=(0,T.e)(),n=(0,x.L)().navbar.items;return(0,d.jsx)("ul",{className:"menu__list",children:n.map(((n,t)=>(0,r.createElement)(Pe,{mobile:!0,...n,onClick:()=>e.toggle(),key:t})))})}function _e(e){return(0,d.jsx)("button",{...e,type:"button",className:"clean-btn navbar-sidebar__back",children:(0,d.jsx)(l.default,{id:"theme.navbar.mobileSidebarSecondaryMenu.backButtonLabel",description:"The label of the back button to return to main menu, inside the mobile navbar sidebar secondary menu (notably used to display the docs sidebar)",children:"\u2190 Back to main menu"})})}function je(){const e=0===(0,x.L)().navbar.items.length,n=D();return(0,d.jsxs)(d.Fragment,{children:[!e&&(0,d.jsx)(_e,{onClick:()=>n.hide()}),n.content]})}function Te(){const e=(0,T.e)();var n;return void 0===(n=e.shown)&&(n=!0),(0,r.useEffect)((()=>(document.body.style.overflow=n?"hidden":"visible",()=>{document.body.style.overflow="visible"})),[n]),e.shouldRender?(0,d.jsx)(I,{header:(0,d.jsx)(J,{}),primaryMenu:(0,d.jsx)(Ce,{}),secondaryMenu:(0,d.jsx)(je,{})}):null}const $e={navbarHideable:"navbarHideable_bChn",navbarHidden:"navbarHidden_zsXl"};function Oe(e){return(0,d.jsx)("div",{role:"presentation",...e,className:(0,o.Z)("navbar-sidebar__backdrop",e.className)})}function Ne(e){let{children:n}=e;const{navbar:{hideOnScroll:t,style:a}}=(0,x.L)(),i=(0,T.e)(),{navbarRef:s,isNavbarVisible:u}=function(e){const[n,t]=(0,r.useState)(e),o=(0,r.useRef)(!1),a=(0,r.useRef)(0),i=(0,r.useCallback)((e=>{null!==e&&(a.current=e.getBoundingClientRect().height)}),[]);return(0,$.RF)(((n,r)=>{let{scrollY:i}=n;if(!e)return;if(i<a.current)return void t(!0);if(o.current)return void(o.current=!1);const s=r?.scrollY,l=document.documentElement.scrollHeight-a.current,c=window.innerHeight;s&&i>=s?t(!1):i+c<l&&t(!0)})),(0,c.S)((n=>{if(!e)return;const r=n.location.hash;if(r?document.getElementById(r.substring(1)):void 0)return o.current=!0,void t(!1);t(!0)})),{navbarRef:i,isNavbarVisible:n}}(t);return(0,d.jsxs)("nav",{ref:s,"aria-label":(0,l.translate)({id:"theme.NavBar.navAriaLabel",message:"Main",description:"The ARIA label for the main navigation"}),className:(0,o.Z)("navbar","navbar--fixed-top",t&&[$e.navbarHideable,!u&&$e.navbarHidden],{"navbar--dark":"dark"===a,"navbar--primary":"primary"===a,"navbar-sidebar--show":i.shown}),children:[n,(0,d.jsx)(Oe,{onClick:i.toggle}),(0,d.jsx)(Te,{})]})}var Re=t(60958);const Ae={errorBoundaryError:"errorBoundaryError_FiLL",errorBoundaryFallback:"errorBoundaryFallback_lv4I"};function Le(e){return(0,d.jsx)("button",{type:"button",...e,children:(0,d.jsx)(l.default,{id:"theme.ErrorPageContent.tryAgain",description:"The label of the button to try again rendering when the React error boundary captures an error",children:"Try again"})})}function De(e){let{error:n}=e;const t=(0,Re.getErrorCausalChain)(n).map((e=>e.message)).join("\n\nCause:\n");return(0,d.jsx)("p",{className:Ae.errorBoundaryError,children:t})}class Ie extends r.Component{componentDidCatch(e,n){throw this.props.onError(e,n)}render(){return this.props.children}}const Me="right";function Fe(e){let{width:n=30,height:t=30,className:r,...o}=e;return(0,d.jsx)("svg",{className:r,width:n,height:t,viewBox:"0 0 30 30","aria-hidden":"true",...o,children:(0,d.jsx)("path",{stroke:"currentColor",strokeLinecap:"round",strokeMiterlimit:"10",strokeWidth:"2",d:"M4 7h22M4 15h22M4 23h22"})})}function ze(){const{toggle:e,shown:n}=(0,T.e)();return(0,d.jsx)("button",{onClick:e,"aria-label":(0,l.translate)({id:"theme.docs.sidebar.toggleSidebarButtonAriaLabel",message:"Toggle navigation bar",description:"The ARIA label for hamburger menu button of mobile navigation"}),"aria-expanded":n,className:"navbar__toggle clean-btn",type:"button",children:(0,d.jsx)(Fe,{})})}const Ue={colorModeToggle:"colorModeToggle_Hg9V"};function Be(e){let{items:n}=e;return(0,d.jsx)(d.Fragment,{children:n.map(((e,n)=>(0,d.jsx)(Ie,{onError:n=>new Error(`A theme navbar item failed to render.\nPlease double-check the following navbar item (themeConfig.navbar.items) of your Docusaurus config:\n${JSON.stringify(e,null,2)}`,{cause:n}),children:(0,d.jsx)(Pe,{...e})},n)))})}function qe(e){let{left:n,right:t}=e;return(0,d.jsxs)("div",{className:"navbar__inner",children:[(0,d.jsx)("div",{className:"navbar__items",children:n}),(0,d.jsx)("div",{className:"navbar__items navbar__items--right",children:t})]})}function He(){const e=(0,T.e)(),n=(0,x.L)().navbar.items,[t,r]=function(e){function n(e){return"left"===(e.position??Me)}return[e.filter(n),e.filter((e=>!n(e)))]}(n),o=n.find((e=>"search"===e.type));return(0,d.jsx)(qe,{left:(0,d.jsxs)(d.Fragment,{children:[!e.disabled&&(0,d.jsx)(ze,{}),(0,d.jsx)(G,{}),(0,d.jsx)(Be,{items:t})]}),right:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(Be,{items:r}),(0,d.jsx)(Z,{className:Ue.colorModeToggle}),!o&&(0,d.jsx)(ve,{children:(0,d.jsx)(ge.Z,{})})]})})}function Ve(){return(0,d.jsx)(Ne,{children:(0,d.jsx)(He,{})})}function Ze(e){let{item:n}=e;const{to:t,href:r,label:o,prependBaseUrlToHref:a,...i}=n,s=(0,Q.ZP)(t),l=(0,Q.ZP)(r,{forcePrependBaseUrl:!0});return(0,d.jsxs)(Y.Z,{className:"footer__link-item",...r?{href:a?l:r}:{to:s},...i,children:[o,r&&!(0,X.Z)(r)&&(0,d.jsx)(ne.Z,{})]})}function We(e){let{item:n}=e;return n.html?(0,d.jsx)("li",{className:"footer__item",dangerouslySetInnerHTML:{__html:n.html}}):(0,d.jsx)("li",{className:"footer__item",children:(0,d.jsx)(Ze,{item:n})},n.href??n.to)}function Ge(e){let{column:n}=e;return(0,d.jsxs)("div",{className:"col footer__col",children:[(0,d.jsx)("div",{className:"footer__title",children:n.title}),(0,d.jsx)("ul",{className:"footer__items clean-list",children:n.items.map(((e,n)=>(0,d.jsx)(We,{item:e},n)))})]})}function Ke(e){let{columns:n}=e;return(0,d.jsx)("div",{className:"row footer__links",children:n.map(((e,n)=>(0,d.jsx)(Ge,{column:e},n)))})}function Je(){return(0,d.jsx)("span",{className:"footer__link-separator",children:"\xb7"})}function Ye(e){let{item:n}=e;return n.html?(0,d.jsx)("span",{className:"footer__link-item",dangerouslySetInnerHTML:{__html:n.html}}):(0,d.jsx)(Ze,{item:n})}function Qe(e){let{links:n}=e;return(0,d.jsx)("div",{className:"footer__links text--center",children:(0,d.jsx)("div",{className:"footer__links",children:n.map(((e,t)=>(0,d.jsxs)(r.Fragment,{children:[(0,d.jsx)(Ye,{item:e}),n.length!==t+1&&(0,d.jsx)(Je,{})]},t)))})})}function Xe(e){let{links:n}=e;return function(e){return"title"in e[0]}(n)?(0,d.jsx)(Ke,{columns:n}):(0,d.jsx)(Qe,{links:n})}var en=t(36087);const nn={footerLogoLink:"footerLogoLink_zxYv"};function tn(e){let{logo:n}=e;const{withBaseUrl:t}=(0,Q.Cg)(),r={light:t(n.src),dark:t(n.srcDark??n.src)};return(0,d.jsx)(en.Z,{className:(0,o.Z)("footer__logo",n.className),alt:n.alt,sources:r,width:n.width,height:n.height,style:n.style})}function rn(e){let{logo:n}=e;return n.href?(0,d.jsx)(Y.Z,{href:n.href,className:nn.footerLogoLink,target:n.target,children:(0,d.jsx)(tn,{logo:n})}):(0,d.jsx)(tn,{logo:n})}function on(e){let{copyright:n}=e;return(0,d.jsx)("div",{className:"footer__copyright",dangerouslySetInnerHTML:{__html:n}})}function an(e){let{style:n,links:t,logo:r,copyright:a}=e;return(0,d.jsx)("footer",{className:(0,o.Z)("footer",{"footer--dark":"dark"===n}),children:(0,d.jsxs)("div",{className:"container container-fluid",children:[t,(r||a)&&(0,d.jsxs)("div",{className:"footer__bottom text--center",children:[r&&(0,d.jsx)("div",{className:"margin-bottom--sm",children:r}),a]})]})})}function sn(){const{footer:e}=(0,x.L)();if(!e)return null;const{copyright:n,links:t,logo:r,style:o}=e;return(0,d.jsx)(an,{style:o,links:t&&t.length>0&&(0,d.jsx)(Xe,{links:t}),logo:r&&(0,d.jsx)(rn,{logo:r}),copyright:n&&(0,d.jsx)(on,{copyright:n})})}const ln=r.memo(sn),cn=(0,O.Qc)([M.S,w.p,$.OC,ke.L5,i.VC,function(e){let{children:n}=e;return(0,d.jsx)(N.n2,{children:(0,d.jsx)(T.M,{children:(0,d.jsx)(A,{children:n})})})}]);function dn(e){let{children:n}=e;return(0,d.jsx)(cn,{children:n})}var un=t(83851);function pn(e){let{error:n,tryAgain:t}=e;return(0,d.jsx)("main",{className:"container margin-vert--xl",children:(0,d.jsx)("div",{className:"row",children:(0,d.jsxs)("div",{className:"col col--6 col--offset-3",children:[(0,d.jsx)(un.Z,{as:"h1",className:"hero__title",children:(0,d.jsx)(l.default,{id:"theme.ErrorPageContent.title",description:"The title of the fallback page when the page crashed",children:"This page crashed."})}),(0,d.jsx)("div",{className:"margin-vert--lg",children:(0,d.jsx)(Le,{onClick:t,className:"button button--primary shadow--lw"})}),(0,d.jsx)("hr",{}),(0,d.jsx)("div",{className:"margin-vert--md",children:(0,d.jsx)(De,{error:n})})]})})})}const fn={mainWrapper:"mainWrapper_UyTV"};function mn(e){const{children:n,noFooter:t,wrapperClassName:r,title:s,description:l}=e;return(0,g.t)(),(0,d.jsxs)(dn,{children:[(0,d.jsx)(i.d,{title:s,description:l}),(0,d.jsx)(v,{}),(0,d.jsx)(j,{}),(0,d.jsx)(Ve,{}),(0,d.jsx)("div",{id:u,className:(0,o.Z)(h.k.wrapper.main,fn.mainWrapper,r),children:(0,d.jsx)(a.Z,{fallback:e=>(0,d.jsx)(pn,{...e}),children:n})}),!t&&(0,d.jsx)(ln,{})]})}},51881:(e,n,t)=>{"use strict";t.d(n,{Z:()=>d});t(2784);var r=t(27718),o=t(90077),a=t(37614),i=t(97683),s=t(36087),l=t(52322);function c(e){let{logo:n,alt:t,imageClassName:r}=e;const a={light:(0,o.ZP)(n.src),dark:(0,o.ZP)(n.srcDark||n.src)},i=(0,l.jsx)(s.Z,{className:n.className,sources:a,height:n.height,width:n.width,alt:t,style:n.style});return r?(0,l.jsx)("div",{className:r,children:i}):i}function d(e){const{siteConfig:{title:n}}=(0,a.Z)(),{navbar:{title:t,logo:s}}=(0,i.L)(),{imageClassName:d,titleClassName:u,...p}=e,f=(0,o.ZP)(s?.href||"/"),m=t?"":n,y=s?.alt??m;return(0,l.jsxs)(r.Z,{to:f,...p,...s?.target&&{target:s.target},children:[s&&(0,l.jsx)(c,{logo:s,alt:y,imageClassName:d}),null!=t&&(0,l.jsx)("b",{className:u,children:t})]})}},54390:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});t(2784);var r=t(69854),o=t(52322);function a(e){let{locale:n,version:t,tag:a}=e;const i=n;return(0,o.jsxs)(r.Z,{children:[n&&(0,o.jsx)("meta",{name:"docusaurus_locale",content:n}),t&&(0,o.jsx)("meta",{name:"docusaurus_version",content:t}),a&&(0,o.jsx)("meta",{name:"docusaurus_tag",content:a}),i&&(0,o.jsx)("meta",{name:"docsearch:language",content:i}),t&&(0,o.jsx)("meta",{name:"docsearch:version",content:t}),a&&(0,o.jsx)("meta",{name:"docsearch:docusaurus_tag",content:a})]})}},36087:(e,n,t)=>{"use strict";t.d(n,{Z:()=>d});var r=t(2784),o=t(40489),a=t(89741),i=t(60361);const s={themedComponent:"themedComponent_DHUr","themedComponent--light":"themedComponent--light_DIHH","themedComponent--dark":"themedComponent--dark_Bv2M"};var l=t(52322);function c(e){let{className:n,children:t}=e;const c=(0,a.Z)(),{colorMode:d}=(0,i.I)();return(0,l.jsx)(l.Fragment,{children:(c?"dark"===d?["dark"]:["light"]:["light","dark"]).map((e=>{const a=t({theme:e,className:(0,o.Z)(n,s.themedComponent,s[`themedComponent--${e}`])});return(0,l.jsx)(r.Fragment,{children:a},e)}))})}function d(e){const{sources:n,className:t,alt:r,...o}=e;return(0,l.jsx)(c,{className:t,children:e=>{let{theme:t,className:a}=e;return(0,l.jsx)("img",{src:n[t],alt:r,className:a,...o})}})}},28698:(e,n,t)=>{"use strict";t.d(n,{u:()=>c,z:()=>g});var r=t(2784),o=t(31263),a=t(70164),i=t(80936),s=t(52322);const l="ease-in-out";function c(e){let{initialState:n}=e;const[t,o]=(0,r.useState)(n??!1),a=(0,r.useCallback)((()=>{o((e=>!e))}),[]);return{collapsed:t,setCollapsed:o,toggleCollapsed:a}}const d={display:"none",overflow:"hidden",height:"0px"},u={display:"block",overflow:"visible",height:"auto"};function p(e,n){const t=n?d:u;e.style.display=t.display,e.style.overflow=t.overflow,e.style.height=t.height}function f(e){let{collapsibleRef:n,collapsed:t,animation:o}=e;const a=(0,r.useRef)(!1);(0,r.useEffect)((()=>{const e=n.current;function r(){const n=e.scrollHeight,t=o?.duration??function(e){if((0,i.n)())return 1;const n=e/36;return Math.round(10*(4+15*n**.25+n/5))}(n);return{transition:`height ${t}ms ${o?.easing??l}`,height:`${n}px`}}function s(){const n=r();e.style.transition=n.transition,e.style.height=n.height}if(!a.current)return p(e,t),void(a.current=!0);return e.style.willChange="height",function(){const n=requestAnimationFrame((()=>{t?(s(),requestAnimationFrame((()=>{e.style.height=d.height,e.style.overflow=d.overflow}))):(e.style.display="block",requestAnimationFrame((()=>{s()})))}));return()=>cancelAnimationFrame(n)}()}),[n,t,o])}function m(e){if(!o.Z.canUseDOM)return e?d:u}function y(e){let{as:n="div",collapsed:t,children:o,animation:a,onCollapseTransitionEnd:i,className:l,disableSSRStyle:c}=e;const d=(0,r.useRef)(null);return f({collapsibleRef:d,collapsed:t,animation:a}),(0,s.jsx)(n,{ref:d,style:c?void 0:m(t),onTransitionEnd:e=>{"height"===e.propertyName&&(p(d.current,t),i?.(t))},className:l,children:o})}function h(e){let{collapsed:n,...t}=e;const[o,i]=(0,r.useState)(!n),[l,c]=(0,r.useState)(n);return(0,a.Z)((()=>{n||i(!0)}),[n]),(0,a.Z)((()=>{o&&c(n)}),[o,n]),o?(0,s.jsx)(y,{...t,collapsed:l}):null}function g(e){let{lazy:n,...t}=e;const r=n?h:y;return(0,s.jsx)(r,{...t})}},13717:(e,n,t)=>{"use strict";t.d(n,{n:()=>y,p:()=>m});var r=t(2784),o=t(89741),a=t(37611),i=t(6335),s=t(97683),l=t(52322);const c=(0,a.WA)("docusaurus.announcement.dismiss"),d=(0,a.WA)("docusaurus.announcement.id"),u=()=>"true"===c.get(),p=e=>c.set(String(e)),f=r.createContext(null);function m(e){let{children:n}=e;const t=function(){const{announcementBar:e}=(0,s.L)(),n=(0,o.Z)(),[t,a]=(0,r.useState)((()=>!!n&&u()));(0,r.useEffect)((()=>{a(u())}),[]);const i=(0,r.useCallback)((()=>{p(!0),a(!0)}),[]);return(0,r.useEffect)((()=>{if(!e)return;const{id:n}=e;let t=d.get();"annoucement-bar"===t&&(t="announcement-bar");const r=n!==t;d.set(n),r&&p(!1),!r&&u()||a(!1)}),[e]),(0,r.useMemo)((()=>({isActive:!!e&&!t,close:i})),[e,t,i])}();return(0,l.jsx)(f.Provider,{value:t,children:n})}function y(){const e=(0,r.useContext)(f);if(!e)throw new i.i6("AnnouncementBarProvider");return e}},60361:(e,n,t)=>{"use strict";t.d(n,{I:()=>g,S:()=>h});var r=t(2784),o=t(31263),a=t(6335),i=t(37611),s=t(97683),l=t(52322);const c=r.createContext(void 0),d="theme",u=(0,i.WA)(d),p={light:"light",dark:"dark"},f=e=>e===p.dark?p.dark:p.light,m=e=>o.Z.canUseDOM?f(document.documentElement.getAttribute("data-theme")):f(e),y=e=>{u.set(f(e))};function h(e){let{children:n}=e;const t=function(){const{colorMode:{defaultMode:e,disableSwitch:n,respectPrefersColorScheme:t}}=(0,s.L)(),[o,a]=(0,r.useState)(m(e));(0,r.useEffect)((()=>{n&&u.del()}),[n]);const i=(0,r.useCallback)((function(n,r){void 0===r&&(r={});const{persist:o=!0}=r;n?(a(n),o&&y(n)):(a(t?window.matchMedia("(prefers-color-scheme: dark)").matches?p.dark:p.light:e),u.del())}),[t,e]);(0,r.useEffect)((()=>{document.documentElement.setAttribute("data-theme",f(o))}),[o]),(0,r.useEffect)((()=>{if(n)return;const e=e=>{if(e.key!==d)return;const n=u.get();null!==n&&i(f(n))};return window.addEventListener("storage",e),()=>window.removeEventListener("storage",e)}),[n,i]);const l=(0,r.useRef)(!1);return(0,r.useEffect)((()=>{if(n&&!t)return;const e=window.matchMedia("(prefers-color-scheme: dark)"),r=()=>{window.matchMedia("print").matches||l.current?l.current=window.matchMedia("print").matches:i(null)};return e.addListener(r),()=>e.removeListener(r)}),[i,n,t]),(0,r.useMemo)((()=>({colorMode:o,setColorMode:i,get isDarkTheme(){return o===p.dark},setLightTheme(){i(p.light)},setDarkTheme(){i(p.dark)}})),[o,i])}();return(0,l.jsx)(c.Provider,{value:t,children:n})}function g(){const e=(0,r.useContext)(c);if(null==e)throw new a.i6("ColorModeProvider","Please see https://docusaurus.io/docs/api/themes/configuration#use-color-mode.");return e}},37949:(e,n,t)=>{"use strict";t.d(n,{J:()=>v,L5:()=>g});var r=t(2784),o=t(27415),a=t(78183),i=t(97683),s=t(38350),l=t(6335),c=t(37611),d=t(52322);const u=e=>`docs-preferred-version-${e}`,p={save:(e,n,t)=>{(0,c.WA)(u(e),{persistence:n}).set(t)},read:(e,n)=>(0,c.WA)(u(e),{persistence:n}).get(),clear:(e,n)=>{(0,c.WA)(u(e),{persistence:n}).del()}},f=e=>Object.fromEntries(e.map((e=>[e,{preferredVersionName:null}])));const m=r.createContext(null);function y(){const e=(0,o._r)(),n=(0,i.L)().docs.versionPersistence,t=(0,r.useMemo)((()=>Object.keys(e)),[e]),[a,s]=(0,r.useState)((()=>f(t)));(0,r.useEffect)((()=>{s(function(e){let{pluginIds:n,versionPersistence:t,allDocsData:r}=e;function o(e){const n=p.read(e,t);return r[e].versions.some((e=>e.name===n))?{preferredVersionName:n}:(p.clear(e,t),{preferredVersionName:null})}return Object.fromEntries(n.map((e=>[e,o(e)])))}({allDocsData:e,versionPersistence:n,pluginIds:t}))}),[e,n,t]);return[a,(0,r.useMemo)((()=>({savePreferredVersion:function(e,t){p.save(e,n,t),s((n=>({...n,[e]:{preferredVersionName:t}})))}})),[n])]}function h(e){let{children:n}=e;const t=y();return(0,d.jsx)(m.Provider,{value:t,children:n})}function g(e){let{children:n}=e;return s.cE?(0,d.jsx)(h,{children:n}):(0,d.jsx)(d.Fragment,{children:n})}function b(){const e=(0,r.useContext)(m);if(!e)throw new l.i6("DocsPreferredVersionContextProvider");return e}function v(e){void 0===e&&(e=a.m);const n=(0,o.zh)(e),[t,i]=b(),{preferredVersionName:s}=t[e];return{preferredVersion:n.versions.find((e=>e.name===s))??null,savePreferredVersionName:(0,r.useCallback)((n=>{i.savePreferredVersion(e,n)}),[i,e])}}},4228:(e,n,t)=>{"use strict";t.d(n,{V:()=>c,b:()=>l});var r=t(2784),o=t(6335),a=t(52322);const i=Symbol("EmptyContext"),s=r.createContext(i);function l(e){let{children:n,name:t,items:o}=e;const i=(0,r.useMemo)((()=>t&&o?{name:t,items:o}:null),[t,o]);return(0,a.jsx)(s.Provider,{value:i,children:n})}function c(){const e=(0,r.useContext)(s);if(e===i)throw new o.i6("DocsSidebarProvider");return e}},95663:(e,n,t)=>{"use strict";t.d(n,{E:()=>l,q:()=>s});var r=t(2784),o=t(6335),a=t(52322);const i=r.createContext(null);function s(e){let{children:n,version:t}=e;return(0,a.jsx)(i.Provider,{value:t,children:n})}function l(){const e=(0,r.useContext)(i);if(null===e)throw new o.i6("DocsVersionProvider");return e}},54313:(e,n,t)=>{"use strict";t.d(n,{M:()=>p,e:()=>f});var r=t(2784),o=t(47548),a=t(57963),i=t(32424),s=t(97683),l=t(6335),c=t(52322);const d=r.createContext(void 0);function u(){const e=function(){const e=(0,o.HY)(),{items:n}=(0,s.L)().navbar;return 0===n.length&&!e.component}(),n=(0,a.i)(),t=!e&&"mobile"===n,[l,c]=(0,r.useState)(!1);(0,i.Rb)((()=>{if(l)return c(!1),!1}));const d=(0,r.useCallback)((()=>{c((e=>!e))}),[]);return(0,r.useEffect)((()=>{"desktop"===n&&c(!1)}),[n]),(0,r.useMemo)((()=>({disabled:e,shouldRender:t,toggle:d,shown:l})),[e,t,d,l])}function p(e){let{children:n}=e;const t=u();return(0,c.jsx)(d.Provider,{value:t,children:n})}function f(){const e=r.useContext(d);if(void 0===e)throw new l.i6("NavbarMobileSidebarProvider");return e}},47548:(e,n,t)=>{"use strict";t.d(n,{HY:()=>l,Zo:()=>c,n2:()=>s});var r=t(2784),o=t(6335),a=t(52322);const i=r.createContext(null);function s(e){let{children:n}=e;const t=(0,r.useState)({component:null,props:null});return(0,a.jsx)(i.Provider,{value:t,children:n})}function l(){const e=(0,r.useContext)(i);if(!e)throw new o.i6("NavbarSecondaryMenuContentProvider");return e[0]}function c(e){let{component:n,props:t}=e;const a=(0,r.useContext)(i);if(!a)throw new o.i6("NavbarSecondaryMenuContentProvider");const[,s]=a,l=(0,o.Ql)(t);return(0,r.useEffect)((()=>{s({component:n,props:l})}),[s,n,l]),(0,r.useEffect)((()=>()=>s({component:null,props:null})),[s]),null}},9499:(e,n,t)=>{"use strict";t.d(n,{h:()=>o,t:()=>a});var r=t(2784);const o="navigation-with-keyboard";function a(){(0,r.useEffect)((()=>{function e(e){"keydown"===e.type&&"Tab"===e.key&&document.body.classList.add(o),"mousedown"===e.type&&document.body.classList.remove(o)}return document.addEventListener("keydown",e),document.addEventListener("mousedown",e),()=>{document.body.classList.remove(o),document.removeEventListener("keydown",e),document.removeEventListener("mousedown",e)}}),[])}},57963:(e,n,t)=>{"use strict";t.d(n,{i:()=>s});var r=t(2784),o=t(31263);const a={desktop:"desktop",mobile:"mobile",ssr:"ssr"},i=996;function s(e){let{desktopBreakpoint:n=i}=void 0===e?{}:e;const[t,s]=(0,r.useState)((()=>"ssr"));return(0,r.useEffect)((()=>{function e(){s(function(e){if(!o.Z.canUseDOM)throw new Error("getWindowSize() should only be called after React hydration");return window.innerWidth>e?a.desktop:a.mobile}(n))}return e(),window.addEventListener("resize",e),()=>{window.removeEventListener("resize",e)}}),[n]),t}},90211:(e,n,t)=>{"use strict";t.d(n,{k:()=>r});const r={page:{blogListPage:"blog-list-page",blogPostPage:"blog-post-page",blogTagsListPage:"blog-tags-list-page",blogTagPostListPage:"blog-tags-post-list-page",docsDocPage:"docs-doc-page",docsTagsListPage:"docs-tags-list-page",docsTagDocListPage:"docs-tags-doc-list-page",mdxPage:"mdx-page"},wrapper:{main:"main-wrapper",blogPages:"blog-wrapper",docsPages:"docs-wrapper",mdxPages:"mdx-wrapper"},common:{editThisPage:"theme-edit-this-page",lastUpdated:"theme-last-updated",backToTopButton:"theme-back-to-top-button",codeBlock:"theme-code-block",admonition:"theme-admonition",unlistedBanner:"theme-unlisted-banner",admonitionType:e=>`theme-admonition-${e}`},layout:{},docs:{docVersionBanner:"theme-doc-version-banner",docVersionBadge:"theme-doc-version-badge",docBreadcrumbs:"theme-doc-breadcrumbs",docMarkdown:"theme-doc-markdown",docTocMobile:"theme-doc-toc-mobile",docTocDesktop:"theme-doc-toc-desktop",docFooter:"theme-doc-footer",docFooterTagsRow:"theme-doc-footer-tags-row",docFooterEditMetaRow:"theme-doc-footer-edit-meta-row",docSidebarContainer:"theme-doc-sidebar-container",docSidebarMenu:"theme-doc-sidebar-menu",docSidebarItemCategory:"theme-doc-sidebar-item-category",docSidebarItemLink:"theme-doc-sidebar-item-link",docSidebarItemCategoryLevel:e=>`theme-doc-sidebar-item-category-level-${e}`,docSidebarItemLinkLevel:e=>`theme-doc-sidebar-item-link-level-${e}`},blog:{blogFooterTagsRow:"theme-blog-footer-tags-row",blogFooterEditMetaRow:"theme-blog-footer-edit-meta-row"},pages:{pageFooterEditMetaRow:"theme-pages-footer-edit-meta-row"}}},80936:(e,n,t)=>{"use strict";function r(){return window.matchMedia("(prefers-reduced-motion: reduce)").matches}t.d(n,{n:()=>r})},38350:(e,n,t)=>{"use strict";t.d(n,{LM:()=>m,MN:()=>_,SN:()=>C,_F:()=>b,cE:()=>p,f:()=>x,jA:()=>y,lO:()=>S,oz:()=>E,s1:()=>k,vY:()=>P,xz:()=>f});var r=t(2784),o=t(7267),a=t(9702),i=t(27415),s=t(37949),l=t(95663),c=t(4228),d=t(42244),u=t(87661);const p=!!i._r;function f(e){const n=(0,l.E)();if(!e)return;const t=n.docs[e];if(!t)throw new Error(`no version doc found by id=${e}`);return t}function m(e){return"link"!==e.type||e.unlisted?"category"===e.type?function(e){if(e.href&&!e.linkUnlisted)return e.href;for(const n of e.items){const e=m(n);if(e)return e}}(e):void 0:e.href}function y(){const{pathname:e}=(0,o.TH)(),n=(0,c.V)();if(!n)throw new Error("Unexpected: cant find current sidebar in context");const t=w({sidebarItems:n.items,pathname:e,onlyCategories:!0}).slice(-1)[0];if(!t)throw new Error(`${e} is not associated with a category. useCurrentSidebarCategory() should only be used on category index pages.`);return t}const h=(e,n)=>void 0!==e&&(0,u.Mg)(e,n),g=(e,n)=>e.some((e=>b(e,n)));function b(e,n){return"link"===e.type?h(e.href,n):"category"===e.type&&(h(e.href,n)||g(e.items,n))}function v(e,n){switch(e.type){case"category":return b(e,n)||e.items.some((e=>v(e,n)));case"link":return!e.unlisted||b(e,n);default:return!0}}function x(e,n){return(0,r.useMemo)((()=>e.filter((e=>v(e,n)))),[e,n])}function w(e){let{sidebarItems:n,pathname:t,onlyCategories:r=!1}=e;const o=[];return function e(n){for(const a of n)if("category"===a.type&&((0,u.Mg)(a.href,t)||e(a.items))||"link"===a.type&&(0,u.Mg)(a.href,t)){return r&&"category"!==a.type||o.unshift(a),!0}return!1}(n),o}function k(){const e=(0,c.V)(),{pathname:n}=(0,o.TH)(),t=(0,i.gA)()?.pluginData.breadcrumbs;return!1!==t&&e?w({sidebarItems:e.items,pathname:n}):null}function S(e){const{activeVersion:n}=(0,i.Iw)(e),{preferredVersion:t}=(0,s.J)(e),o=(0,i.yW)(e);return(0,r.useMemo)((()=>(0,d.j)([n,t,o].filter(Boolean))),[n,t,o])}function E(e,n){const t=S(n);return(0,r.useMemo)((()=>{const n=t.flatMap((e=>e.sidebars?Object.entries(e.sidebars):[])),r=n.find((n=>n[0]===e));if(!r)throw new Error(`Can't find any sidebar with id "${e}" in version${t.length>1?"s":""} ${t.map((e=>e.name)).join(", ")}".\nAvailable sidebar ids are:\n- ${n.map((e=>e[0])).join("\n- ")}`);return r[1]}),[e,t])}function P(e,n){const t=S(n);return(0,r.useMemo)((()=>{const n=t.flatMap((e=>e.docs)),r=n.find((n=>n.id===e));if(!r){if(t.flatMap((e=>e.draftIds)).includes(e))return null;throw new Error(`Couldn't find any doc with id "${e}" in version${t.length>1?"s":""} "${t.map((e=>e.name)).join(", ")}".\nAvailable doc ids are:\n- ${(0,d.j)(n.map((e=>e.id))).join("\n- ")}`)}return r}),[e,t])}function C(e){let{route:n}=e;const t=(0,o.TH)(),r=(0,l.E)(),i=n.routes,s=i.find((e=>(0,o.LX)(t.pathname,e)));if(!s)return null;const c=s.sidebar,d=c?r.docsSidebars[c]:void 0;return{docElement:(0,a.H)(i),sidebarName:c,sidebarItems:d}}function _(e){return e.filter((e=>!("category"===e.type||"link"===e.type)||!!m(e)))}},32424:(e,n,t)=>{"use strict";t.d(n,{Rb:()=>i,_X:()=>l});var r=t(2784),o=t(7267),a=t(6335);function i(e){!function(e){const n=(0,o.k6)(),t=(0,a.zX)(e);(0,r.useEffect)((()=>n.block(((e,n)=>t(e,n)))),[n,t])}(((n,t)=>{if("POP"===t)return e(n,t)}))}function s(e){const n=(0,o.k6)();return(0,r.useSyncExternalStore)(n.listen,(()=>e(n)),(()=>e(n)))}function l(e){return s((n=>null===e?null:new URLSearchParams(n.location.search).get(e)))}},42244:(e,n,t)=>{"use strict";function r(e,n){return void 0===n&&(n=(e,n)=>e===n),e.filter(((t,r)=>e.findIndex((e=>n(e,t)))!==r))}function o(e){return Array.from(new Set(e))}t.d(n,{j:()=>o,l:()=>r})},50328:(e,n,t)=>{"use strict";t.d(n,{FG:()=>f,d:()=>u,VC:()=>m});var r=t(2784),o=t(40489),a=t(69854),i=t(71313);function s(){const e=r.useContext(i._);if(!e)throw new Error("Unexpected: no Docusaurus route context found");return e}var l=t(90077),c=t(37614);var d=t(52322);function u(e){let{title:n,description:t,keywords:r,image:o,children:i}=e;const s=function(e){const{siteConfig:n}=(0,c.Z)(),{title:t,titleDelimiter:r}=n;return e?.trim().length?`${e.trim()} ${r} ${t}`:t}(n),{withBaseUrl:u}=(0,l.Cg)(),p=o?u(o,{absolute:!0}):void 0;return(0,d.jsxs)(a.Z,{children:[n&&(0,d.jsx)("title",{children:s}),n&&(0,d.jsx)("meta",{property:"og:title",content:s}),t&&(0,d.jsx)("meta",{name:"description",content:t}),t&&(0,d.jsx)("meta",{property:"og:description",content:t}),r&&(0,d.jsx)("meta",{name:"keywords",content:Array.isArray(r)?r.join(","):r}),p&&(0,d.jsx)("meta",{property:"og:image",content:p}),p&&(0,d.jsx)("meta",{name:"twitter:image",content:p}),i]})}const p=r.createContext(void 0);function f(e){let{className:n,children:t}=e;const i=r.useContext(p),s=(0,o.Z)(i,n);return(0,d.jsxs)(p.Provider,{value:s,children:[(0,d.jsx)(a.Z,{children:(0,d.jsx)("html",{className:s})}),t]})}function m(e){let{children:n}=e;const t=s(),r=`plugin-${t.plugin.name.replace(/docusaurus-(?:plugin|theme)-(?:content-)?/gi,"")}`;const a=`plugin-id-${t.plugin.id}`;return(0,d.jsx)(f,{className:(0,o.Z)(r,a),children:n})}},6335:(e,n,t)=>{"use strict";t.d(n,{D9:()=>s,Qc:()=>d,Ql:()=>c,i6:()=>l,zX:()=>i});var r=t(2784),o=t(70164),a=t(52322);function i(e){const n=(0,r.useRef)(e);return(0,o.Z)((()=>{n.current=e}),[e]),(0,r.useCallback)((function(){return n.current(...arguments)}),[])}function s(e){const n=(0,r.useRef)();return(0,o.Z)((()=>{n.current=e})),n.current}class l extends Error{constructor(e,n){super(),this.name="ReactContextError",this.message=`Hook ${this.stack?.split("\n")[1]?.match(/at (?:\w+\.)?(?<name>\w+)/)?.groups.name??""} is called outside the <${e}>. ${n??""}`}}function c(e){const n=Object.entries(e);return n.sort(((e,n)=>e[0].localeCompare(n[0]))),(0,r.useMemo)((()=>e),n.flat())}function d(e){return n=>{let{children:t}=n;return(0,a.jsx)(a.Fragment,{children:e.reduceRight(((e,n)=>(0,a.jsx)(n,{children:e})),t)})}}},87661:(e,n,t)=>{"use strict";t.d(n,{Mg:()=>i,Ns:()=>s});var r=t(2784),o=t(19895),a=t(37614);function i(e,n){const t=e=>(!e||e.endsWith("/")?e:`${e}/`)?.toLowerCase();return t(e)===t(n)}function s(){const{baseUrl:e}=(0,a.Z)().siteConfig;return(0,r.useMemo)((()=>function(e){let{baseUrl:n,routes:t}=e;function r(e){return e.path===n&&!0===e.exact}function o(e){return e.path===n&&!e.exact}return function e(n){if(0===n.length)return;return n.find(r)||e(n.filter(o).flatMap((e=>e.routes??[])))}(t)}({routes:o.Z,baseUrl:e})),[e])}},24126:(e,n,t)=>{"use strict";t.d(n,{Ct:()=>y,OC:()=>d,RF:()=>f,o5:()=>m});var r=t(2784),o=t(31263),a=t(89741),i=t(70164),s=t(6335),l=t(52322);const c=r.createContext(void 0);function d(e){let{children:n}=e;const t=function(){const e=(0,r.useRef)(!0);return(0,r.useMemo)((()=>({scrollEventsEnabledRef:e,enableScrollEvents:()=>{e.current=!0},disableScrollEvents:()=>{e.current=!1}})),[])}();return(0,l.jsx)(c.Provider,{value:t,children:n})}function u(){const e=(0,r.useContext)(c);if(null==e)throw new s.i6("ScrollControllerProvider");return e}const p=()=>o.Z.canUseDOM?{scrollX:window.pageXOffset,scrollY:window.pageYOffset}:null;function f(e,n){void 0===n&&(n=[]);const{scrollEventsEnabledRef:t}=u(),o=(0,r.useRef)(p()),a=(0,s.zX)(e);(0,r.useEffect)((()=>{const e=()=>{if(!t.current)return;const e=p();a(e,o.current),o.current=e},n={passive:!0};return e(),window.addEventListener("scroll",e,n),()=>window.removeEventListener("scroll",e,n)}),[a,t,...n])}function m(){const e=u(),n=function(){const e=(0,r.useRef)({elem:null,top:0}),n=(0,r.useCallback)((n=>{e.current={elem:n,top:n.getBoundingClientRect().top}}),[]),t=(0,r.useCallback)((()=>{const{current:{elem:n,top:t}}=e;if(!n)return{restored:!1};const r=n.getBoundingClientRect().top-t;return r&&window.scrollBy({left:0,top:r}),e.current={elem:null,top:0},{restored:0!==r}}),[]);return(0,r.useMemo)((()=>({save:n,restore:t})),[t,n])}(),t=(0,r.useRef)(void 0),o=(0,r.useCallback)((r=>{n.save(r),e.disableScrollEvents(),t.current=()=>{const{restored:r}=n.restore();if(t.current=void 0,r){const n=()=>{e.enableScrollEvents(),window.removeEventListener("scroll",n)};window.addEventListener("scroll",n)}else e.enableScrollEvents()}}),[e,n]);return(0,i.Z)((()=>{queueMicrotask((()=>t.current?.()))})),{blockElementScrollPositionUntilNextRender:o}}function y(){const e=(0,r.useRef)(null),n=(0,a.Z)()&&"smooth"===getComputedStyle(document.documentElement).scrollBehavior;return{startScroll:t=>{e.current=n?function(e){return window.scrollTo({top:e,behavior:"smooth"}),()=>{}}(t):function(e){let n=null;const t=document.documentElement.scrollTop>e;return function r(){const o=document.documentElement.scrollTop;(t&&o>e||!t&&o<e)&&(n=requestAnimationFrame(r),window.scrollTo(0,Math.floor(.85*(o-e))+e))}(),()=>n&&cancelAnimationFrame(n)}(t)},cancelScroll:()=>e.current?.()}}},4925:(e,n,t)=>{"use strict";t.d(n,{HX:()=>r,os:()=>o});t(37614);const r="default";function o(e,n){return`docs-${e}-${n}`}},37611:(e,n,t)=>{"use strict";t.d(n,{WA:()=>d,Nk:()=>u});var r=t(2784);const o=JSON.parse('{"d":"localStorage","u":""}'),a=o.d;function i(e){let{key:n,oldValue:t,newValue:r,storage:o}=e;if(t===r)return;const a=document.createEvent("StorageEvent");a.initStorageEvent("storage",!1,!1,n,t,r,window.location.href,o),window.dispatchEvent(a)}function s(e){if(void 0===e&&(e=a),"undefined"==typeof window)throw new Error("Browser storage is not available on Node.js/Docusaurus SSR process.");if("none"===e)return null;try{return window[e]}catch(t){return n=t,l||(console.warn("Docusaurus browser storage is not available.\nPossible reasons: running Docusaurus in an iframe, in an incognito browser session, or using too strict browser privacy settings.",n),l=!0),null}var n}let l=!1;const c={get:()=>null,set:()=>{},del:()=>{},listen:()=>()=>{}};function d(e,n){const t=`${e}${o.u}`;if("undefined"==typeof window)return function(e){function n(){throw new Error(`Illegal storage API usage for storage key "${e}".\nDocusaurus storage APIs are not supposed to be called on the server-rendering process.\nPlease only call storage APIs in effects and event handlers.`)}return{get:n,set:n,del:n,listen:n}}(t);const r=s(n?.persistence);return null===r?c:{get:()=>{try{return r.getItem(t)}catch(e){return console.error(`Docusaurus storage error, can't get key=${t}`,e),null}},set:e=>{try{const n=r.getItem(t);r.setItem(t,e),i({key:t,oldValue:n,newValue:e,storage:r})}catch(n){console.error(`Docusaurus storage error, can't set ${t}=${e}`,n)}},del:()=>{try{const e=r.getItem(t);r.removeItem(t),i({key:t,oldValue:e,newValue:null,storage:r})}catch(e){console.error(`Docusaurus storage error, can't delete key=${t}`,e)}},listen:e=>{try{const n=n=>{n.storageArea===r&&n.key===t&&e(n)};return window.addEventListener("storage",n),()=>window.removeEventListener("storage",n)}catch(n){return console.error(`Docusaurus storage error, can't listen for changes of key=${t}`,n),()=>{}}}}}function u(e,n){const t=(0,r.useRef)((()=>null===e?c:d(e,n))).current(),o=(0,r.useCallback)((e=>"undefined"==typeof window?()=>{}:t.listen(e)),[t]);return[(0,r.useSyncExternalStore)(o,(()=>"undefined"==typeof window?null:t.get()),(()=>null)),t]}},55552:(e,n,t)=>{"use strict";t.d(n,{l:()=>i});var r=t(37614),o=t(7267),a=t(60958);function i(){const{siteConfig:{baseUrl:e,url:n,trailingSlash:t},i18n:{defaultLocale:i,currentLocale:s}}=(0,r.Z)(),{pathname:l}=(0,o.TH)(),c=(0,a.applyTrailingSlash)(l,{trailingSlash:t,baseUrl:e}),d=s===i?e:e.replace(`/${s}/`,"/"),u=c.replace(e,"");return{createUrl:function(e){let{locale:t,fullyQualified:r}=e;return`${r?n:""}${function(e){return e===i?`${d}`:`${d}${e}/`}(t)}${u}`}}}},12105:(e,n,t)=>{"use strict";t.d(n,{S:()=>i});var r=t(2784),o=t(7267),a=t(6335);function i(e){const n=(0,o.TH)(),t=(0,a.D9)(n),i=(0,a.zX)(e);(0,r.useEffect)((()=>{t&&n!==t&&i({location:n,previousLocation:t})}),[i,n,t])}},97683:(e,n,t)=>{"use strict";t.d(n,{L:()=>o});var r=t(37614);function o(){return(0,r.Z)().siteConfig.themeConfig}},71025:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.removeTrailingSlash=n.addLeadingSlash=n.addTrailingSlash=void 0;const r=t(90599);function o(e){return e.endsWith("/")?e:`${e}/`}function a(e){return(0,r.removeSuffix)(e,"/")}n.addTrailingSlash=o,n.default=function(e,n){const{trailingSlash:t,baseUrl:r}=n;if(e.startsWith("#"))return e;if(void 0===t)return e;const[i]=e.split(/[#?]/),s="/"===i||i===r?i:(l=i,t?o(l):a(l));var l;return e.replace(i,s)},n.addLeadingSlash=function(e){return(0,r.addPrefix)(e,"/")},n.removeTrailingSlash=a},90415:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.getErrorCausalChain=void 0,n.getErrorCausalChain=function e(n){return n.cause?[n,...e(n.cause)]:[n]}},60958:function(e,n,t){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.getErrorCausalChain=n.removePrefix=n.addSuffix=n.removeSuffix=n.addPrefix=n.removeTrailingSlash=n.addLeadingSlash=n.addTrailingSlash=n.applyTrailingSlash=n.blogPostContainerID=void 0,n.blogPostContainerID="__blog-post-container";var o=t(71025);Object.defineProperty(n,"applyTrailingSlash",{enumerable:!0,get:function(){return r(o).default}}),Object.defineProperty(n,"addTrailingSlash",{enumerable:!0,get:function(){return o.addTrailingSlash}}),Object.defineProperty(n,"addLeadingSlash",{enumerable:!0,get:function(){return o.addLeadingSlash}}),Object.defineProperty(n,"removeTrailingSlash",{enumerable:!0,get:function(){return o.removeTrailingSlash}});var a=t(90599);Object.defineProperty(n,"addPrefix",{enumerable:!0,get:function(){return a.addPrefix}}),Object.defineProperty(n,"removeSuffix",{enumerable:!0,get:function(){return a.removeSuffix}}),Object.defineProperty(n,"addSuffix",{enumerable:!0,get:function(){return a.addSuffix}}),Object.defineProperty(n,"removePrefix",{enumerable:!0,get:function(){return a.removePrefix}});var i=t(90415);Object.defineProperty(n,"getErrorCausalChain",{enumerable:!0,get:function(){return i.getErrorCausalChain}})},90599:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.removePrefix=n.addSuffix=n.removeSuffix=n.addPrefix=void 0,n.addPrefix=function(e,n){return e.startsWith(n)?e:`${n}${e}`},n.removeSuffix=function(e,n){return""===n?e:e.endsWith(n)?e.slice(0,-n.length):e},n.addSuffix=function(e,n){return e.endsWith(n)?e:`${e}${n}`},n.removePrefix=function(e,n){return e.startsWith(n)?e.slice(n.length):e}},19895:(e,n,t)=>{"use strict";t.d(n,{Z:()=>p});t(2784);var r=t(89028),o=t.n(r),a=t(16887);const i={"0098a75a":[()=>Promise.all([t.e(532),t.e(8592),t.e(2061)]).then(t.bind(t,49228)),"@site/docs/sketches/prototype.mdx",49228],"00be781a":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(3763)]).then(t.bind(t,65108)),"@site/docs/implementation-guides/pointers/testing/deployment.mdx",65108],"06923f2b":[()=>Promise.all([t.e(532),t.e(8592),t.e(1649)]).then(t.bind(t,37306)),"@site/spec/pointer/concepts.mdx",37306],"06d87cbd":[()=>Promise.all([t.e(8592),t.e(3818)]).then(t.bind(t,44261)),"@site/docs/goals.mdx",44261],"06f6442f":[()=>Promise.all([t.e(532),t.e(8592),t.e(5097)]).then(t.bind(t,60740)),"@site/spec/pointer/region/location/storage.mdx",60740],"0c6b334b":[()=>Promise.all([t.e(532),t.e(8592),t.e(2418)]).then(t.bind(t,5958)),"@site/spec/pointer/pointer.mdx",5958],"0d3f9d17":[()=>Promise.all([t.e(532),t.e(8592),t.e(799)]).then(t.bind(t,7737)),"@site/spec/type/elementary/bytes.mdx",7737],"1154c93e":[()=>Promise.all([t.e(532),t.e(8592),t.e(1887)]).then(t.bind(t,62903)),"@site/spec/type/complex/tuple.mdx",62903],"14eb3368":[()=>Promise.all([t.e(532),t.e(9817)]).then(t.bind(t,45609)),"@theme/DocCategoryGeneratedIndexPage",45609],17896441:[()=>Promise.all([t.e(532),t.e(8592),t.e(3879),t.e(7918)]).then(t.bind(t,49948)),"@theme/DocItem",49948],18891827:[()=>Promise.all([t.e(8592),t.e(9081)]).then(t.bind(t,56731)),"@site/docs/overview.mdx",56731],"1917520d":[()=>Promise.all([t.e(532),t.e(8592),t.e(5722),t.e(1571)]).then(t.bind(t,99156)),"@site/spec/type/base.mdx",99156],"19c068a5":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(3904)]).then(t.bind(t,71613)),"@site/docs/implementation-guides/pointers/dereference-logic/dereference-logic.mdx",71613],"1df93b7f":[()=>Promise.all([t.e(532),t.e(3237)]).then(t.bind(t,47483)),"@site/src/pages/index.tsx",47483],"1f391b9e":[()=>Promise.all([t.e(532),t.e(8592),t.e(3879),t.e(3085)]).then(t.bind(t,48398)),"@theme/MDXPage",48398],"24164d9f":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(7317)]).then(t.bind(t,93100)),"@site/docs/implementation-guides/pointers/testing/jest.mdx",93100],"26210d4e":[()=>Promise.all([t.e(532),t.e(8592),t.e(8015)]).then(t.bind(t,81037)),"@site/spec/type/elementary/address.mdx",81037],"26adb6ed":[()=>Promise.all([t.e(532),t.e(8592),t.e(2343)]).then(t.bind(t,34903)),"@site/spec/type/complex/alias.mdx",34903],"27fc136d":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(9741)]).then(t.bind(t,98628)),"@site/docs/implementation-guides/pointers/testing/test-cases/uint256-array-memory.mdx",98628],"288a3aad":[()=>Promise.all([t.e(532),t.e(8592),t.e(2384)]).then(t.bind(t,70442)),"@site/spec/type/complex/function.mdx",70442],"2d54960a":[()=>t.e(4404).then(t.t.bind(t,14765,19)),"@generated/docusaurus-plugin-content-docs/spec/p/format-spec-category-complex-types-90c.json",14765],"2d5baa33":[()=>Promise.all([t.e(8592),t.e(5152)]).then(t.bind(t,9922)),"@site/docs/sketches/layout.mdx",9922],"2fe7c366":[()=>t.e(6924).then(t.t.bind(t,62930,19)),"@generated/docusaurus-plugin-content-docs/default/p/format-docs-category-prototype-sketches-eac.json",62930],"324b62c5":[()=>Promise.all([t.e(532),t.e(8592),t.e(9057)]).then(t.bind(t,26043)),"@site/spec/pointer/collection/collection.mdx",26043],"34a1fa87":[()=>Promise.all([t.e(532),t.e(8592),t.e(5340)]).then(t.bind(t,68443)),"@site/spec/pointer/region/location/calldata.mdx",68443],"39033cdf":[()=>Promise.all([t.e(532),t.e(8592),t.e(9874)]).then(t.bind(t,83459)),"@site/spec/type/complex/array.mdx",83459],"3bef66bf":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(4963)]).then(t.bind(t,23349)),"@site/docs/implementation-guides/pointers/types/pointer-types.mdx",23349],"3c31ec3b":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(95)]).then(t.bind(t,73488)),"@site/docs/implementation-guides/pointers/testing/blockchain-simulation.mdx",73488],"3d06257c":[()=>Promise.all([t.e(532),t.e(8592),t.e(2002)]).then(t.bind(t,48965)),"@site/spec/program/context/variables.mdx",48965],"41f6ea55":[()=>Promise.all([t.e(532),t.e(8592),t.e(7278)]).then(t.bind(t,40715)),"@site/spec/pointer/region/base.mdx",40715],"468cb0dd":[()=>Promise.all([t.e(532),t.e(8592),t.e(2156)]).then(t.bind(t,58464)),"@site/spec/program/program.mdx",58464],"47f40ad3":[()=>Promise.all([t.e(532),t.e(8592),t.e(3362)]).then(t.bind(t,89373)),"@site/spec/pointer/region/scheme/segment.mdx",89373],"4f48a76f":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(2333)]).then(t.bind(t,7092)),"@site/docs/implementation-guides/pointers/testing/test-cases/struct-storage.mdx",7092],"4ffa8edd":[()=>Promise.all([t.e(532),t.e(8592),t.e(7091)]).then(t.bind(t,54380)),"@site/spec/pointer/region/location/stack.mdx",54380],"50fa7aa7":[()=>Promise.all([t.e(532),t.e(8592),t.e(1422)]).then(t.bind(t,37088)),"@site/spec/type/elementary/string.mdx",37088],55366030:[()=>Promise.all([t.e(532),t.e(8592),t.e(5007)]).then(t.bind(t,5062)),"@site/spec/pointer/region/scheme/slice.mdx",5062],"57805cd5":[()=>Promise.all([t.e(532),t.e(8592),t.e(6218)]).then(t.bind(t,29726)),"@site/spec/pointer/region/region.mdx",29726],"5c90228f":[()=>Promise.all([t.e(532),t.e(8592),t.e(8822)]).then(t.bind(t,54243)),"@site/spec/materials/source.mdx",54243],"5e95c892":[()=>t.e(9661).then(t.bind(t,44629)),"@theme/DocsRoot",44629],"5e9f5e1a":[()=>Promise.resolve().then(t.bind(t,36809)),"@generated/docusaurus.config",36809],"5fa83de1":[()=>Promise.all([t.e(532),t.e(8592),t.e(5642)]).then(t.bind(t,19327)),"@site/spec/type/overview.mdx",19327],"5fb36c82":[()=>Promise.all([t.e(532),t.e(8592),t.e(5438)]).then(t.bind(t,20116)),"@site/spec/pointer/region/location/code.mdx",20116],"60b8d43b":[()=>Promise.all([t.e(8592),t.e(7219)]).then(t.bind(t,1067)),"@site/spec/pointer/overview.mdx",1067],"6397ae1b":[()=>Promise.all([t.e(532),t.e(8592),t.e(5910)]).then(t.bind(t,63860)),"@site/spec/pointer/collection/list.mdx",63860],"658aa8be":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(997)]).then(t.bind(t,91135)),"@site/docs/implementation-guides/pointers/testing/test-cases/test-cases.mdx",91135],"65b9696e":[()=>t.e(6037).then(t.t.bind(t,94818,19)),"@generated/docusaurus-plugin-content-docs/spec/p/format-spec-e89.json",94818],"6656ad10":[()=>t.e(8623).then(t.t.bind(t,17814,19)),"@generated/docusaurus-plugin-content-docs/spec/p/format-spec-category-elementary-types-26a.json",17814],"6bb5505e":[()=>Promise.all([t.e(532),t.e(8592),t.e(8797)]).then(t.bind(t,52894)),"@site/spec/pointer/collection/scope.mdx",52894],"6dcd11e3":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(8107)]).then(t.bind(t,12162)),"@site/docs/implementation-guides/pointers/types/cursors.mdx",12162],"6e8ff3aa":[()=>Promise.all([t.e(532),t.e(8592),t.e(2093)]).then(t.bind(t,64856)),"@site/spec/type/type.mdx",64856],"7168108a":[()=>Promise.all([t.e(532),t.e(8592),t.e(4427)]).then(t.bind(t,66673)),"@site/spec/pointer/region/location/transient.mdx",66673],"73e8c510":[()=>Promise.all([t.e(532),t.e(8592),t.e(8605)]).then(t.bind(t,9179)),"@site/spec/materials/id.mdx",9179],"74f0bff4":[()=>Promise.all([t.e(532),t.e(8592),t.e(3e3)]).then(t.bind(t,49678)),"@site/spec/type/elementary/int.mdx",49678],"805f8f48":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(5068)]).then(t.bind(t,18153)),"@site/docs/implementation-guides/pointers/testing/example-pointers.mdx",18153],"87bcd65e":[()=>Promise.all([t.e(532),t.e(8592),t.e(488)]).then(t.bind(t,62237)),"@site/spec/type/elementary/fixed.mdx",62237],"8aa384a9":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(1583)]).then(t.bind(t,18290)),"@site/docs/implementation-guides/pointers/dereference-logic/making-regions-concrete.mdx",18290],"8e037750":[()=>Promise.all([t.e(532),t.e(8592),t.e(7033)]).then(t.bind(t,95491)),"@site/spec/type/concepts.mdx",95491],"96cb052f":[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(9076)]).then(t.bind(t,46543)),"@site/docs/implementation-guides/pointers/testing/test-cases/string-storage.mdx",46543],"9999236a":[()=>Promise.all([t.e(532),t.e(8592),t.e(8320)]).then(t.bind(t,36543)),"@site/spec/pointer/template.mdx",36543],"9ac2b418":[()=>Promise.all([t.e(532),t.e(8592),t.e(351)]).then(t.bind(t,64421)),"@site/spec/type/complex/struct.mdx",64421],"9c15981d":[()=>Promise.all([t.e(8592),t.e(1236)]).then(t.bind(t,25157)),"@site/spec/program/concepts.mdx",25157],"9c6e1aee":[()=>Promise.all([t.e(532),t.e(8592),t.e(882)]).then(t.bind(t,31745)),"@site/spec/pointer/collection/conditional.mdx",31745],"9e15fc25":[()=>Promise.all([t.e(532),t.e(8592),t.e(554)]).then(t.bind(t,12811)),"@site/docs/known-challenges.mdx",12811],a36bb8b3:[()=>Promise.all([t.e(532),t.e(8592),t.e(1081)]).then(t.bind(t,11375)),"@site/spec/program/context/context.mdx",11375],a6fccf34:[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(1724)]).then(t.bind(t,18206)),"@site/docs/implementation-guides/pointers/reading-from-regions.mdx",18206],a7456010:[()=>t.e(5980).then(t.t.bind(t,79365,19)),"@generated/docusaurus-plugin-content-pages/default/__plugin.json",79365],a7bd4aaa:[()=>t.e(8518).then(t.bind(t,42582)),"@theme/DocVersionRoot",42582],a94703ab:[()=>Promise.all([t.e(532),t.e(4368)]).then(t.bind(t,91999)),"@theme/DocRoot",91999],a9779a33:[()=>Promise.all([t.e(8592),t.e(1178)]).then(t.bind(t,82221)),"@site/spec/data/overview.mdx",82221],aba21aa0:[()=>t.e(3629).then(t.t.bind(t,41765,19)),"@generated/docusaurus-plugin-content-docs/default/__plugin.json",41765],ac92a050:[()=>Promise.all([t.e(532),t.e(8592),t.e(4402)]).then(t.bind(t,28178)),"@site/spec/program/instruction.mdx",28178],ad7f7207:[()=>Promise.all([t.e(8592),t.e(2112)]).then(t.bind(t,56379)),"@site/spec/materials/overview.mdx",56379],aeecf7cf:[()=>Promise.all([t.e(532),t.e(8592),t.e(5815)]).then(t.bind(t,8492)),"@site/spec/type/elementary/enum.mdx",8492],b27771bd:[()=>Promise.all([t.e(532),t.e(8592),t.e(3427)]).then(t.bind(t,72363)),"@site/spec/type/complex/mapping.mdx",72363],b702b8d4:[()=>Promise.all([t.e(532),t.e(8592),t.e(6424)]).then(t.bind(t,9187)),"@site/spec/pointer/region/location/memory.mdx",9187],b70fd545:[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(1685)]).then(t.bind(t,41374)),"@site/docs/implementation-guides/pointers/testing/compilation.mdx",41374],b8b25df5:[()=>Promise.all([t.e(532),t.e(8592),t.e(6040)]).then(t.bind(t,69256)),"@site/spec/program/context/code.mdx",69256],be5c8d03:[()=>Promise.all([t.e(532),t.e(8592),t.e(5791)]).then(t.bind(t,84860)),"@site/spec/type/elementary/contract.mdx",84860],c26eb700:[()=>Promise.all([t.e(532),t.e(8592),t.e(6003)]).then(t.bind(t,92733)),"@site/spec/materials/compilation.mdx",92733],c3e4b2a1:[()=>Promise.all([t.e(532),t.e(6477)]).then(t.bind(t,52517)),"@site/src/pages/home/index.tsx",52517],c47862a6:[()=>Promise.all([t.e(532),t.e(8592),t.e(4567)]).then(t.bind(t,62978)),"@site/spec/type/elementary/uint.mdx",62978],c73c1d3a:[()=>Promise.all([t.e(532),t.e(8592),t.e(556)]).then(t.bind(t,32587)),"@site/spec/materials/source-range.mdx",32587],ca0d25b7:[()=>Promise.all([t.e(532),t.e(8592),t.e(2232)]).then(t.bind(t,77216)),"@site/spec/data/hex.mdx",77216],cb7b1c3b:[()=>Promise.all([t.e(8592),t.e(8263)]).then(t.bind(t,61634)),"@site/docs/implementation-guides/pointers/types/types.mdx",61634],ccf56d1d:[()=>Promise.all([t.e(532),t.e(8592),t.e(9312)]).then(t.bind(t,39843)),"@site/spec/pointer/region/location/returndata.mdx",39843],ce1d6aaa:[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(8470)]).then(t.bind(t,72052)),"@site/docs/implementation-guides/pointers/evaluating-expressions.mdx",72052],d37c0134:[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(6338)]).then(t.bind(t,37374)),"@site/docs/implementation-guides/pointers/dereference-logic/generating-regions.mdx",37374],d3f864f6:[()=>t.e(2095).then(t.t.bind(t,98870,19)),"@generated/docusaurus-plugin-content-docs/default/p/format-docs-d4e.json",98870],d6a63adc:[()=>Promise.all([t.e(8592),t.e(6454)]).then(t.bind(t,1594)),"@site/spec/overview.mdx",1594],dc0c7504:[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(7626)]).then(t.bind(t,33552)),"@site/docs/implementation-guides/pointers/types/data-and-machines.mdx",33552],dcaebccf:[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(2592)]).then(t.bind(t,6473)),"@site/docs/implementation-guides/pointers/pointers.mdx",6473],ddfabb78:[()=>Promise.all([t.e(8592),t.e(6852)]).then(t.bind(t,46708)),"@site/docs/implementation-guides/implementation-guides.mdx",46708],dfd51a51:[()=>t.e(4035).then(t.t.bind(t,75320,19)),"@generated/docusaurus-plugin-content-docs/spec/__plugin.json",75320],e793cb8b:[()=>Promise.all([t.e(8592),t.e(1600)]).then(t.bind(t,99904)),"@site/docs/implementation-guides/pointers/testing/testing.mdx",99904],e8328cbe:[()=>Promise.all([t.e(532),t.e(8592),t.e(5491)]).then(t.bind(t,1380)),"@site/spec/pointer/collection/group.mdx",1380],e856c143:[()=>Promise.all([t.e(8592),t.e(683)]).then(t.bind(t,94647)),"@site/src/pages/status.mdx",94647],ede070c3:[()=>Promise.all([t.e(532),t.e(8592),t.e(1018)]).then(t.bind(t,96749)),"@site/spec/data/unsigned.mdx",96749],ee3e0fff:[()=>Promise.all([t.e(532),t.e(8592),t.e(9437)]).then(t.bind(t,5641)),"@site/spec/pointer/expression.mdx",5641],ee64d9a0:[()=>Promise.all([t.e(8592),t.e(7316)]).then(t.bind(t,80046)),"@site/spec/program/overview.mdx",80046],f210e6d3:[()=>Promise.all([t.e(532),t.e(8592),t.e(1512)]).then(t.bind(t,32562)),"@site/spec/type/elementary/bool.mdx",32562],f2745fbe:[()=>Promise.all([t.e(532),t.e(8592),t.e(5548)]).then(t.bind(t,11786)),"@site/spec/type/elementary/ufixed.mdx",11786],f577767d:[()=>Promise.all([t.e(532),t.e(8592),t.e(477),t.e(763)]).then(t.bind(t,65045)),"@site/docs/implementation-guides/pointers/testing/machine-observation.mdx",65045]};var s=t(52322);function l(e){let{error:n,retry:t,pastDelay:r}=e;return n?(0,s.jsxs)("div",{style:{textAlign:"center",color:"#fff",backgroundColor:"#fa383e",borderColor:"#fa383e",borderStyle:"solid",borderRadius:"0.25rem",borderWidth:"1px",boxSizing:"border-box",display:"block",padding:"1rem",flex:"0 0 50%",marginLeft:"25%",marginRight:"25%",marginTop:"5rem",maxWidth:"50%",width:"100%"},children:[(0,s.jsx)("p",{children:String(n)}),(0,s.jsx)("div",{children:(0,s.jsx)("button",{type:"button",onClick:t,children:"Retry"})})]}):r?(0,s.jsx)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",height:"100vh"},children:(0,s.jsx)("svg",{id:"loader",style:{width:128,height:110,position:"absolute",top:"calc(100vh - 64%)"},viewBox:"0 0 45 45",xmlns:"http://www.w3.org/2000/svg",stroke:"#61dafb",children:(0,s.jsxs)("g",{fill:"none",fillRule:"evenodd",transform:"translate(1 1)",strokeWidth:"2",children:[(0,s.jsxs)("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0",children:[(0,s.jsx)("animate",{attributeName:"r",begin:"1.5s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),(0,s.jsx)("animate",{attributeName:"stroke-opacity",begin:"1.5s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),(0,s.jsx)("animate",{attributeName:"stroke-width",begin:"1.5s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})]}),(0,s.jsxs)("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0",children:[(0,s.jsx)("animate",{attributeName:"r",begin:"3s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),(0,s.jsx)("animate",{attributeName:"stroke-opacity",begin:"3s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),(0,s.jsx)("animate",{attributeName:"stroke-width",begin:"3s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})]}),(0,s.jsx)("circle",{cx:"22",cy:"22",r:"8",children:(0,s.jsx)("animate",{attributeName:"r",begin:"0s",dur:"1.5s",values:"6;1;2;3;4;5;6",calcMode:"linear",repeatCount:"indefinite"})})]})})}):null}var c=t(20805),d=t(71313);function u(e,n){if("*"===e)return o()({loading:l,loader:()=>t.e(12).then(t.bind(t,30012)),modules:["@theme/NotFound"],webpack:()=>[30012],render(e,n){const t=e.default;return(0,s.jsx)(d.z,{value:{plugin:{name:"native",id:"default"}},children:(0,s.jsx)(t,{...n})})}});const r=a[`${e}-${n}`],u={},p=[],f=[],m=(0,c.Z)(r);return Object.entries(m).forEach((e=>{let[n,t]=e;const r=i[t];r&&(u[n]=r[0],p.push(r[1]),f.push(r[2]))})),o().Map({loading:l,loader:u,modules:p,webpack:()=>f,render(n,t){const o=JSON.parse(JSON.stringify(r));Object.entries(n).forEach((n=>{let[t,r]=n;const a=r.default;if(!a)throw new Error(`The page component at ${e} doesn't have a default export. This makes it impossible to render anything. Consider default-exporting a React component.`);"object"!=typeof a&&"function"!=typeof a||Object.keys(r).filter((e=>"default"!==e)).forEach((e=>{a[e]=r[e]}));let i=o;const s=t.split(".");s.slice(0,-1).forEach((e=>{i=i[e]})),i[s[s.length-1]]=a}));const a=o.__comp;delete o.__comp;const i=o.__context;delete o.__context;const l=o.__props;return delete o.__props,(0,s.jsx)(d.z,{value:i,children:(0,s.jsx)(a,{...o,...l,...t})})}})}const p=[{path:"/format/home/",component:u("/format/home/","8f8"),exact:!0},{path:"/format/status",component:u("/format/status","d6d"),exact:!0},{path:"/format/docs",component:u("/format/docs","be4"),routes:[{path:"/format/docs",component:u("/format/docs","267"),routes:[{path:"/format/docs",component:u("/format/docs","68e"),routes:[{path:"/format/docs/category/prototype-sketches",component:u("/format/docs/category/prototype-sketches","809"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/goals",component:u("/format/docs/goals","0bb"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/",component:u("/format/docs/implementation-guides/","66d"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/",component:u("/format/docs/implementation-guides/pointers/","5f2"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/dereference-logic/",component:u("/format/docs/implementation-guides/pointers/dereference-logic/","cb8"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/dereference-logic/generating-regions",component:u("/format/docs/implementation-guides/pointers/dereference-logic/generating-regions","8e9"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/dereference-logic/making-regions-concrete",component:u("/format/docs/implementation-guides/pointers/dereference-logic/making-regions-concrete","1e7"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/evaluating-expressions",component:u("/format/docs/implementation-guides/pointers/evaluating-expressions","ed9"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/reading-from-regions",component:u("/format/docs/implementation-guides/pointers/reading-from-regions","109"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/",component:u("/format/docs/implementation-guides/pointers/testing/","5cd"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/blockchain-simulation",component:u("/format/docs/implementation-guides/pointers/testing/blockchain-simulation","950"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/compilation",component:u("/format/docs/implementation-guides/pointers/testing/compilation","07c"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/deployment",component:u("/format/docs/implementation-guides/pointers/testing/deployment","9b5"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/example-pointers",component:u("/format/docs/implementation-guides/pointers/testing/example-pointers","4cc"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/jest",component:u("/format/docs/implementation-guides/pointers/testing/jest","1f4"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/machine-observation",component:u("/format/docs/implementation-guides/pointers/testing/machine-observation","a54"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/test-cases/",component:u("/format/docs/implementation-guides/pointers/testing/test-cases/","834"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/test-cases/string-storage",component:u("/format/docs/implementation-guides/pointers/testing/test-cases/string-storage","2e2"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/test-cases/struct-storage",component:u("/format/docs/implementation-guides/pointers/testing/test-cases/struct-storage","5d7"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/testing/test-cases/uint256-array-memory",component:u("/format/docs/implementation-guides/pointers/testing/test-cases/uint256-array-memory","fc6"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/types/",component:u("/format/docs/implementation-guides/pointers/types/","e07"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/types/cursors",component:u("/format/docs/implementation-guides/pointers/types/cursors","6a3"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/types/data-and-machines",component:u("/format/docs/implementation-guides/pointers/types/data-and-machines","34a"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/implementation-guides/pointers/types/pointer-types",component:u("/format/docs/implementation-guides/pointers/types/pointer-types","fee"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/known-challenges",component:u("/format/docs/known-challenges","5aa"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/overview",component:u("/format/docs/overview","ff5"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/sketches/layout",component:u("/format/docs/sketches/layout","926"),exact:!0,sidebar:"docsSidebar"},{path:"/format/docs/sketches/prototype",component:u("/format/docs/sketches/prototype","9b3"),exact:!0,sidebar:"docsSidebar"}]}]}]},{path:"/format/spec",component:u("/format/spec","57c"),routes:[{path:"/format/spec",component:u("/format/spec","7be"),routes:[{path:"/format/spec",component:u("/format/spec","aff"),routes:[{path:"/format/spec/category/complex-types",component:u("/format/spec/category/complex-types","8c2"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/category/elementary-types",component:u("/format/spec/category/elementary-types","ed4"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/data/hex",component:u("/format/spec/data/hex","e36"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/data/overview",component:u("/format/spec/data/overview","95a"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/data/unsigned",component:u("/format/spec/data/unsigned","125"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/materials/compilation",component:u("/format/spec/materials/compilation","d27"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/materials/id",component:u("/format/spec/materials/id","672"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/materials/overview",component:u("/format/spec/materials/overview","1ec"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/materials/source",component:u("/format/spec/materials/source","73e"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/materials/source-range",component:u("/format/spec/materials/source-range","1d1"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/overview",component:u("/format/spec/overview","d74"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/",component:u("/format/spec/pointer/","ac2"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/collection/",component:u("/format/spec/pointer/collection/","204"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/collection/conditional",component:u("/format/spec/pointer/collection/conditional","f89"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/collection/group",component:u("/format/spec/pointer/collection/group","60f"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/collection/list",component:u("/format/spec/pointer/collection/list","e12"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/collection/scope",component:u("/format/spec/pointer/collection/scope","6af"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/concepts",component:u("/format/spec/pointer/concepts","4f7"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/expression",component:u("/format/spec/pointer/expression","38a"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/overview",component:u("/format/spec/pointer/overview","20e"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/",component:u("/format/spec/pointer/region/","a75"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/base",component:u("/format/spec/pointer/region/base","2ed"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/location/calldata",component:u("/format/spec/pointer/region/location/calldata","352"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/location/code",component:u("/format/spec/pointer/region/location/code","bde"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/location/memory",component:u("/format/spec/pointer/region/location/memory","d08"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/location/returndata",component:u("/format/spec/pointer/region/location/returndata","424"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/location/stack",component:u("/format/spec/pointer/region/location/stack","08f"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/location/storage",component:u("/format/spec/pointer/region/location/storage","a40"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/location/transient",component:u("/format/spec/pointer/region/location/transient","3e8"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/scheme/segment",component:u("/format/spec/pointer/region/scheme/segment","acf"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/region/scheme/slice",component:u("/format/spec/pointer/region/scheme/slice","481"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/pointer/template",component:u("/format/spec/pointer/template","fec"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/program/",component:u("/format/spec/program/","0a6"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/program/concepts",component:u("/format/spec/program/concepts","fb8"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/program/context/",component:u("/format/spec/program/context/","223"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/program/context/code",component:u("/format/spec/program/context/code","782"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/program/context/variables",component:u("/format/spec/program/context/variables","47f"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/program/instruction",component:u("/format/spec/program/instruction","a58"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/program/overview",component:u("/format/spec/program/overview","876"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/",component:u("/format/spec/type/","ff8"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/base",component:u("/format/spec/type/base","663"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/complex/alias",component:u("/format/spec/type/complex/alias","4d3"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/complex/array",component:u("/format/spec/type/complex/array","3bd"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/complex/function",component:u("/format/spec/type/complex/function","51d"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/complex/mapping",component:u("/format/spec/type/complex/mapping","23e"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/complex/struct",component:u("/format/spec/type/complex/struct","75b"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/complex/tuple",component:u("/format/spec/type/complex/tuple","c0b"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/concepts",component:u("/format/spec/type/concepts","e7a"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/elementary/address",component:u("/format/spec/type/elementary/address","5cc"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/elementary/bool",component:u("/format/spec/type/elementary/bool","fc0"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/elementary/bytes",component:u("/format/spec/type/elementary/bytes","2b6"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/elementary/contract",component:u("/format/spec/type/elementary/contract","571"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/elementary/enum",component:u("/format/spec/type/elementary/enum","cdd"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/elementary/fixed",component:u("/format/spec/type/elementary/fixed","3d7"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/elementary/int",component:u("/format/spec/type/elementary/int","09e"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/elementary/string",component:u("/format/spec/type/elementary/string","c22"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/elementary/ufixed",component:u("/format/spec/type/elementary/ufixed","c61"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/elementary/uint",component:u("/format/spec/type/elementary/uint","6ea"),exact:!0,sidebar:"docsSidebar"},{path:"/format/spec/type/overview",component:u("/format/spec/type/overview","101"),exact:!0,sidebar:"docsSidebar"}]}]}]},{path:"/format/",component:u("/format/","610"),exact:!0},{path:"*",component:u("*")}]},14410:(e,n,t)=>{"use strict";t.d(n,{lX:()=>x,q_:()=>C,ob:()=>f,PP:()=>j,Ep:()=>p});var r=t(7896);function o(e){return"/"===e.charAt(0)}function a(e,n){for(var t=n,r=t+1,o=e.length;r<o;t+=1,r+=1)e[t]=e[r];e.pop()}const i=function(e,n){void 0===n&&(n="");var t,r=e&&e.split("/")||[],i=n&&n.split("/")||[],s=e&&o(e),l=n&&o(n),c=s||l;if(e&&o(e)?i=r:r.length&&(i.pop(),i=i.concat(r)),!i.length)return"/";if(i.length){var d=i[i.length-1];t="."===d||".."===d||""===d}else t=!1;for(var u=0,p=i.length;p>=0;p--){var f=i[p];"."===f?a(i,p):".."===f?(a(i,p),u++):u&&(a(i,p),u--)}if(!c)for(;u--;u)i.unshift("..");!c||""===i[0]||i[0]&&o(i[0])||i.unshift("");var m=i.join("/");return t&&"/"!==m.substr(-1)&&(m+="/"),m};var s=t(10362);function l(e){return"/"===e.charAt(0)?e:"/"+e}function c(e){return"/"===e.charAt(0)?e.substr(1):e}function d(e,n){return function(e,n){return 0===e.toLowerCase().indexOf(n.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(n.length))}(e,n)?e.substr(n.length):e}function u(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function p(e){var n=e.pathname,t=e.search,r=e.hash,o=n||"/";return t&&"?"!==t&&(o+="?"===t.charAt(0)?t:"?"+t),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function f(e,n,t,o){var a;"string"==typeof e?(a=function(e){var n=e||"/",t="",r="",o=n.indexOf("#");-1!==o&&(r=n.substr(o),n=n.substr(0,o));var a=n.indexOf("?");return-1!==a&&(t=n.substr(a),n=n.substr(0,a)),{pathname:n,search:"?"===t?"":t,hash:"#"===r?"":r}}(e),a.state=n):(void 0===(a=(0,r.Z)({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==n&&void 0===a.state&&(a.state=n));try{a.pathname=decodeURI(a.pathname)}catch(s){throw s instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):s}return t&&(a.key=t),o?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=i(a.pathname,o.pathname)):a.pathname=o.pathname:a.pathname||(a.pathname="/"),a}function m(){var e=null;var n=[];return{setPrompt:function(n){return e=n,function(){e===n&&(e=null)}},confirmTransitionTo:function(n,t,r,o){if(null!=e){var a="function"==typeof e?e(n,t):e;"string"==typeof a?"function"==typeof r?r(a,o):o(!0):o(!1!==a)}else o(!0)},appendListener:function(e){var t=!0;function r(){t&&e.apply(void 0,arguments)}return n.push(r),function(){t=!1,n=n.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.forEach((function(e){return e.apply(void 0,t)}))}}}var y=!("undefined"==typeof window||!window.document||!window.document.createElement);function h(e,n){n(window.confirm(e))}var g="popstate",b="hashchange";function v(){try{return window.history.state||{}}catch(e){return{}}}function x(e){void 0===e&&(e={}),y||(0,s.Z)(!1);var n,t=window.history,o=(-1===(n=window.navigator.userAgent).indexOf("Android 2.")&&-1===n.indexOf("Android 4.0")||-1===n.indexOf("Mobile Safari")||-1!==n.indexOf("Chrome")||-1!==n.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,c=i.forceRefresh,x=void 0!==c&&c,w=i.getUserConfirmation,k=void 0===w?h:w,S=i.keyLength,E=void 0===S?6:S,P=e.basename?u(l(e.basename)):"";function C(e){var n=e||{},t=n.key,r=n.state,o=window.location,a=o.pathname+o.search+o.hash;return P&&(a=d(a,P)),f(a,r,t)}function _(){return Math.random().toString(36).substr(2,E)}var j=m();function T(e){(0,r.Z)(U,e),U.length=t.length,j.notifyListeners(U.location,U.action)}function $(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||R(C(e.state))}function O(){R(C(v()))}var N=!1;function R(e){if(N)N=!1,T();else{j.confirmTransitionTo(e,"POP",k,(function(n){n?T({action:"POP",location:e}):function(e){var n=U.location,t=L.indexOf(n.key);-1===t&&(t=0);var r=L.indexOf(e.key);-1===r&&(r=0);var o=t-r;o&&(N=!0,I(o))}(e)}))}}var A=C(v()),L=[A.key];function D(e){return P+p(e)}function I(e){t.go(e)}var M=0;function F(e){1===(M+=e)&&1===e?(window.addEventListener(g,$),a&&window.addEventListener(b,O)):0===M&&(window.removeEventListener(g,$),a&&window.removeEventListener(b,O))}var z=!1;var U={length:t.length,action:"POP",location:A,createHref:D,push:function(e,n){var r="PUSH",a=f(e,n,_(),U.location);j.confirmTransitionTo(a,r,k,(function(e){if(e){var n=D(a),i=a.key,s=a.state;if(o)if(t.pushState({key:i,state:s},null,n),x)window.location.href=n;else{var l=L.indexOf(U.location.key),c=L.slice(0,l+1);c.push(a.key),L=c,T({action:r,location:a})}else window.location.href=n}}))},replace:function(e,n){var r="REPLACE",a=f(e,n,_(),U.location);j.confirmTransitionTo(a,r,k,(function(e){if(e){var n=D(a),i=a.key,s=a.state;if(o)if(t.replaceState({key:i,state:s},null,n),x)window.location.replace(n);else{var l=L.indexOf(U.location.key);-1!==l&&(L[l]=a.key),T({action:r,location:a})}else window.location.replace(n)}}))},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&(e=!1);var n=j.setPrompt(e);return z||(F(1),z=!0),function(){return z&&(z=!1,F(-1)),n()}},listen:function(e){var n=j.appendListener(e);return F(1),function(){F(-1),n()}}};return U}var w="hashchange",k={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+c(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:c,decodePath:l},slash:{encodePath:l,decodePath:l}};function S(e){var n=e.indexOf("#");return-1===n?e:e.slice(0,n)}function E(){var e=window.location.href,n=e.indexOf("#");return-1===n?"":e.substring(n+1)}function P(e){window.location.replace(S(window.location.href)+"#"+e)}function C(e){void 0===e&&(e={}),y||(0,s.Z)(!1);var n=window.history,t=(window.navigator.userAgent.indexOf("Firefox"),e),o=t.getUserConfirmation,a=void 0===o?h:o,i=t.hashType,c=void 0===i?"slash":i,g=e.basename?u(l(e.basename)):"",b=k[c],v=b.encodePath,x=b.decodePath;function C(){var e=x(E());return g&&(e=d(e,g)),f(e)}var _=m();function j(e){(0,r.Z)(z,e),z.length=n.length,_.notifyListeners(z.location,z.action)}var T=!1,$=null;function O(){var e,n,t=E(),r=v(t);if(t!==r)P(r);else{var o=C(),i=z.location;if(!T&&(n=o,(e=i).pathname===n.pathname&&e.search===n.search&&e.hash===n.hash))return;if($===p(o))return;$=null,function(e){if(T)T=!1,j();else{var n="POP";_.confirmTransitionTo(e,n,a,(function(t){t?j({action:n,location:e}):function(e){var n=z.location,t=L.lastIndexOf(p(n));-1===t&&(t=0);var r=L.lastIndexOf(p(e));-1===r&&(r=0);var o=t-r;o&&(T=!0,D(o))}(e)}))}}(o)}}var N=E(),R=v(N);N!==R&&P(R);var A=C(),L=[p(A)];function D(e){n.go(e)}var I=0;function M(e){1===(I+=e)&&1===e?window.addEventListener(w,O):0===I&&window.removeEventListener(w,O)}var F=!1;var z={length:n.length,action:"POP",location:A,createHref:function(e){var n=document.querySelector("base"),t="";return n&&n.getAttribute("href")&&(t=S(window.location.href)),t+"#"+v(g+p(e))},push:function(e,n){var t="PUSH",r=f(e,void 0,void 0,z.location);_.confirmTransitionTo(r,t,a,(function(e){if(e){var n=p(r),o=v(g+n);if(E()!==o){$=n,function(e){window.location.hash=e}(o);var a=L.lastIndexOf(p(z.location)),i=L.slice(0,a+1);i.push(n),L=i,j({action:t,location:r})}else j()}}))},replace:function(e,n){var t="REPLACE",r=f(e,void 0,void 0,z.location);_.confirmTransitionTo(r,t,a,(function(e){if(e){var n=p(r),o=v(g+n);E()!==o&&($=n,P(o));var a=L.indexOf(p(z.location));-1!==a&&(L[a]=n),j({action:t,location:r})}}))},go:D,goBack:function(){D(-1)},goForward:function(){D(1)},block:function(e){void 0===e&&(e=!1);var n=_.setPrompt(e);return F||(M(1),F=!0),function(){return F&&(F=!1,M(-1)),n()}},listen:function(e){var n=_.appendListener(e);return M(1),function(){M(-1),n()}}};return z}function _(e,n,t){return Math.min(Math.max(e,n),t)}function j(e){void 0===e&&(e={});var n=e,t=n.getUserConfirmation,o=n.initialEntries,a=void 0===o?["/"]:o,i=n.initialIndex,s=void 0===i?0:i,l=n.keyLength,c=void 0===l?6:l,d=m();function u(e){(0,r.Z)(x,e),x.length=x.entries.length,d.notifyListeners(x.location,x.action)}function y(){return Math.random().toString(36).substr(2,c)}var h=_(s,0,a.length-1),g=a.map((function(e){return f(e,void 0,"string"==typeof e?y():e.key||y())})),b=p;function v(e){var n=_(x.index+e,0,x.entries.length-1),r=x.entries[n];d.confirmTransitionTo(r,"POP",t,(function(e){e?u({action:"POP",location:r,index:n}):u()}))}var x={length:g.length,action:"POP",location:g[h],index:h,entries:g,createHref:b,push:function(e,n){var r="PUSH",o=f(e,n,y(),x.location);d.confirmTransitionTo(o,r,t,(function(e){if(e){var n=x.index+1,t=x.entries.slice(0);t.length>n?t.splice(n,t.length-n,o):t.push(o),u({action:r,location:o,index:n,entries:t})}}))},replace:function(e,n){var r="REPLACE",o=f(e,n,y(),x.location);d.confirmTransitionTo(o,r,t,(function(e){e&&(x.entries[x.index]=o,u({action:r,location:o}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var n=x.index+e;return n>=0&&n<x.entries.length},block:function(e){return void 0===e&&(e=!1),d.setPrompt(e)},listen:function(e){return d.appendListener(e)}};return x}},73463:(e,n,t)=>{"use strict";var r=t(48570),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},s={};function l(e){return r.isMemo(e)?i:s[e.$$typeof]||o}s[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},s[r.Memo]=i;var c=Object.defineProperty,d=Object.getOwnPropertyNames,u=Object.getOwnPropertySymbols,p=Object.getOwnPropertyDescriptor,f=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(m){var o=f(t);o&&o!==m&&e(n,o,r)}var i=d(t);u&&(i=i.concat(u(t)));for(var s=l(n),y=l(t),h=0;h<i.length;++h){var g=i[h];if(!(a[g]||r&&r[g]||y&&y[g]||s&&s[g])){var b=p(t,g);try{c(n,g,b)}catch(v){}}}}return n}},47677:e=>{"use strict";e.exports=function(e,n,t,r,o,a,i,s){if(!e){var l;if(void 0===n)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[t,r,o,a,i,s],d=0;(l=new Error(n.replace(/%s/g,(function(){return c[d++]})))).name="Invariant Violation"}throw l.framesToPop=1,l}}},77906:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},55749:(e,n,t)=>{"use strict";t.r(n)},1964:(e,n,t)=>{"use strict";t.r(n)},92521:function(e,n,t){var r,o;r=function(){var e,n,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(e,n,t){return e<n?n:e>t?t:e}function a(e){return 100*(-1+e)}function i(e,n,t){var o;return(o="translate3d"===r.positionUsing?{transform:"translate3d("+a(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+a(e)+"%,0)"}:{"margin-left":a(e)+"%"}).transition="all "+n+"ms "+t,o}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(r[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=o(e,r.minimum,1),t.status=1===e?null:e;var a=t.render(!n),c=a.querySelector(r.barSelector),d=r.speed,u=r.easing;return a.offsetWidth,s((function(n){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),l(c,i(e,d,u)),1===e?(l(a,{transition:"none",opacity:1}),a.offsetWidth,setTimeout((function(){l(a,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),d)}),d)):setTimeout(n,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*o(Math.random()*n,.1,.95)),n=o(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},e=0,n=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===n&&t.start(),e++,n++,r.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");d(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=r.template;var o,i=n.querySelector(r.barSelector),s=e?"-100":a(t.status||0),c=document.querySelector(r.parent);return l(i,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),r.showSpinner||(o=n.querySelector(r.spinnerSelector))&&f(o),c!=document.body&&d(c,"nprogress-custom-parent"),c.appendChild(n),n},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&f(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var s=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),l=function(){var e=["Webkit","O","Moz","ms"],n={};function t(e){return e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()}))}function r(n){var t=document.body.style;if(n in t)return n;for(var r,o=e.length,a=n.charAt(0).toUpperCase()+n.slice(1);o--;)if((r=e[o]+a)in t)return r;return n}function o(e){return e=t(e),n[e]||(n[e]=r(e))}function a(e,n,t){n=o(n),e.style[n]=t}return function(e,n){var t,r,o=arguments;if(2==o.length)for(t in n)void 0!==(r=n[t])&&n.hasOwnProperty(t)&&a(e,t,r);else a(e,o[1],o[2])}}();function c(e,n){return("string"==typeof e?e:p(e)).indexOf(" "+n+" ")>=0}function d(e,n){var t=p(e),r=t+n;c(t,n)||(e.className=r.substring(1))}function u(e,n){var t,r=p(e);c(e,n)&&(t=r.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function p(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function f(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t},void 0===(o="function"==typeof r?r.call(n,t,n,e):r)||(e.exports=o)},62363:()=>{Prism.languages.json={property:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},Prism.languages.webmanifest=Prism.languages.json},23502:()=>{!function(e){function n(e,n){return"___"+e.toUpperCase()+n+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(t,r,o,a){if(t.language===r){var i=t.tokenStack=[];t.code=t.code.replace(o,(function(e){if("function"==typeof a&&!a(e))return e;for(var o,s=i.length;-1!==t.code.indexOf(o=n(r,s));)++s;return i[s]=e,o})),t.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(t,r){if(t.language===r&&t.tokenStack){t.grammar=e.languages[r];var o=0,a=Object.keys(t.tokenStack);!function i(s){for(var l=0;l<s.length&&!(o>=a.length);l++){var c=s[l];if("string"==typeof c||c.content&&"string"==typeof c.content){var d=a[o],u=t.tokenStack[d],p="string"==typeof c?c:c.content,f=n(r,d),m=p.indexOf(f);if(m>-1){++o;var y=p.substring(0,m),h=new e.Token(r,e.tokenize(u,t.grammar),"language-"+r,u),g=p.substring(m+f.length),b=[];y&&b.push.apply(b,i([y])),b.push(h),g&&b.push.apply(b,i([g])),"string"==typeof c?s.splice.apply(s,[l,1].concat(b)):c.content=b}}else c.content&&i(c.content)}return s}(t.tokens)}}}})}(Prism)},97861:(e,n,t)=>{var r={"./prism-json":62363};function o(e){var n=a(e);return t(n)}function a(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=a,e.exports=o,o.id=97861},68262:(e,n,t)=>{"use strict";var r=t(23586);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,n,t,o,a,i){if(i!==r){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function n(){return e}e.isRequired=e;var t={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:a,resetWarningCache:o};return t.PropTypes=t,t}},13980:(e,n,t)=>{e.exports=t(68262)()},23586:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},52967:(e,n,t)=>{"use strict";var r=t(2784),o=t(14616);function a(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,s={};function l(e,n){c(e,n),c(e+"Capture",n)}function c(e,n){for(s[e]=n,e=0;e<n.length;e++)i.add(n[e])}var d=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),u=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},m={};function y(e,n,t,r,o,a,i){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=a,this.removeEmptyString=i}var h={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){h[e]=new y(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];h[n]=new y(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){h[e]=new y(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){h[e]=new y(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){h[e]=new y(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){h[e]=new y(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){h[e]=new y(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){h[e]=new y(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){h[e]=new y(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,n,t,r){var o=h.hasOwnProperty(n)?h[n]:null;(null!==o?0!==o.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,o,r)&&(t=null),r||null===o?function(e){return!!u.call(m,e)||!u.call(f,e)&&(p.test(e)?m[e]=!0:(f[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):o.mustUseProperty?e[o.propertyName]=null===t?3!==o.type&&"":t:(n=o.attributeName,r=o.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(o=o.type)||4===o&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(g,b);h[n]=new y(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(g,b);h[n]=new y(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(g,b);h[n]=new y(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){h[e]=new y(e,1,!1,e.toLowerCase(),null,!1,!1)})),h.xlinkHref=new y("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){h[e]=new y(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),P=Symbol.for("react.profiler"),C=Symbol.for("react.provider"),_=Symbol.for("react.context"),j=Symbol.for("react.forward_ref"),T=Symbol.for("react.suspense"),$=Symbol.for("react.suspense_list"),O=Symbol.for("react.memo"),N=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var R=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var A=Symbol.iterator;function L(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=A&&e[A]||e["@@iterator"])?e:null}var D,I=Object.assign;function M(e){if(void 0===D)try{throw Error()}catch(t){var n=t.stack.trim().match(/\n( *(at )?)/);D=n&&n[1]||""}return"\n"+D+e}var F=!1;function z(e,n){if(!e||F)return"";F=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(c){var r=c}Reflect.construct(e,[],n)}else{try{n.call()}catch(c){r=c}e.call(n.prototype)}else{try{throw Error()}catch(c){r=c}e()}}catch(c){if(c&&r&&"string"==typeof c.stack){for(var o=c.stack.split("\n"),a=r.stack.split("\n"),i=o.length-1,s=a.length-1;1<=i&&0<=s&&o[i]!==a[s];)s--;for(;1<=i&&0<=s;i--,s--)if(o[i]!==a[s]){if(1!==i||1!==s)do{if(i--,0>--s||o[i]!==a[s]){var l="\n"+o[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=s);break}}}finally{F=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?M(e):""}function U(e){switch(e.tag){case 5:return M(e.type);case 16:return M("Lazy");case 13:return M("Suspense");case 19:return M("SuspenseList");case 0:case 2:case 15:return e=z(e.type,!1);case 11:return e=z(e.type.render,!1);case 1:return e=z(e.type,!0);default:return""}}function B(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case P:return"Profiler";case E:return"StrictMode";case T:return"Suspense";case $:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case j:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case O:return null!==(n=e.displayName||null)?n:B(e.type)||"Memo";case N:n=e._payload,e=e._init;try{return B(e(n))}catch(t){}}return null}function q(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return B(n);case 8:return n===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function V(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function Z(e){e._valueTracker||(e._valueTracker=function(e){var n=V(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var o=t.get,a=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function W(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=V(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function K(e,n){var t=n.checked;return I({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function J(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=H(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function Y(e,n){null!=(n=n.checked)&&v(e,"checked",n,!1)}function Q(e,n){Y(e,n);var t=H(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,H(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function X(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&G(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var o=0;o<t.length;o++)n["$"+t[o]]=!0;for(t=0;t<e.length;t++)o=n.hasOwnProperty("$"+e[t].value),e[t].selected!==o&&(e[t].selected=o),o&&r&&(e[t].defaultSelected=!0)}else{for(t=""+H(t),n=null,o=0;o<e.length;o++){if(e[o].value===t)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==n||e[o].disabled||(n=e[o])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(a(91));return I({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oe(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(a(92));if(ne(t)){if(1<t.length)throw Error(a(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:H(t)}}function ae(e,n){var t=H(n.value),r=H(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function ie(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?se(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ce,de,ue=(de=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return de(e,n)}))}:de);function pe(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function ye(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||fe.hasOwnProperty(e)&&fe[e]?(""+n).trim():n+"px"}function he(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),o=ye(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,o):e[t]=o}}Object.keys(fe).forEach((function(e){me.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),fe[n]=fe[e]}))}));var ge=I({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,n){if(n){if(ge[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(a(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(a(62))}}function ve(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ee=null;function Pe(e){if(e=xo(e)){if("function"!=typeof ke)throw Error(a(280));var n=e.stateNode;n&&(n=ko(n),ke(e.stateNode,e.type,n))}}function Ce(e){Se?Ee?Ee.push(e):Ee=[e]:Se=e}function _e(){if(Se){var e=Se,n=Ee;if(Ee=Se=null,Pe(e),n)for(e=0;e<n.length;e++)Pe(n[e])}}function je(e,n){return e(n)}function Te(){}var $e=!1;function Oe(e,n,t){if($e)return e(n,t);$e=!0;try{return je(e,n,t)}finally{$e=!1,(null!==Se||null!==Ee)&&(Te(),_e())}}function Ne(e,n){var t=e.stateNode;if(null===t)return null;var r=ko(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(a(231,n,typeof t));return t}var Re=!1;if(d)try{var Ae={};Object.defineProperty(Ae,"passive",{get:function(){Re=!0}}),window.addEventListener("test",Ae,Ae),window.removeEventListener("test",Ae,Ae)}catch(de){Re=!1}function Le(e,n,t,r,o,a,i,s,l){var c=Array.prototype.slice.call(arguments,3);try{n.apply(t,c)}catch(d){this.onError(d)}}var De=!1,Ie=null,Me=!1,Fe=null,ze={onError:function(e){De=!0,Ie=e}};function Ue(e,n,t,r,o,a,i,s,l){De=!1,Ie=null,Le.apply(ze,arguments)}function Be(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!=(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function qe(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&(null!==(e=e.alternate)&&(n=e.memoizedState)),null!==n)return n.dehydrated}return null}function He(e){if(Be(e)!==e)throw Error(a(188))}function Ve(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=Be(e)))throw Error(a(188));return n!==e?null:e}for(var t=e,r=n;;){var o=t.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){t=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===t)return He(o),e;if(i===r)return He(o),n;i=i.sibling}throw Error(a(188))}if(t.return!==r.return)t=o,r=i;else{for(var s=!1,l=o.child;l;){if(l===t){s=!0,t=o,r=i;break}if(l===r){s=!0,r=o,t=i;break}l=l.sibling}if(!s){for(l=i.child;l;){if(l===t){s=!0,t=i,r=o;break}if(l===r){s=!0,r=i,t=o;break}l=l.sibling}if(!s)throw Error(a(189))}}if(t.alternate!==r)throw Error(a(190))}if(3!==t.tag)throw Error(a(188));return t.stateNode.current===t?e:n}(e))?Ze(e):null}function Ze(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=Ze(e);if(null!==n)return n;e=e.sibling}return null}var We=o.unstable_scheduleCallback,Ge=o.unstable_cancelCallback,Ke=o.unstable_shouldYield,Je=o.unstable_requestPaint,Ye=o.unstable_now,Qe=o.unstable_getCurrentPriorityLevel,Xe=o.unstable_ImmediatePriority,en=o.unstable_UserBlockingPriority,nn=o.unstable_NormalPriority,tn=o.unstable_LowPriority,rn=o.unstable_IdlePriority,on=null,an=null;var sn=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(ln(e)/cn|0)|0},ln=Math.log,cn=Math.LN2;var dn=64,un=4194304;function pn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function fn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,o=e.suspendedLanes,a=e.pingedLanes,i=268435455&t;if(0!==i){var s=i&~o;0!==s?r=pn(s):0!==(a&=i)&&(r=pn(a))}else 0!==(i=t&~o)?r=pn(i):0!==a&&(r=pn(a));if(0===r)return 0;if(0!==n&&n!==r&&0==(n&o)&&((o=r&-r)>=(a=n&-n)||16===o&&0!=(4194240&a)))return n;if(0!=(4&r)&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)o=1<<(t=31-sn(n)),r|=e[t],n&=~o;return r}function mn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function yn(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function hn(){var e=dn;return 0==(4194240&(dn<<=1))&&(dn=64),e}function gn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function bn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-sn(n)]=t}function vn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-sn(t),o=1<<r;o&n|e[r]&n&&(e[r]|=n),t&=~o}}var xn=0;function wn(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var kn,Sn,En,Pn,Cn,_n=!1,jn=[],Tn=null,$n=null,On=null,Nn=new Map,Rn=new Map,An=[],Ln="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Dn(e,n){switch(e){case"focusin":case"focusout":Tn=null;break;case"dragenter":case"dragleave":$n=null;break;case"mouseover":case"mouseout":On=null;break;case"pointerover":case"pointerout":Nn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rn.delete(n.pointerId)}}function In(e,n,t,r,o,a){return null===e||e.nativeEvent!==a?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:a,targetContainers:[o]},null!==n&&(null!==(n=xo(n))&&Sn(n)),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==o&&-1===n.indexOf(o)&&n.push(o),e)}function Mn(e){var n=vo(e.target);if(null!==n){var t=Be(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=qe(t)))return e.blockedOn=n,void Cn(e.priority,(function(){En(t)}))}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Fn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Jn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=xo(t))&&Sn(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);xe=r,t.target.dispatchEvent(r),xe=null,n.shift()}return!0}function zn(e,n,t){Fn(e)&&t.delete(n)}function Un(){_n=!1,null!==Tn&&Fn(Tn)&&(Tn=null),null!==$n&&Fn($n)&&($n=null),null!==On&&Fn(On)&&(On=null),Nn.forEach(zn),Rn.forEach(zn)}function Bn(e,n){e.blockedOn===n&&(e.blockedOn=null,_n||(_n=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Un)))}function qn(e){function n(n){return Bn(n,e)}if(0<jn.length){Bn(jn[0],e);for(var t=1;t<jn.length;t++){var r=jn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Tn&&Bn(Tn,e),null!==$n&&Bn($n,e),null!==On&&Bn(On,e),Nn.forEach(n),Rn.forEach(n),t=0;t<An.length;t++)(r=An[t]).blockedOn===e&&(r.blockedOn=null);for(;0<An.length&&null===(t=An[0]).blockedOn;)Mn(t),null===t.blockedOn&&An.shift()}var Hn=x.ReactCurrentBatchConfig,Vn=!0;function Zn(e,n,t,r){var o=xn,a=Hn.transition;Hn.transition=null;try{xn=1,Gn(e,n,t,r)}finally{xn=o,Hn.transition=a}}function Wn(e,n,t,r){var o=xn,a=Hn.transition;Hn.transition=null;try{xn=4,Gn(e,n,t,r)}finally{xn=o,Hn.transition=a}}function Gn(e,n,t,r){if(Vn){var o=Jn(e,n,t,r);if(null===o)Hr(e,n,r,Kn,t),Dn(e,r);else if(function(e,n,t,r,o){switch(n){case"focusin":return Tn=In(Tn,e,n,t,r,o),!0;case"dragenter":return $n=In($n,e,n,t,r,o),!0;case"mouseover":return On=In(On,e,n,t,r,o),!0;case"pointerover":var a=o.pointerId;return Nn.set(a,In(Nn.get(a)||null,e,n,t,r,o)),!0;case"gotpointercapture":return a=o.pointerId,Rn.set(a,In(Rn.get(a)||null,e,n,t,r,o)),!0}return!1}(o,e,n,t,r))r.stopPropagation();else if(Dn(e,r),4&n&&-1<Ln.indexOf(e)){for(;null!==o;){var a=xo(o);if(null!==a&&kn(a),null===(a=Jn(e,n,t,r))&&Hr(e,n,r,Kn,t),a===o)break;o=a}null!==o&&r.stopPropagation()}else Hr(e,n,r,null,t)}}var Kn=null;function Jn(e,n,t,r){if(Kn=null,null!==(e=vo(e=we(r))))if(null===(n=Be(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=qe(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Kn=e,null}function Yn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Qe()){case Xe:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var Qn=null,Xn=null,et=null;function nt(){if(et)return et;var e,n,t=Xn,r=t.length,o="value"in Qn?Qn.value:Qn.textContent,a=o.length;for(e=0;e<r&&t[e]===o[e];e++);var i=r-e;for(n=1;n<=i&&t[r-n]===o[a-n];n++);return et=o.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function ot(){return!1}function at(e){function n(n,t,r,o,a){for(var i in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(n=e[i],this[i]=n?n(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?rt:ot,this.isPropagationStopped=ot,this}return I(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var it,st,lt,ct={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dt=at(ct),ut=I({},ct,{view:0,detail:0}),pt=at(ut),ft=I({},ut,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Pt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==lt&&(lt&&"mousemove"===e.type?(it=e.screenX-lt.screenX,st=e.screenY-lt.screenY):st=it=0,lt=e),it)},movementY:function(e){return"movementY"in e?e.movementY:st}}),mt=at(ft),yt=at(I({},ft,{dataTransfer:0})),ht=at(I({},ut,{relatedTarget:0})),gt=at(I({},ct,{animationName:0,elapsedTime:0,pseudoElement:0})),bt=I({},ct,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vt=at(bt),xt=at(I({},ct,{data:0})),wt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},St={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Et(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=St[e])&&!!n[e]}function Pt(){return Et}var Ct=I({},ut,{key:function(e){if(e.key){var n=wt[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kt[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Pt,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),_t=at(Ct),jt=at(I({},ft,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Tt=at(I({},ut,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Pt})),$t=at(I({},ct,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ot=I({},ft,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Nt=at(Ot),Rt=[9,13,27,32],At=d&&"CompositionEvent"in window,Lt=null;d&&"documentMode"in document&&(Lt=document.documentMode);var Dt=d&&"TextEvent"in window&&!Lt,It=d&&(!At||Lt&&8<Lt&&11>=Lt),Mt=String.fromCharCode(32),Ft=!1;function zt(e,n){switch(e){case"keyup":return-1!==Rt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ut(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Bt=!1;var qt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ht(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!qt[e.type]:"textarea"===n}function Vt(e,n,t,r){Ce(r),0<(n=Zr(n,"onChange")).length&&(t=new dt("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Zt=null,Wt=null;function Gt(e){Mr(e,0)}function Kt(e){if(W(wo(e)))return e}function Jt(e,n){if("change"===e)return n}var Yt=!1;if(d){var Qt;if(d){var Xt="oninput"in document;if(!Xt){var er=document.createElement("div");er.setAttribute("oninput","return;"),Xt="function"==typeof er.oninput}Qt=Xt}else Qt=!1;Yt=Qt&&(!document.documentMode||9<document.documentMode)}function nr(){Zt&&(Zt.detachEvent("onpropertychange",tr),Wt=Zt=null)}function tr(e){if("value"===e.propertyName&&Kt(Wt)){var n=[];Vt(n,Wt,e,we(e)),Oe(Gt,n)}}function rr(e,n,t){"focusin"===e?(nr(),Wt=t,(Zt=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function or(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kt(Wt)}function ar(e,n){if("click"===e)return Kt(n)}function ir(e,n){if("input"===e||"change"===e)return Kt(n)}var sr="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function lr(e,n){if(sr(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var o=t[r];if(!u.call(n,o)||!sr(e[o],n[o]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dr(e,n){var t,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function ur(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?ur(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function pr(){for(var e=window,n=G();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(r){t=!1}if(!t)break;n=G((e=n.contentWindow).document)}return n}function fr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function mr(e){var n=pr(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&ur(t.ownerDocument.documentElement,t)){if(null!==r&&fr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var o=t.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=dr(t,a);var i=dr(t,r);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((n=n.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(n),e.extend(i.node,i.offset)):(n.setEnd(i.node,i.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var yr=d&&"documentMode"in document&&11>=document.documentMode,hr=null,gr=null,br=null,vr=!1;function xr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;vr||null==hr||hr!==G(r)||("selectionStart"in(r=hr)&&fr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&lr(br,r)||(br=r,0<(r=Zr(gr,"onSelect")).length&&(n=new dt("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=hr)))}function wr(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var kr={animationend:wr("Animation","AnimationEnd"),animationiteration:wr("Animation","AnimationIteration"),animationstart:wr("Animation","AnimationStart"),transitionend:wr("Transition","TransitionEnd")},Sr={},Er={};function Pr(e){if(Sr[e])return Sr[e];if(!kr[e])return e;var n,t=kr[e];for(n in t)if(t.hasOwnProperty(n)&&n in Er)return Sr[e]=t[n];return e}d&&(Er=document.createElement("div").style,"AnimationEvent"in window||(delete kr.animationend.animation,delete kr.animationiteration.animation,delete kr.animationstart.animation),"TransitionEvent"in window||delete kr.transitionend.transition);var Cr=Pr("animationend"),_r=Pr("animationiteration"),jr=Pr("animationstart"),Tr=Pr("transitionend"),$r=new Map,Or="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Nr(e,n){$r.set(e,n),l(n,[e])}for(var Rr=0;Rr<Or.length;Rr++){var Ar=Or[Rr];Nr(Ar.toLowerCase(),"on"+(Ar[0].toUpperCase()+Ar.slice(1)))}Nr(Cr,"onAnimationEnd"),Nr(_r,"onAnimationIteration"),Nr(jr,"onAnimationStart"),Nr("dblclick","onDoubleClick"),Nr("focusin","onFocus"),Nr("focusout","onBlur"),Nr(Tr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Lr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Dr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Lr));function Ir(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,o,i,s,l,c){if(Ue.apply(this,arguments),De){if(!De)throw Error(a(198));var d=Ie;De=!1,Ie=null,Me||(Me=!0,Fe=d)}}(r,n,void 0,e),e.currentTarget=null}function Mr(e,n){n=0!=(4&n);for(var t=0;t<e.length;t++){var r=e[t],o=r.event;r=r.listeners;e:{var a=void 0;if(n)for(var i=r.length-1;0<=i;i--){var s=r[i],l=s.instance,c=s.currentTarget;if(s=s.listener,l!==a&&o.isPropagationStopped())break e;Ir(o,s,c),a=l}else for(i=0;i<r.length;i++){if(l=(s=r[i]).instance,c=s.currentTarget,s=s.listener,l!==a&&o.isPropagationStopped())break e;Ir(o,s,c),a=l}}}if(Me)throw e=Fe,Me=!1,Fe=null,e}function Fr(e,n){var t=n[ho];void 0===t&&(t=n[ho]=new Set);var r=e+"__bubble";t.has(r)||(qr(n,e,2,!1),t.add(r))}function zr(e,n,t){var r=0;n&&(r|=4),qr(t,e,r,n)}var Ur="_reactListening"+Math.random().toString(36).slice(2);function Br(e){if(!e[Ur]){e[Ur]=!0,i.forEach((function(n){"selectionchange"!==n&&(Dr.has(n)||zr(n,!1,e),zr(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Ur]||(n[Ur]=!0,zr("selectionchange",!1,n))}}function qr(e,n,t,r){switch(Yn(n)){case 1:var o=Zn;break;case 4:o=Wn;break;default:o=Gn}t=o.bind(null,n,t,e),o=void 0,!Re||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(o=!0),r?void 0!==o?e.addEventListener(n,t,{capture:!0,passive:o}):e.addEventListener(n,t,!0):void 0!==o?e.addEventListener(n,t,{passive:o}):e.addEventListener(n,t,!1)}function Hr(e,n,t,r,o){var a=r;if(0==(1&n)&&0==(2&n)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var s=r.stateNode.containerInfo;if(s===o||8===s.nodeType&&s.parentNode===o)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===o||8===l.nodeType&&l.parentNode===o))return;i=i.return}for(;null!==s;){if(null===(i=vo(s)))return;if(5===(l=i.tag)||6===l){r=a=i;continue e}s=s.parentNode}}r=r.return}Oe((function(){var r=a,o=we(t),i=[];e:{var s=$r.get(e);if(void 0!==s){var l=dt,c=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":l=_t;break;case"focusin":c="focus",l=ht;break;case"focusout":c="blur",l=ht;break;case"beforeblur":case"afterblur":l=ht;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=mt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=yt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Tt;break;case Cr:case _r:case jr:l=gt;break;case Tr:l=$t;break;case"scroll":l=pt;break;case"wheel":l=Nt;break;case"copy":case"cut":case"paste":l=vt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=jt}var d=0!=(4&n),u=!d&&"scroll"===e,p=d?null!==s?s+"Capture":null:s;d=[];for(var f,m=r;null!==m;){var y=(f=m).stateNode;if(5===f.tag&&null!==y&&(f=y,null!==p&&(null!=(y=Ne(m,p))&&d.push(Vr(m,y,f)))),u)break;m=m.return}0<d.length&&(s=new l(s,c,null,t,o),i.push({event:s,listeners:d}))}}if(0==(7&n)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||t===xe||!(c=t.relatedTarget||t.fromElement)||!vo(c)&&!c[yo])&&(l||s)&&(s=o.window===o?o:(s=o.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(c=(c=t.relatedTarget||t.toElement)?vo(c):null)&&(c!==(u=Be(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=r),l!==c)){if(d=mt,y="onMouseLeave",p="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(d=jt,y="onPointerLeave",p="onPointerEnter",m="pointer"),u=null==l?s:wo(l),f=null==c?s:wo(c),(s=new d(y,m+"leave",l,t,o)).target=u,s.relatedTarget=f,y=null,vo(o)===r&&((d=new d(p,m+"enter",c,t,o)).target=f,d.relatedTarget=u,y=d),u=y,l&&c)e:{for(p=c,m=0,f=d=l;f;f=Wr(f))m++;for(f=0,y=p;y;y=Wr(y))f++;for(;0<m-f;)d=Wr(d),m--;for(;0<f-m;)p=Wr(p),f--;for(;m--;){if(d===p||null!==p&&d===p.alternate)break e;d=Wr(d),p=Wr(p)}d=null}else d=null;null!==l&&Gr(i,s,l,d,!1),null!==c&&null!==u&&Gr(i,u,c,d,!0)}if("select"===(l=(s=r?wo(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var h=Jt;else if(Ht(s))if(Yt)h=ir;else{h=or;var g=rr}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(h=ar);switch(h&&(h=h(e,r))?Vt(i,h,t,o):(g&&g(e,s,r),"focusout"===e&&(g=s._wrapperState)&&g.controlled&&"number"===s.type&&ee(s,"number",s.value)),g=r?wo(r):window,e){case"focusin":(Ht(g)||"true"===g.contentEditable)&&(hr=g,gr=r,br=null);break;case"focusout":br=gr=hr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,xr(i,t,o);break;case"selectionchange":if(yr)break;case"keydown":case"keyup":xr(i,t,o)}var b;if(At)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Bt?zt(e,t)&&(v="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(v="onCompositionStart");v&&(It&&"ko"!==t.locale&&(Bt||"onCompositionStart"!==v?"onCompositionEnd"===v&&Bt&&(b=nt()):(Xn="value"in(Qn=o)?Qn.value:Qn.textContent,Bt=!0)),0<(g=Zr(r,v)).length&&(v=new xt(v,e,null,t,o),i.push({event:v,listeners:g}),b?v.data=b:null!==(b=Ut(t))&&(v.data=b))),(b=Dt?function(e,n){switch(e){case"compositionend":return Ut(n);case"keypress":return 32!==n.which?null:(Ft=!0,Mt);case"textInput":return(e=n.data)===Mt&&Ft?null:e;default:return null}}(e,t):function(e,n){if(Bt)return"compositionend"===e||!At&&zt(e,n)?(e=nt(),et=Xn=Qn=null,Bt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return It&&"ko"!==n.locale?null:n.data}}(e,t))&&(0<(r=Zr(r,"onBeforeInput")).length&&(o=new xt("onBeforeInput","beforeinput",null,t,o),i.push({event:o,listeners:r}),o.data=b))}Mr(i,n)}))}function Vr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Zr(e,n){for(var t=n+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Ne(e,t))&&r.unshift(Vr(e,a,o)),null!=(a=Ne(e,n))&&r.push(Vr(e,a,o))),e=e.return}return r}function Wr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Gr(e,n,t,r,o){for(var a=n._reactName,i=[];null!==t&&t!==r;){var s=t,l=s.alternate,c=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==c&&(s=c,o?null!=(l=Ne(t,a))&&i.unshift(Vr(t,l,s)):o||null!=(l=Ne(t,a))&&i.push(Vr(t,l,s))),t=t.return}0!==i.length&&e.push({event:n,listeners:i})}var Kr=/\r\n?/g,Jr=/\u0000|\uFFFD/g;function Yr(e){return("string"==typeof e?e:""+e).replace(Kr,"\n").replace(Jr,"")}function Qr(e,n,t){if(n=Yr(n),Yr(e)!==n&&t)throw Error(a(425))}function Xr(){}var eo=null,no=null;function to(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ro="function"==typeof setTimeout?setTimeout:void 0,oo="function"==typeof clearTimeout?clearTimeout:void 0,ao="function"==typeof Promise?Promise:void 0,io="function"==typeof queueMicrotask?queueMicrotask:void 0!==ao?function(e){return ao.resolve(null).then(e).catch(so)}:ro;function so(e){setTimeout((function(){throw e}))}function lo(e,n){var t=n,r=0;do{var o=t.nextSibling;if(e.removeChild(t),o&&8===o.nodeType)if("/$"===(t=o.data)){if(0===r)return e.removeChild(o),void qn(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=o}while(t);qn(n)}function co(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function uo(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var po=Math.random().toString(36).slice(2),fo="__reactFiber$"+po,mo="__reactProps$"+po,yo="__reactContainer$"+po,ho="__reactEvents$"+po,go="__reactListeners$"+po,bo="__reactHandles$"+po;function vo(e){var n=e[fo];if(n)return n;for(var t=e.parentNode;t;){if(n=t[yo]||t[fo]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=uo(e);null!==e;){if(t=e[fo])return t;e=uo(e)}return n}t=(e=t).parentNode}return null}function xo(e){return!(e=e[fo]||e[yo])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function wo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function ko(e){return e[mo]||null}var So=[],Eo=-1;function Po(e){return{current:e}}function Co(e){0>Eo||(e.current=So[Eo],So[Eo]=null,Eo--)}function _o(e,n){Eo++,So[Eo]=e.current,e.current=n}var jo={},To=Po(jo),$o=Po(!1),Oo=jo;function No(e,n){var t=e.type.contextTypes;if(!t)return jo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in t)a[o]=n[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ro(e){return null!=(e=e.childContextTypes)}function Ao(){Co($o),Co(To)}function Lo(e,n,t){if(To.current!==jo)throw Error(a(168));_o(To,n),_o($o,t)}function Do(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var o in r=r.getChildContext())if(!(o in n))throw Error(a(108,q(e)||"Unknown",o));return I({},t,r)}function Io(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||jo,Oo=To.current,_o(To,e),_o($o,$o.current),!0}function Mo(e,n,t){var r=e.stateNode;if(!r)throw Error(a(169));t?(e=Do(e,n,Oo),r.__reactInternalMemoizedMergedChildContext=e,Co($o),Co(To),_o(To,e)):Co($o),_o($o,t)}var Fo=null,zo=!1,Uo=!1;function Bo(e){null===Fo?Fo=[e]:Fo.push(e)}function qo(){if(!Uo&&null!==Fo){Uo=!0;var e=0,n=xn;try{var t=Fo;for(xn=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Fo=null,zo=!1}catch(o){throw null!==Fo&&(Fo=Fo.slice(e+1)),We(Xe,qo),o}finally{xn=n,Uo=!1}}return null}var Ho=[],Vo=0,Zo=null,Wo=0,Go=[],Ko=0,Jo=null,Yo=1,Qo="";function Xo(e,n){Ho[Vo++]=Wo,Ho[Vo++]=Zo,Zo=e,Wo=n}function ea(e,n,t){Go[Ko++]=Yo,Go[Ko++]=Qo,Go[Ko++]=Jo,Jo=e;var r=Yo;e=Qo;var o=32-sn(r)-1;r&=~(1<<o),t+=1;var a=32-sn(n)+o;if(30<a){var i=o-o%5;a=(r&(1<<i)-1).toString(32),r>>=i,o-=i,Yo=1<<32-sn(n)+o|t<<o|r,Qo=a+e}else Yo=1<<a|t<<o|r,Qo=e}function na(e){null!==e.return&&(Xo(e,1),ea(e,1,0))}function ta(e){for(;e===Zo;)Zo=Ho[--Vo],Ho[Vo]=null,Wo=Ho[--Vo],Ho[Vo]=null;for(;e===Jo;)Jo=Go[--Ko],Go[Ko]=null,Qo=Go[--Ko],Go[Ko]=null,Yo=Go[--Ko],Go[Ko]=null}var ra=null,oa=null,aa=!1,ia=null;function sa(e,n){var t=Nc(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function la(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,ra=e,oa=co(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,ra=e,oa=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Jo?{id:Yo,overflow:Qo}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=Nc(18,null,null,0)).stateNode=n,t.return=e,e.child=t,ra=e,oa=null,!0);default:return!1}}function ca(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function da(e){if(aa){var n=oa;if(n){var t=n;if(!la(e,n)){if(ca(e))throw Error(a(418));n=co(t.nextSibling);var r=ra;n&&la(e,n)?sa(r,t):(e.flags=-4097&e.flags|2,aa=!1,ra=e)}}else{if(ca(e))throw Error(a(418));e.flags=-4097&e.flags|2,aa=!1,ra=e}}}function ua(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ra=e}function pa(e){if(e!==ra)return!1;if(!aa)return ua(e),aa=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!to(e.type,e.memoizedProps)),n&&(n=oa)){if(ca(e))throw fa(),Error(a(418));for(;n;)sa(e,n),n=co(n.nextSibling)}if(ua(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){oa=co(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}oa=null}}else oa=ra?co(e.stateNode.nextSibling):null;return!0}function fa(){for(var e=oa;e;)e=co(e.nextSibling)}function ma(){oa=ra=null,aa=!1}function ya(e){null===ia?ia=[e]:ia.push(e)}var ha=x.ReactCurrentBatchConfig;function ga(e,n){if(e&&e.defaultProps){for(var t in n=I({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}var ba=Po(null),va=null,xa=null,wa=null;function ka(){wa=xa=va=null}function Sa(e){var n=ba.current;Co(ba),e._currentValue=n}function Ea(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function Pa(e,n){va=e,wa=xa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&n)&&(xs=!0),e.firstContext=null)}function Ca(e){var n=e._currentValue;if(wa!==e)if(e={context:e,memoizedValue:n,next:null},null===xa){if(null===va)throw Error(a(308));xa=e,va.dependencies={lanes:0,firstContext:e}}else xa=xa.next=e;return n}var _a=null;function ja(e){null===_a?_a=[e]:_a.push(e)}function Ta(e,n,t,r){var o=n.interleaved;return null===o?(t.next=t,ja(n)):(t.next=o.next,o.next=t),n.interleaved=t,$a(e,r)}function $a(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Oa=!1;function Na(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ra(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Aa(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function La(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Tl)){var o=r.pending;return null===o?n.next=n:(n.next=o.next,o.next=n),r.pending=n,$a(e,t)}return null===(o=r.interleaved)?(n.next=n,ja(r)):(n.next=o.next,o.next=n),r.interleaved=n,$a(e,t)}function Da(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,0!=(4194240&t))){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,vn(e,t)}}function Ia(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var o=null,a=null;if(null!==(t=t.firstBaseUpdate)){do{var i={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===a?o=a=i:a=a.next=i,t=t.next}while(null!==t);null===a?o=a=n:a=a.next=n}else o=a=n;return t={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function Ma(e,n,t,r){var o=e.updateQueue;Oa=!1;var a=o.firstBaseUpdate,i=o.lastBaseUpdate,s=o.shared.pending;if(null!==s){o.shared.pending=null;var l=s,c=l.next;l.next=null,null===i?a=c:i.next=c,i=l;var d=e.alternate;null!==d&&((s=(d=d.updateQueue).lastBaseUpdate)!==i&&(null===s?d.firstBaseUpdate=c:s.next=c,d.lastBaseUpdate=l))}if(null!==a){var u=o.baseState;for(i=0,d=c=l=null,s=a;;){var p=s.lane,f=s.eventTime;if((r&p)===p){null!==d&&(d=d.next={eventTime:f,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var m=e,y=s;switch(p=n,f=t,y.tag){case 1:if("function"==typeof(m=y.payload)){u=m.call(f,u,p);break e}u=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null==(p="function"==typeof(m=y.payload)?m.call(f,u,p):m))break e;u=I({},u,p);break e;case 2:Oa=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(p=o.effects)?o.effects=[s]:p.push(s))}else f={eventTime:f,lane:p,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===d?(c=d=f,l=u):d=d.next=f,i|=p;if(null===(s=s.next)){if(null===(s=o.shared.pending))break;s=(p=s).next,p.next=null,o.lastBaseUpdate=p,o.shared.pending=null}}if(null===d&&(l=u),o.baseState=l,o.firstBaseUpdate=c,o.lastBaseUpdate=d,null!==(n=o.shared.interleaved)){o=n;do{i|=o.lane,o=o.next}while(o!==n)}else null===a&&(o.shared.lanes=0);Il|=i,e.lanes=i,e.memoizedState=u}}function Fa(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],o=r.callback;if(null!==o){if(r.callback=null,r=t,"function"!=typeof o)throw Error(a(191,o));o.call(r)}}}var za=(new r.Component).refs;function Ua(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:I({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var Ba={isMounted:function(e){return!!(e=e._reactInternals)&&Be(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=nc(),o=tc(e),a=Aa(r,o);a.payload=n,null!=t&&(a.callback=t),null!==(n=La(e,a,o))&&(rc(n,e,o,r),Da(n,e,o))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=nc(),o=tc(e),a=Aa(r,o);a.tag=1,a.payload=n,null!=t&&(a.callback=t),null!==(n=La(e,a,o))&&(rc(n,e,o,r),Da(n,e,o))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=nc(),r=tc(e),o=Aa(t,r);o.tag=2,null!=n&&(o.callback=n),null!==(n=La(e,o,r))&&(rc(n,e,r,t),Da(n,e,r))}};function qa(e,n,t,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!n.prototype||!n.prototype.isPureReactComponent||(!lr(t,r)||!lr(o,a))}function Ha(e,n,t){var r=!1,o=jo,a=n.contextType;return"object"==typeof a&&null!==a?a=Ca(a):(o=Ro(n)?Oo:To.current,a=(r=null!=(r=n.contextTypes))?No(e,o):jo),n=new n(t,a),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=Ba,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),n}function Va(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&Ba.enqueueReplaceState(n,n.state,null)}function Za(e,n,t,r){var o=e.stateNode;o.props=t,o.state=e.memoizedState,o.refs=za,Na(e);var a=n.contextType;"object"==typeof a&&null!==a?o.context=Ca(a):(a=Ro(n)?Oo:To.current,o.context=No(e,a)),o.state=e.memoizedState,"function"==typeof(a=n.getDerivedStateFromProps)&&(Ua(e,n,a,t),o.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(n=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),n!==o.state&&Ba.enqueueReplaceState(o,o.state,null),Ma(e,t,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4194308)}function Wa(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(a(309));var r=t.stateNode}if(!r)throw Error(a(147,e));var o=r,i=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===i?n.ref:(n=function(e){var n=o.refs;n===za&&(n=o.refs={}),null===e?delete n[i]:n[i]=e},n._stringRef=i,n)}if("string"!=typeof e)throw Error(a(284));if(!t._owner)throw Error(a(290,e))}return e}function Ga(e,n){throw e=Object.prototype.toString.call(n),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function Ka(e){return(0,e._init)(e._payload)}function Ja(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function o(e,n){return(e=Ac(e,n)).index=0,e.sibling=null,e}function i(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function s(n){return e&&null===n.alternate&&(n.flags|=2),n}function l(e,n,t,r){return null===n||6!==n.tag?((n=Mc(t,e.mode,r)).return=e,n):((n=o(n,t)).return=e,n)}function c(e,n,t,r){var a=t.type;return a===S?u(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===a||"object"==typeof a&&null!==a&&a.$$typeof===N&&Ka(a)===n.type)?((r=o(n,t.props)).ref=Wa(e,n,t),r.return=e,r):((r=Lc(t.type,t.key,t.props,null,e.mode,r)).ref=Wa(e,n,t),r.return=e,r)}function d(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Fc(t,e.mode,r)).return=e,n):((n=o(n,t.children||[])).return=e,n)}function u(e,n,t,r,a){return null===n||7!==n.tag?((n=Dc(t,e.mode,r,a)).return=e,n):((n=o(n,t)).return=e,n)}function p(e,n,t){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=Mc(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case w:return(t=Lc(n.type,n.key,n.props,null,e.mode,t)).ref=Wa(e,null,n),t.return=e,t;case k:return(n=Fc(n,e.mode,t)).return=e,n;case N:return p(e,(0,n._init)(n._payload),t)}if(ne(n)||L(n))return(n=Dc(n,e.mode,t,null)).return=e,n;Ga(e,n)}return null}function f(e,n,t,r){var o=null!==n?n.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==o?null:l(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case w:return t.key===o?c(e,n,t,r):null;case k:return t.key===o?d(e,n,t,r):null;case N:return f(e,n,(o=t._init)(t._payload),r)}if(ne(t)||L(t))return null!==o?null:u(e,n,t,r,null);Ga(e,t)}return null}function m(e,n,t,r,o){if("string"==typeof r&&""!==r||"number"==typeof r)return l(n,e=e.get(t)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case w:return c(n,e=e.get(null===r.key?t:r.key)||null,r,o);case k:return d(n,e=e.get(null===r.key?t:r.key)||null,r,o);case N:return m(e,n,t,(0,r._init)(r._payload),o)}if(ne(r)||L(r))return u(n,e=e.get(t)||null,r,o,null);Ga(n,r)}return null}function y(o,a,s,l){for(var c=null,d=null,u=a,y=a=0,h=null;null!==u&&y<s.length;y++){u.index>y?(h=u,u=null):h=u.sibling;var g=f(o,u,s[y],l);if(null===g){null===u&&(u=h);break}e&&u&&null===g.alternate&&n(o,u),a=i(g,a,y),null===d?c=g:d.sibling=g,d=g,u=h}if(y===s.length)return t(o,u),aa&&Xo(o,y),c;if(null===u){for(;y<s.length;y++)null!==(u=p(o,s[y],l))&&(a=i(u,a,y),null===d?c=u:d.sibling=u,d=u);return aa&&Xo(o,y),c}for(u=r(o,u);y<s.length;y++)null!==(h=m(u,o,y,s[y],l))&&(e&&null!==h.alternate&&u.delete(null===h.key?y:h.key),a=i(h,a,y),null===d?c=h:d.sibling=h,d=h);return e&&u.forEach((function(e){return n(o,e)})),aa&&Xo(o,y),c}function h(o,s,l,c){var d=L(l);if("function"!=typeof d)throw Error(a(150));if(null==(l=d.call(l)))throw Error(a(151));for(var u=d=null,y=s,h=s=0,g=null,b=l.next();null!==y&&!b.done;h++,b=l.next()){y.index>h?(g=y,y=null):g=y.sibling;var v=f(o,y,b.value,c);if(null===v){null===y&&(y=g);break}e&&y&&null===v.alternate&&n(o,y),s=i(v,s,h),null===u?d=v:u.sibling=v,u=v,y=g}if(b.done)return t(o,y),aa&&Xo(o,h),d;if(null===y){for(;!b.done;h++,b=l.next())null!==(b=p(o,b.value,c))&&(s=i(b,s,h),null===u?d=b:u.sibling=b,u=b);return aa&&Xo(o,h),d}for(y=r(o,y);!b.done;h++,b=l.next())null!==(b=m(y,o,h,b.value,c))&&(e&&null!==b.alternate&&y.delete(null===b.key?h:b.key),s=i(b,s,h),null===u?d=b:u.sibling=b,u=b);return e&&y.forEach((function(e){return n(o,e)})),aa&&Xo(o,h),d}return function e(r,a,i,l){if("object"==typeof i&&null!==i&&i.type===S&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case w:e:{for(var c=i.key,d=a;null!==d;){if(d.key===c){if((c=i.type)===S){if(7===d.tag){t(r,d.sibling),(a=o(d,i.props.children)).return=r,r=a;break e}}else if(d.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===N&&Ka(c)===d.type){t(r,d.sibling),(a=o(d,i.props)).ref=Wa(r,d,i),a.return=r,r=a;break e}t(r,d);break}n(r,d),d=d.sibling}i.type===S?((a=Dc(i.props.children,r.mode,l,i.key)).return=r,r=a):((l=Lc(i.type,i.key,i.props,null,r.mode,l)).ref=Wa(r,a,i),l.return=r,r=l)}return s(r);case k:e:{for(d=i.key;null!==a;){if(a.key===d){if(4===a.tag&&a.stateNode.containerInfo===i.containerInfo&&a.stateNode.implementation===i.implementation){t(r,a.sibling),(a=o(a,i.children||[])).return=r,r=a;break e}t(r,a);break}n(r,a),a=a.sibling}(a=Fc(i,r.mode,l)).return=r,r=a}return s(r);case N:return e(r,a,(d=i._init)(i._payload),l)}if(ne(i))return y(r,a,i,l);if(L(i))return h(r,a,i,l);Ga(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==a&&6===a.tag?(t(r,a.sibling),(a=o(a,i)).return=r,r=a):(t(r,a),(a=Mc(i,r.mode,l)).return=r,r=a),s(r)):t(r,a)}}var Ya=Ja(!0),Qa=Ja(!1),Xa={},ei=Po(Xa),ni=Po(Xa),ti=Po(Xa);function ri(e){if(e===Xa)throw Error(a(174));return e}function oi(e,n){switch(_o(ti,n),_o(ni,e),_o(ei,Xa),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:le(null,"");break;default:n=le(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}Co(ei),_o(ei,n)}function ai(){Co(ei),Co(ni),Co(ti)}function ii(e){ri(ti.current);var n=ri(ei.current),t=le(n,e.type);n!==t&&(_o(ni,e),_o(ei,t))}function si(e){ni.current===e&&(Co(ei),Co(ni))}var li=Po(0);function ci(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!=(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var di=[];function ui(){for(var e=0;e<di.length;e++)di[e]._workInProgressVersionPrimary=null;di.length=0}var pi=x.ReactCurrentDispatcher,fi=x.ReactCurrentBatchConfig,mi=0,yi=null,hi=null,gi=null,bi=!1,vi=!1,xi=0,wi=0;function ki(){throw Error(a(321))}function Si(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!sr(e[t],n[t]))return!1;return!0}function Ei(e,n,t,r,o,i){if(mi=i,yi=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,pi.current=null===e||null===e.memoizedState?ss:ls,e=t(r,o),vi){i=0;do{if(vi=!1,xi=0,25<=i)throw Error(a(301));i+=1,gi=hi=null,n.updateQueue=null,pi.current=cs,e=t(r,o)}while(vi)}if(pi.current=is,n=null!==hi&&null!==hi.next,mi=0,gi=hi=yi=null,bi=!1,n)throw Error(a(300));return e}function Pi(){var e=0!==xi;return xi=0,e}function Ci(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===gi?yi.memoizedState=gi=e:gi=gi.next=e,gi}function _i(){if(null===hi){var e=yi.alternate;e=null!==e?e.memoizedState:null}else e=hi.next;var n=null===gi?yi.memoizedState:gi.next;if(null!==n)gi=n,hi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(hi=e).memoizedState,baseState:hi.baseState,baseQueue:hi.baseQueue,queue:hi.queue,next:null},null===gi?yi.memoizedState=gi=e:gi=gi.next=e}return gi}function ji(e,n){return"function"==typeof n?n(e):n}function Ti(e){var n=_i(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=hi,o=r.baseQueue,i=t.pending;if(null!==i){if(null!==o){var s=o.next;o.next=i.next,i.next=s}r.baseQueue=o=i,t.pending=null}if(null!==o){i=o.next,r=r.baseState;var l=s=null,c=null,d=i;do{var u=d.lane;if((mi&u)===u)null!==c&&(c=c.next={lane:0,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null}),r=d.hasEagerState?d.eagerState:e(r,d.action);else{var p={lane:u,action:d.action,hasEagerState:d.hasEagerState,eagerState:d.eagerState,next:null};null===c?(l=c=p,s=r):c=c.next=p,yi.lanes|=u,Il|=u}d=d.next}while(null!==d&&d!==i);null===c?s=r:c.next=l,sr(r,n.memoizedState)||(xs=!0),n.memoizedState=r,n.baseState=s,n.baseQueue=c,t.lastRenderedState=r}if(null!==(e=t.interleaved)){o=e;do{i=o.lane,yi.lanes|=i,Il|=i,o=o.next}while(o!==e)}else null===o&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function $i(e){var n=_i(),t=n.queue;if(null===t)throw Error(a(311));t.lastRenderedReducer=e;var r=t.dispatch,o=t.pending,i=n.memoizedState;if(null!==o){t.pending=null;var s=o=o.next;do{i=e(i,s.action),s=s.next}while(s!==o);sr(i,n.memoizedState)||(xs=!0),n.memoizedState=i,null===n.baseQueue&&(n.baseState=i),t.lastRenderedState=i}return[i,r]}function Oi(){}function Ni(e,n){var t=yi,r=_i(),o=n(),i=!sr(r.memoizedState,o);if(i&&(r.memoizedState=o,xs=!0),r=r.queue,Hi(Li.bind(null,t,r,e),[e]),r.getSnapshot!==n||i||null!==gi&&1&gi.memoizedState.tag){if(t.flags|=2048,Fi(9,Ai.bind(null,t,r,o,n),void 0,null),null===$l)throw Error(a(349));0!=(30&mi)||Ri(t,n,o)}return o}function Ri(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=yi.updateQueue)?(n={lastEffect:null,stores:null},yi.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Ai(e,n,t,r){n.value=t,n.getSnapshot=r,Di(n)&&Ii(e)}function Li(e,n,t){return t((function(){Di(n)&&Ii(e)}))}function Di(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!sr(e,t)}catch(r){return!0}}function Ii(e){var n=$a(e,1);null!==n&&rc(n,e,1,-1)}function Mi(e){var n=Ci();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ji,lastRenderedState:e},n.queue=e,e=e.dispatch=ts.bind(null,yi,e),[n.memoizedState,e]}function Fi(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=yi.updateQueue)?(n={lastEffect:null,stores:null},yi.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function zi(){return _i().memoizedState}function Ui(e,n,t,r){var o=Ci();yi.flags|=e,o.memoizedState=Fi(1|n,t,void 0,void 0===r?null:r)}function Bi(e,n,t,r){var o=_i();r=void 0===r?null:r;var a=void 0;if(null!==hi){var i=hi.memoizedState;if(a=i.destroy,null!==r&&Si(r,i.deps))return void(o.memoizedState=Fi(n,t,a,r))}yi.flags|=e,o.memoizedState=Fi(1|n,t,a,r)}function qi(e,n){return Ui(8390656,8,e,n)}function Hi(e,n){return Bi(2048,8,e,n)}function Vi(e,n){return Bi(4,2,e,n)}function Zi(e,n){return Bi(4,4,e,n)}function Wi(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Gi(e,n,t){return t=null!=t?t.concat([e]):null,Bi(4,4,Wi.bind(null,n,e),t)}function Ki(){}function Ji(e,n){var t=_i();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Si(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Yi(e,n){var t=_i();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&Si(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function Qi(e,n,t){return 0==(21&mi)?(e.baseState&&(e.baseState=!1,xs=!0),e.memoizedState=t):(sr(t,n)||(t=hn(),yi.lanes|=t,Il|=t,e.baseState=!0),n)}function Xi(e,n){var t=xn;xn=0!==t&&4>t?t:4,e(!0);var r=fi.transition;fi.transition={};try{e(!1),n()}finally{xn=t,fi.transition=r}}function es(){return _i().memoizedState}function ns(e,n,t){var r=tc(e);if(t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},rs(e))os(n,t);else if(null!==(t=Ta(e,n,t,r))){rc(t,e,r,nc()),as(t,n,r)}}function ts(e,n,t){var r=tc(e),o={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(rs(e))os(n,o);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=n.lastRenderedReducer))try{var i=n.lastRenderedState,s=a(i,t);if(o.hasEagerState=!0,o.eagerState=s,sr(s,i)){var l=n.interleaved;return null===l?(o.next=o,ja(n)):(o.next=l.next,l.next=o),void(n.interleaved=o)}}catch(c){}null!==(t=Ta(e,n,o,r))&&(rc(t,e,r,o=nc()),as(t,n,r))}}function rs(e){var n=e.alternate;return e===yi||null!==n&&n===yi}function os(e,n){vi=bi=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function as(e,n,t){if(0!=(4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,vn(e,t)}}var is={readContext:Ca,useCallback:ki,useContext:ki,useEffect:ki,useImperativeHandle:ki,useInsertionEffect:ki,useLayoutEffect:ki,useMemo:ki,useReducer:ki,useRef:ki,useState:ki,useDebugValue:ki,useDeferredValue:ki,useTransition:ki,useMutableSource:ki,useSyncExternalStore:ki,useId:ki,unstable_isNewReconciler:!1},ss={readContext:Ca,useCallback:function(e,n){return Ci().memoizedState=[e,void 0===n?null:n],e},useContext:Ca,useEffect:qi,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Ui(4194308,4,Wi.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Ui(4194308,4,e,n)},useInsertionEffect:function(e,n){return Ui(4,2,e,n)},useMemo:function(e,n){var t=Ci();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=Ci();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=ns.bind(null,yi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ci().memoizedState=e},useState:Mi,useDebugValue:Ki,useDeferredValue:function(e){return Ci().memoizedState=e},useTransition:function(){var e=Mi(!1),n=e[0];return e=Xi.bind(null,e[1]),Ci().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=yi,o=Ci();if(aa){if(void 0===t)throw Error(a(407));t=t()}else{if(t=n(),null===$l)throw Error(a(349));0!=(30&mi)||Ri(r,n,t)}o.memoizedState=t;var i={value:t,getSnapshot:n};return o.queue=i,qi(Li.bind(null,r,i,e),[e]),r.flags|=2048,Fi(9,Ai.bind(null,r,i,t,n),void 0,null),t},useId:function(){var e=Ci(),n=$l.identifierPrefix;if(aa){var t=Qo;n=":"+n+"R"+(t=(Yo&~(1<<32-sn(Yo)-1)).toString(32)+t),0<(t=xi++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=wi++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},ls={readContext:Ca,useCallback:Ji,useContext:Ca,useEffect:Hi,useImperativeHandle:Gi,useInsertionEffect:Vi,useLayoutEffect:Zi,useMemo:Yi,useReducer:Ti,useRef:zi,useState:function(){return Ti(ji)},useDebugValue:Ki,useDeferredValue:function(e){return Qi(_i(),hi.memoizedState,e)},useTransition:function(){return[Ti(ji)[0],_i().memoizedState]},useMutableSource:Oi,useSyncExternalStore:Ni,useId:es,unstable_isNewReconciler:!1},cs={readContext:Ca,useCallback:Ji,useContext:Ca,useEffect:Hi,useImperativeHandle:Gi,useInsertionEffect:Vi,useLayoutEffect:Zi,useMemo:Yi,useReducer:$i,useRef:zi,useState:function(){return $i(ji)},useDebugValue:Ki,useDeferredValue:function(e){var n=_i();return null===hi?n.memoizedState=e:Qi(n,hi.memoizedState,e)},useTransition:function(){return[$i(ji)[0],_i().memoizedState]},useMutableSource:Oi,useSyncExternalStore:Ni,useId:es,unstable_isNewReconciler:!1};function ds(e,n){try{var t="",r=n;do{t+=U(r),r=r.return}while(r);var o=t}catch(a){o="\nError generating stack: "+a.message+"\n"+a.stack}return{value:e,source:n,stack:o,digest:null}}function us(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function ps(e,n){try{console.error(n.value)}catch(t){setTimeout((function(){throw t}))}}var fs="function"==typeof WeakMap?WeakMap:Map;function ms(e,n,t){(t=Aa(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Vl||(Vl=!0,Zl=r),ps(0,n)},t}function ys(e,n,t){(t=Aa(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=n.value;t.payload=function(){return r(o)},t.callback=function(){ps(0,n)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(t.callback=function(){ps(0,n),"function"!=typeof r&&(null===Wl?Wl=new Set([this]):Wl.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function hs(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new fs;var o=new Set;r.set(n,o)}else void 0===(o=r.get(n))&&(o=new Set,r.set(n,o));o.has(t)||(o.add(t),e=Cc.bind(null,e,n,t),n.then(e,e))}function gs(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function bs(e,n,t,r,o){return 0==(1&e.mode)?(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=Aa(-1,1)).tag=2,La(t,n,1))),t.lanes|=1),e):(e.flags|=65536,e.lanes=o,e)}var vs=x.ReactCurrentOwner,xs=!1;function ws(e,n,t,r){n.child=null===e?Qa(n,null,t,r):Ya(n,e.child,t,r)}function ks(e,n,t,r,o){t=t.render;var a=n.ref;return Pa(n,o),r=Ei(e,n,t,r,a,o),t=Pi(),null===e||xs?(aa&&t&&na(n),n.flags|=1,ws(e,n,r,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,Vs(e,n,o))}function Ss(e,n,t,r,o){if(null===e){var a=t.type;return"function"!=typeof a||Rc(a)||void 0!==a.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Lc(t.type,null,r,n,n.mode,o)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=a,Es(e,n,a,r,o))}if(a=e.child,0==(e.lanes&o)){var i=a.memoizedProps;if((t=null!==(t=t.compare)?t:lr)(i,r)&&e.ref===n.ref)return Vs(e,n,o)}return n.flags|=1,(e=Ac(a,r)).ref=n.ref,e.return=n,n.child=e}function Es(e,n,t,r,o){if(null!==e){var a=e.memoizedProps;if(lr(a,r)&&e.ref===n.ref){if(xs=!1,n.pendingProps=r=a,0==(e.lanes&o))return n.lanes=e.lanes,Vs(e,n,o);0!=(131072&e.flags)&&(xs=!0)}}return _s(e,n,t,r,o)}function Ps(e,n,t){var r=n.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&n.mode))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},_o(Al,Rl),Rl|=t;else{if(0==(1073741824&t))return e=null!==a?a.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,_o(Al,Rl),Rl|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:t,_o(Al,Rl),Rl|=r}else null!==a?(r=a.baseLanes|t,n.memoizedState=null):r=t,_o(Al,Rl),Rl|=r;return ws(e,n,o,t),n.child}function Cs(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function _s(e,n,t,r,o){var a=Ro(t)?Oo:To.current;return a=No(n,a),Pa(n,o),t=Ei(e,n,t,r,a,o),r=Pi(),null===e||xs?(aa&&r&&na(n),n.flags|=1,ws(e,n,t,o),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~o,Vs(e,n,o))}function js(e,n,t,r,o){if(Ro(t)){var a=!0;Io(n)}else a=!1;if(Pa(n,o),null===n.stateNode)Hs(e,n),Ha(n,t,r),Za(n,t,r,o),r=!0;else if(null===e){var i=n.stateNode,s=n.memoizedProps;i.props=s;var l=i.context,c=t.contextType;"object"==typeof c&&null!==c?c=Ca(c):c=No(n,c=Ro(t)?Oo:To.current);var d=t.getDerivedStateFromProps,u="function"==typeof d||"function"==typeof i.getSnapshotBeforeUpdate;u||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==r||l!==c)&&Va(n,i,r,c),Oa=!1;var p=n.memoizedState;i.state=p,Ma(n,r,i,o),l=n.memoizedState,s!==r||p!==l||$o.current||Oa?("function"==typeof d&&(Ua(n,t,d,r),l=n.memoizedState),(s=Oa||qa(n,t,s,r,p,l,c))?(u||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(n.flags|=4194308)):("function"==typeof i.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=l),i.props=r,i.state=l,i.context=c,r=s):("function"==typeof i.componentDidMount&&(n.flags|=4194308),r=!1)}else{i=n.stateNode,Ra(e,n),s=n.memoizedProps,c=n.type===n.elementType?s:ga(n.type,s),i.props=c,u=n.pendingProps,p=i.context,"object"==typeof(l=t.contextType)&&null!==l?l=Ca(l):l=No(n,l=Ro(t)?Oo:To.current);var f=t.getDerivedStateFromProps;(d="function"==typeof f||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(s!==u||p!==l)&&Va(n,i,r,l),Oa=!1,p=n.memoizedState,i.state=p,Ma(n,r,i,o);var m=n.memoizedState;s!==u||p!==m||$o.current||Oa?("function"==typeof f&&(Ua(n,t,f,r),m=n.memoizedState),(c=Oa||qa(n,t,c,r,p,m,l)||!1)?(d||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,m,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,m,l)),"function"==typeof i.componentDidUpdate&&(n.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&p===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&p===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=m),i.props=r,i.state=m,i.context=l,r=c):("function"!=typeof i.componentDidUpdate||s===e.memoizedProps&&p===e.memoizedState||(n.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||s===e.memoizedProps&&p===e.memoizedState||(n.flags|=1024),r=!1)}return Ts(e,n,t,r,a,o)}function Ts(e,n,t,r,o,a){Cs(e,n);var i=0!=(128&n.flags);if(!r&&!i)return o&&Mo(n,t,!1),Vs(e,n,a);r=n.stateNode,vs.current=n;var s=i&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&i?(n.child=Ya(n,e.child,null,a),n.child=Ya(n,null,s,a)):ws(e,n,s,a),n.memoizedState=r.state,o&&Mo(n,t,!0),n.child}function $s(e){var n=e.stateNode;n.pendingContext?Lo(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Lo(0,n.context,!1),oi(e,n.containerInfo)}function Os(e,n,t,r,o){return ma(),ya(o),n.flags|=256,ws(e,n,t,r),n.child}var Ns,Rs,As,Ls,Ds={dehydrated:null,treeContext:null,retryLane:0};function Is(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ms(e,n,t){var r,o=n.pendingProps,i=li.current,s=!1,l=0!=(128&n.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(s=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),_o(li,1&i),null===e)return da(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&n.mode)?n.lanes=1:"$!"===e.data?n.lanes=8:n.lanes=1073741824,null):(l=o.children,e=o.fallback,s?(o=n.mode,s=n.child,l={mode:"hidden",children:l},0==(1&o)&&null!==s?(s.childLanes=0,s.pendingProps=l):s=Ic(l,o,0,null),e=Dc(e,o,t,null),s.return=n,e.return=n,s.sibling=e,n.child=s,n.child.memoizedState=Is(t),n.memoizedState=Ds,e):Fs(n,l));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,n,t,r,o,i,s){if(t)return 256&n.flags?(n.flags&=-257,zs(e,n,s,r=us(Error(a(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(i=r.fallback,o=n.mode,r=Ic({mode:"visible",children:r.children},o,0,null),(i=Dc(i,o,s,null)).flags|=2,r.return=n,i.return=n,r.sibling=i,n.child=r,0!=(1&n.mode)&&Ya(n,e.child,null,s),n.child.memoizedState=Is(s),n.memoizedState=Ds,i);if(0==(1&n.mode))return zs(e,n,s,null);if("$!"===o.data){if(r=o.nextSibling&&o.nextSibling.dataset)var l=r.dgst;return r=l,zs(e,n,s,r=us(i=Error(a(419)),r,void 0))}if(l=0!=(s&e.childLanes),xs||l){if(null!==(r=$l)){switch(s&-s){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(o=0!=(o&(r.suspendedLanes|s))?0:o)&&o!==i.retryLane&&(i.retryLane=o,$a(e,o),rc(r,e,o,-1))}return hc(),zs(e,n,s,r=us(Error(a(421))))}return"$?"===o.data?(n.flags|=128,n.child=e.child,n=jc.bind(null,e),o._reactRetry=n,null):(e=i.treeContext,oa=co(o.nextSibling),ra=n,aa=!0,ia=null,null!==e&&(Go[Ko++]=Yo,Go[Ko++]=Qo,Go[Ko++]=Jo,Yo=e.id,Qo=e.overflow,Jo=n),n=Fs(n,r.children),n.flags|=4096,n)}(e,n,l,o,r,i,t);if(s){s=o.fallback,l=n.mode,r=(i=e.child).sibling;var c={mode:"hidden",children:o.children};return 0==(1&l)&&n.child!==i?((o=n.child).childLanes=0,o.pendingProps=c,n.deletions=null):(o=Ac(i,c)).subtreeFlags=14680064&i.subtreeFlags,null!==r?s=Ac(r,s):(s=Dc(s,l,t,null)).flags|=2,s.return=n,o.return=n,o.sibling=s,n.child=o,o=s,s=n.child,l=null===(l=e.child.memoizedState)?Is(t):{baseLanes:l.baseLanes|t,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~t,n.memoizedState=Ds,o}return e=(s=e.child).sibling,o=Ac(s,{mode:"visible",children:o.children}),0==(1&n.mode)&&(o.lanes=t),o.return=n,o.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=o,n.memoizedState=null,o}function Fs(e,n){return(n=Ic({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function zs(e,n,t,r){return null!==r&&ya(r),Ya(n,e.child,null,t),(e=Fs(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Us(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),Ea(e.return,n,t)}function Bs(e,n,t,r,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:o}:(a.isBackwards=n,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=t,a.tailMode=o)}function qs(e,n,t){var r=n.pendingProps,o=r.revealOrder,a=r.tail;if(ws(e,n,r.children,t),0!=(2&(r=li.current)))r=1&r|2,n.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Us(e,t,n);else if(19===e.tag)Us(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(_o(li,r),0==(1&n.mode))n.memoizedState=null;else switch(o){case"forwards":for(t=n.child,o=null;null!==t;)null!==(e=t.alternate)&&null===ci(e)&&(o=t),t=t.sibling;null===(t=o)?(o=n.child,n.child=null):(o=t.sibling,t.sibling=null),Bs(n,!1,o,t,a);break;case"backwards":for(t=null,o=n.child,n.child=null;null!==o;){if(null!==(e=o.alternate)&&null===ci(e)){n.child=o;break}e=o.sibling,o.sibling=t,t=o,o=e}Bs(n,!0,t,null,a);break;case"together":Bs(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function Hs(e,n){0==(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function Vs(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Il|=n.lanes,0==(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(a(153));if(null!==n.child){for(t=Ac(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Ac(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Zs(e,n){if(!aa)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ws(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var o=e.child;null!==o;)t|=o.lanes|o.childLanes,r|=14680064&o.subtreeFlags,r|=14680064&o.flags,o.return=e,o=o.sibling;else for(o=e.child;null!==o;)t|=o.lanes|o.childLanes,r|=o.subtreeFlags,r|=o.flags,o.return=e,o=o.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Gs(e,n,t){var r=n.pendingProps;switch(ta(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ws(n),null;case 1:case 17:return Ro(n.type)&&Ao(),Ws(n),null;case 3:return r=n.stateNode,ai(),Co($o),Co(To),ui(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(pa(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&n.flags)||(n.flags|=1024,null!==ia&&(sc(ia),ia=null))),Rs(e,n),Ws(n),null;case 5:si(n);var o=ri(ti.current);if(t=n.type,null!==e&&null!=n.stateNode)As(e,n,t,r,o),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(a(166));return Ws(n),null}if(e=ri(ei.current),pa(n)){r=n.stateNode,t=n.type;var i=n.memoizedProps;switch(r[fo]=n,r[mo]=i,e=0!=(1&n.mode),t){case"dialog":Fr("cancel",r),Fr("close",r);break;case"iframe":case"object":case"embed":Fr("load",r);break;case"video":case"audio":for(o=0;o<Lr.length;o++)Fr(Lr[o],r);break;case"source":Fr("error",r);break;case"img":case"image":case"link":Fr("error",r),Fr("load",r);break;case"details":Fr("toggle",r);break;case"input":J(r,i),Fr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Fr("invalid",r);break;case"textarea":oe(r,i),Fr("invalid",r)}for(var l in be(t,i),o=null,i)if(i.hasOwnProperty(l)){var c=i[l];"children"===l?"string"==typeof c?r.textContent!==c&&(!0!==i.suppressHydrationWarning&&Qr(r.textContent,c,e),o=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==i.suppressHydrationWarning&&Qr(r.textContent,c,e),o=["children",""+c]):s.hasOwnProperty(l)&&null!=c&&"onScroll"===l&&Fr("scroll",r)}switch(t){case"input":Z(r),X(r,i,!0);break;case"textarea":Z(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Xr)}r=o,n.updateQueue=r,null!==r&&(n.flags|=4)}else{l=9===o.nodeType?o:o.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(t,{is:r.is}):(e=l.createElement(t),"select"===t&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,t),e[fo]=n,e[mo]=r,Ns(e,n,!1,!1),n.stateNode=e;e:{switch(l=ve(t,r),t){case"dialog":Fr("cancel",e),Fr("close",e),o=r;break;case"iframe":case"object":case"embed":Fr("load",e),o=r;break;case"video":case"audio":for(o=0;o<Lr.length;o++)Fr(Lr[o],e);o=r;break;case"source":Fr("error",e),o=r;break;case"img":case"image":case"link":Fr("error",e),Fr("load",e),o=r;break;case"details":Fr("toggle",e),o=r;break;case"input":J(e,r),o=K(e,r),Fr("invalid",e);break;case"option":default:o=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=I({},r,{value:void 0}),Fr("invalid",e);break;case"textarea":oe(e,r),o=re(e,r),Fr("invalid",e)}for(i in be(t,o),c=o)if(c.hasOwnProperty(i)){var d=c[i];"style"===i?he(e,d):"dangerouslySetInnerHTML"===i?null!=(d=d?d.__html:void 0)&&ue(e,d):"children"===i?"string"==typeof d?("textarea"!==t||""!==d)&&pe(e,d):"number"==typeof d&&pe(e,""+d):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(s.hasOwnProperty(i)?null!=d&&"onScroll"===i&&Fr("scroll",e):null!=d&&v(e,i,d,l))}switch(t){case"input":Z(e),X(e,r,!1);break;case"textarea":Z(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+H(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?te(e,!!r.multiple,i,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Xr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Ws(n),null;case 6:if(e&&null!=n.stateNode)Ls(e,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(a(166));if(t=ri(ti.current),ri(ei.current),pa(n)){if(r=n.stateNode,t=n.memoizedProps,r[fo]=n,(i=r.nodeValue!==t)&&null!==(e=ra))switch(e.tag){case 3:Qr(r.nodeValue,t,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Qr(r.nodeValue,t,0!=(1&e.mode))}i&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[fo]=n,n.stateNode=r}return Ws(n),null;case 13:if(Co(li),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(aa&&null!==oa&&0!=(1&n.mode)&&0==(128&n.flags))fa(),ma(),n.flags|=98560,i=!1;else if(i=pa(n),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(a(318));if(!(i=null!==(i=n.memoizedState)?i.dehydrated:null))throw Error(a(317));i[fo]=n}else ma(),0==(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Ws(n),i=!1}else null!==ia&&(sc(ia),ia=null),i=!0;if(!i)return 65536&n.flags?n:null}return 0!=(128&n.flags)?(n.lanes=t,n):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,0!=(1&n.mode)&&(null===e||0!=(1&li.current)?0===Ll&&(Ll=3):hc())),null!==n.updateQueue&&(n.flags|=4),Ws(n),null);case 4:return ai(),Rs(e,n),null===e&&Br(n.stateNode.containerInfo),Ws(n),null;case 10:return Sa(n.type._context),Ws(n),null;case 19:if(Co(li),null===(i=n.memoizedState))return Ws(n),null;if(r=0!=(128&n.flags),null===(l=i.rendering))if(r)Zs(i,!1);else{if(0!==Ll||null!==e&&0!=(128&e.flags))for(e=n.child;null!==e;){if(null!==(l=ci(e))){for(n.flags|=128,Zs(i,!1),null!==(r=l.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(i=t).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return _o(li,1&li.current|2),n.child}e=e.sibling}null!==i.tail&&Ye()>ql&&(n.flags|=128,r=!0,Zs(i,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=ci(l))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Zs(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!aa)return Ws(n),null}else 2*Ye()-i.renderingStartTime>ql&&1073741824!==t&&(n.flags|=128,r=!0,Zs(i,!1),n.lanes=4194304);i.isBackwards?(l.sibling=n.child,n.child=l):(null!==(t=i.last)?t.sibling=l:n.child=l,i.last=l)}return null!==i.tail?(n=i.tail,i.rendering=n,i.tail=n.sibling,i.renderingStartTime=Ye(),n.sibling=null,t=li.current,_o(li,r?1&t|2:1&t),n):(Ws(n),null);case 22:case 23:return pc(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&0!=(1&n.mode)?0!=(1073741824&Rl)&&(Ws(n),6&n.subtreeFlags&&(n.flags|=8192)):Ws(n),null;case 24:case 25:return null}throw Error(a(156,n.tag))}function Ks(e,n){switch(ta(n),n.tag){case 1:return Ro(n.type)&&Ao(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return ai(),Co($o),Co(To),ui(),0!=(65536&(e=n.flags))&&0==(128&e)?(n.flags=-65537&e|128,n):null;case 5:return si(n),null;case 13:if(Co(li),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(a(340));ma()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return Co(li),null;case 4:return ai(),null;case 10:return Sa(n.type._context),null;case 22:case 23:return pc(),null;default:return null}}Ns=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Rs=function(){},As=function(e,n,t,r){var o=e.memoizedProps;if(o!==r){e=n.stateNode,ri(ei.current);var a,i=null;switch(t){case"input":o=K(e,o),r=K(e,r),i=[];break;case"select":o=I({},o,{value:void 0}),r=I({},r,{value:void 0}),i=[];break;case"textarea":o=re(e,o),r=re(e,r),i=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Xr)}for(d in be(t,r),t=null,o)if(!r.hasOwnProperty(d)&&o.hasOwnProperty(d)&&null!=o[d])if("style"===d){var l=o[d];for(a in l)l.hasOwnProperty(a)&&(t||(t={}),t[a]="")}else"dangerouslySetInnerHTML"!==d&&"children"!==d&&"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&"autoFocus"!==d&&(s.hasOwnProperty(d)?i||(i=[]):(i=i||[]).push(d,null));for(d in r){var c=r[d];if(l=null!=o?o[d]:void 0,r.hasOwnProperty(d)&&c!==l&&(null!=c||null!=l))if("style"===d)if(l){for(a in l)!l.hasOwnProperty(a)||c&&c.hasOwnProperty(a)||(t||(t={}),t[a]="");for(a in c)c.hasOwnProperty(a)&&l[a]!==c[a]&&(t||(t={}),t[a]=c[a])}else t||(i||(i=[]),i.push(d,t)),t=c;else"dangerouslySetInnerHTML"===d?(c=c?c.__html:void 0,l=l?l.__html:void 0,null!=c&&l!==c&&(i=i||[]).push(d,c)):"children"===d?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(d,""+c):"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&(s.hasOwnProperty(d)?(null!=c&&"onScroll"===d&&Fr("scroll",e),i||l===c||(i=[])):(i=i||[]).push(d,c))}t&&(i=i||[]).push("style",t);var d=i;(n.updateQueue=d)&&(n.flags|=4)}},Ls=function(e,n,t,r){t!==r&&(n.flags|=4)};var Js=!1,Ys=!1,Qs="function"==typeof WeakSet?WeakSet:Set,Xs=null;function el(e,n){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(r){Pc(e,n,r)}else t.current=null}function nl(e,n,t){try{t()}catch(r){Pc(e,n,r)}}var tl=!1;function rl(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var o=r=r.next;do{if((o.tag&e)===e){var a=o.destroy;o.destroy=void 0,void 0!==a&&nl(n,t,a)}o=o.next}while(o!==r)}}function ol(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function al(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"==typeof n?n(e):n.current=e}}function il(e){var n=e.alternate;null!==n&&(e.alternate=null,il(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(n=e.stateNode)&&(delete n[fo],delete n[mo],delete n[ho],delete n[go],delete n[bo])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function sl(e){return 5===e.tag||3===e.tag||4===e.tag}function ll(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||sl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cl(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Xr));else if(4!==r&&null!==(e=e.child))for(cl(e,n,t),e=e.sibling;null!==e;)cl(e,n,t),e=e.sibling}function dl(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(dl(e,n,t),e=e.sibling;null!==e;)dl(e,n,t),e=e.sibling}var ul=null,pl=!1;function fl(e,n,t){for(t=t.child;null!==t;)ml(e,n,t),t=t.sibling}function ml(e,n,t){if(an&&"function"==typeof an.onCommitFiberUnmount)try{an.onCommitFiberUnmount(on,t)}catch(s){}switch(t.tag){case 5:Ys||el(t,n);case 6:var r=ul,o=pl;ul=null,fl(e,n,t),pl=o,null!==(ul=r)&&(pl?(e=ul,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):ul.removeChild(t.stateNode));break;case 18:null!==ul&&(pl?(e=ul,t=t.stateNode,8===e.nodeType?lo(e.parentNode,t):1===e.nodeType&&lo(e,t),qn(e)):lo(ul,t.stateNode));break;case 4:r=ul,o=pl,ul=t.stateNode.containerInfo,pl=!0,fl(e,n,t),ul=r,pl=o;break;case 0:case 11:case 14:case 15:if(!Ys&&(null!==(r=t.updateQueue)&&null!==(r=r.lastEffect))){o=r=r.next;do{var a=o,i=a.destroy;a=a.tag,void 0!==i&&(0!=(2&a)||0!=(4&a))&&nl(t,n,i),o=o.next}while(o!==r)}fl(e,n,t);break;case 1:if(!Ys&&(el(t,n),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(s){Pc(t,n,s)}fl(e,n,t);break;case 21:fl(e,n,t);break;case 22:1&t.mode?(Ys=(r=Ys)||null!==t.memoizedState,fl(e,n,t),Ys=r):fl(e,n,t);break;default:fl(e,n,t)}}function yl(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Qs),n.forEach((function(n){var r=Tc.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function hl(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var o=t[r];try{var i=e,s=n,l=s;e:for(;null!==l;){switch(l.tag){case 5:ul=l.stateNode,pl=!1;break e;case 3:case 4:ul=l.stateNode.containerInfo,pl=!0;break e}l=l.return}if(null===ul)throw Error(a(160));ml(i,s,o),ul=null,pl=!1;var c=o.alternate;null!==c&&(c.return=null),o.return=null}catch(d){Pc(o,n,d)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)gl(n,e),n=n.sibling}function gl(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(hl(n,e),bl(e),4&r){try{rl(3,e,e.return),ol(3,e)}catch(h){Pc(e,e.return,h)}try{rl(5,e,e.return)}catch(h){Pc(e,e.return,h)}}break;case 1:hl(n,e),bl(e),512&r&&null!==t&&el(t,t.return);break;case 5:if(hl(n,e),bl(e),512&r&&null!==t&&el(t,t.return),32&e.flags){var o=e.stateNode;try{pe(o,"")}catch(h){Pc(e,e.return,h)}}if(4&r&&null!=(o=e.stateNode)){var i=e.memoizedProps,s=null!==t?t.memoizedProps:i,l=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===l&&"radio"===i.type&&null!=i.name&&Y(o,i),ve(l,s);var d=ve(l,i);for(s=0;s<c.length;s+=2){var u=c[s],p=c[s+1];"style"===u?he(o,p):"dangerouslySetInnerHTML"===u?ue(o,p):"children"===u?pe(o,p):v(o,u,p,d)}switch(l){case"input":Q(o,i);break;case"textarea":ae(o,i);break;case"select":var f=o._wrapperState.wasMultiple;o._wrapperState.wasMultiple=!!i.multiple;var m=i.value;null!=m?te(o,!!i.multiple,m,!1):f!==!!i.multiple&&(null!=i.defaultValue?te(o,!!i.multiple,i.defaultValue,!0):te(o,!!i.multiple,i.multiple?[]:"",!1))}o[mo]=i}catch(h){Pc(e,e.return,h)}}break;case 6:if(hl(n,e),bl(e),4&r){if(null===e.stateNode)throw Error(a(162));o=e.stateNode,i=e.memoizedProps;try{o.nodeValue=i}catch(h){Pc(e,e.return,h)}}break;case 3:if(hl(n,e),bl(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{qn(n.containerInfo)}catch(h){Pc(e,e.return,h)}break;case 4:default:hl(n,e),bl(e);break;case 13:hl(n,e),bl(e),8192&(o=e.child).flags&&(i=null!==o.memoizedState,o.stateNode.isHidden=i,!i||null!==o.alternate&&null!==o.alternate.memoizedState||(Bl=Ye())),4&r&&yl(e);break;case 22:if(u=null!==t&&null!==t.memoizedState,1&e.mode?(Ys=(d=Ys)||u,hl(n,e),Ys=d):hl(n,e),bl(e),8192&r){if(d=null!==e.memoizedState,(e.stateNode.isHidden=d)&&!u&&0!=(1&e.mode))for(Xs=e,u=e.child;null!==u;){for(p=Xs=u;null!==Xs;){switch(m=(f=Xs).child,f.tag){case 0:case 11:case 14:case 15:rl(4,f,f.return);break;case 1:el(f,f.return);var y=f.stateNode;if("function"==typeof y.componentWillUnmount){r=f,t=f.return;try{n=r,y.props=n.memoizedProps,y.state=n.memoizedState,y.componentWillUnmount()}catch(h){Pc(r,t,h)}}break;case 5:el(f,f.return);break;case 22:if(null!==f.memoizedState){kl(p);continue}}null!==m?(m.return=f,Xs=m):kl(p)}u=u.sibling}e:for(u=null,p=e;;){if(5===p.tag){if(null===u){u=p;try{o=p.stateNode,d?"function"==typeof(i=o.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=p.stateNode,s=null!=(c=p.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,l.style.display=ye("display",s))}catch(h){Pc(e,e.return,h)}}}else if(6===p.tag){if(null===u)try{p.stateNode.nodeValue=d?"":p.memoizedProps}catch(h){Pc(e,e.return,h)}}else if((22!==p.tag&&23!==p.tag||null===p.memoizedState||p===e)&&null!==p.child){p.child.return=p,p=p.child;continue}if(p===e)break e;for(;null===p.sibling;){if(null===p.return||p.return===e)break e;u===p&&(u=null),p=p.return}u===p&&(u=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:hl(n,e),bl(e),4&r&&yl(e);case 21:}}function bl(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(sl(t)){var r=t;break e}t=t.return}throw Error(a(160))}switch(r.tag){case 5:var o=r.stateNode;32&r.flags&&(pe(o,""),r.flags&=-33),dl(e,ll(e),o);break;case 3:case 4:var i=r.stateNode.containerInfo;cl(e,ll(e),i);break;default:throw Error(a(161))}}catch(s){Pc(e,e.return,s)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function vl(e,n,t){Xs=e,xl(e,n,t)}function xl(e,n,t){for(var r=0!=(1&e.mode);null!==Xs;){var o=Xs,a=o.child;if(22===o.tag&&r){var i=null!==o.memoizedState||Js;if(!i){var s=o.alternate,l=null!==s&&null!==s.memoizedState||Ys;s=Js;var c=Ys;if(Js=i,(Ys=l)&&!c)for(Xs=o;null!==Xs;)l=(i=Xs).child,22===i.tag&&null!==i.memoizedState?Sl(o):null!==l?(l.return=i,Xs=l):Sl(o);for(;null!==a;)Xs=a,xl(a,n,t),a=a.sibling;Xs=o,Js=s,Ys=c}wl(e)}else 0!=(8772&o.subtreeFlags)&&null!==a?(a.return=o,Xs=a):wl(e)}}function wl(e){for(;null!==Xs;){var n=Xs;if(0!=(8772&n.flags)){var t=n.alternate;try{if(0!=(8772&n.flags))switch(n.tag){case 0:case 11:case 15:Ys||ol(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Ys)if(null===t)r.componentDidMount();else{var o=n.elementType===n.type?t.memoizedProps:ga(n.type,t.memoizedProps);r.componentDidUpdate(o,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=n.updateQueue;null!==i&&Fa(n,i,r);break;case 3:var s=n.updateQueue;if(null!==s){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}Fa(n,s,t)}break;case 5:var l=n.stateNode;if(null===t&&4&n.flags){t=l;var c=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&t.focus();break;case"img":c.src&&(t.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var d=n.alternate;if(null!==d){var u=d.memoizedState;if(null!==u){var p=u.dehydrated;null!==p&&qn(p)}}}break;default:throw Error(a(163))}Ys||512&n.flags&&al(n)}catch(f){Pc(n,n.return,f)}}if(n===e){Xs=null;break}if(null!==(t=n.sibling)){t.return=n.return,Xs=t;break}Xs=n.return}}function kl(e){for(;null!==Xs;){var n=Xs;if(n===e){Xs=null;break}var t=n.sibling;if(null!==t){t.return=n.return,Xs=t;break}Xs=n.return}}function Sl(e){for(;null!==Xs;){var n=Xs;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{ol(4,n)}catch(l){Pc(n,t,l)}break;case 1:var r=n.stateNode;if("function"==typeof r.componentDidMount){var o=n.return;try{r.componentDidMount()}catch(l){Pc(n,o,l)}}var a=n.return;try{al(n)}catch(l){Pc(n,a,l)}break;case 5:var i=n.return;try{al(n)}catch(l){Pc(n,i,l)}}}catch(l){Pc(n,n.return,l)}if(n===e){Xs=null;break}var s=n.sibling;if(null!==s){s.return=n.return,Xs=s;break}Xs=n.return}}var El,Pl=Math.ceil,Cl=x.ReactCurrentDispatcher,_l=x.ReactCurrentOwner,jl=x.ReactCurrentBatchConfig,Tl=0,$l=null,Ol=null,Nl=0,Rl=0,Al=Po(0),Ll=0,Dl=null,Il=0,Ml=0,Fl=0,zl=null,Ul=null,Bl=0,ql=1/0,Hl=null,Vl=!1,Zl=null,Wl=null,Gl=!1,Kl=null,Jl=0,Yl=0,Ql=null,Xl=-1,ec=0;function nc(){return 0!=(6&Tl)?Ye():-1!==Xl?Xl:Xl=Ye()}function tc(e){return 0==(1&e.mode)?1:0!=(2&Tl)&&0!==Nl?Nl&-Nl:null!==ha.transition?(0===ec&&(ec=hn()),ec):0!==(e=xn)?e:e=void 0===(e=window.event)?16:Yn(e.type)}function rc(e,n,t,r){if(50<Yl)throw Yl=0,Ql=null,Error(a(185));bn(e,t,r),0!=(2&Tl)&&e===$l||(e===$l&&(0==(2&Tl)&&(Ml|=t),4===Ll&&lc(e,Nl)),oc(e,r),1===t&&0===Tl&&0==(1&n.mode)&&(ql=Ye()+500,zo&&qo()))}function oc(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,o=e.expirationTimes,a=e.pendingLanes;0<a;){var i=31-sn(a),s=1<<i,l=o[i];-1===l?0!=(s&t)&&0==(s&r)||(o[i]=mn(s,n)):l<=n&&(e.expiredLanes|=s),a&=~s}}(e,n);var r=fn(e,e===$l?Nl:0);if(0===r)null!==t&&Ge(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Ge(t),1===n)0===e.tag?function(e){zo=!0,Bo(e)}(cc.bind(null,e)):Bo(cc.bind(null,e)),io((function(){0==(6&Tl)&&qo()})),t=null;else{switch(wn(r)){case 1:t=Xe;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=$c(t,ac.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function ac(e,n){if(Xl=-1,ec=0,0!=(6&Tl))throw Error(a(327));var t=e.callbackNode;if(Sc()&&e.callbackNode!==t)return null;var r=fn(e,e===$l?Nl:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||n)n=gc(e,r);else{n=r;var o=Tl;Tl|=2;var i=yc();for($l===e&&Nl===n||(Hl=null,ql=Ye()+500,fc(e,n));;)try{vc();break}catch(l){mc(e,l)}ka(),Cl.current=i,Tl=o,null!==Ol?n=0:($l=null,Nl=0,n=Ll)}if(0!==n){if(2===n&&(0!==(o=yn(e))&&(r=o,n=ic(e,o))),1===n)throw t=Dl,fc(e,0),lc(e,r),oc(e,Ye()),t;if(6===n)lc(e,r);else{if(o=e.current.alternate,0==(30&r)&&!function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var o=t[r],a=o.getSnapshot;o=o.value;try{if(!sr(a(),o))return!1}catch(s){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(o)&&(2===(n=gc(e,r))&&(0!==(i=yn(e))&&(r=i,n=ic(e,i))),1===n))throw t=Dl,fc(e,0),lc(e,r),oc(e,Ye()),t;switch(e.finishedWork=o,e.finishedLanes=r,n){case 0:case 1:throw Error(a(345));case 2:case 5:kc(e,Ul,Hl);break;case 3:if(lc(e,r),(130023424&r)===r&&10<(n=Bl+500-Ye())){if(0!==fn(e,0))break;if(((o=e.suspendedLanes)&r)!==r){nc(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=ro(kc.bind(null,e,Ul,Hl),n);break}kc(e,Ul,Hl);break;case 4:if(lc(e,r),(4194240&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var s=31-sn(r);i=1<<s,(s=n[s])>o&&(o=s),r&=~i}if(r=o,10<(r=(120>(r=Ye()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Pl(r/1960))-r)){e.timeoutHandle=ro(kc.bind(null,e,Ul,Hl),r);break}kc(e,Ul,Hl);break;default:throw Error(a(329))}}}return oc(e,Ye()),e.callbackNode===t?ac.bind(null,e):null}function ic(e,n){var t=zl;return e.current.memoizedState.isDehydrated&&(fc(e,n).flags|=256),2!==(e=gc(e,n))&&(n=Ul,Ul=t,null!==n&&sc(n)),e}function sc(e){null===Ul?Ul=e:Ul.push.apply(Ul,e)}function lc(e,n){for(n&=~Fl,n&=~Ml,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-sn(n),r=1<<t;e[t]=-1,n&=~r}}function cc(e){if(0!=(6&Tl))throw Error(a(327));Sc();var n=fn(e,0);if(0==(1&n))return oc(e,Ye()),null;var t=gc(e,n);if(0!==e.tag&&2===t){var r=yn(e);0!==r&&(n=r,t=ic(e,r))}if(1===t)throw t=Dl,fc(e,0),lc(e,n),oc(e,Ye()),t;if(6===t)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,kc(e,Ul,Hl),oc(e,Ye()),null}function dc(e,n){var t=Tl;Tl|=1;try{return e(n)}finally{0===(Tl=t)&&(ql=Ye()+500,zo&&qo())}}function uc(e){null!==Kl&&0===Kl.tag&&0==(6&Tl)&&Sc();var n=Tl;Tl|=1;var t=jl.transition,r=xn;try{if(jl.transition=null,xn=1,e)return e()}finally{xn=r,jl.transition=t,0==(6&(Tl=n))&&qo()}}function pc(){Rl=Al.current,Co(Al)}function fc(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,oo(t)),null!==Ol)for(t=Ol.return;null!==t;){var r=t;switch(ta(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Ao();break;case 3:ai(),Co($o),Co(To),ui();break;case 5:si(r);break;case 4:ai();break;case 13:case 19:Co(li);break;case 10:Sa(r.type._context);break;case 22:case 23:pc()}t=t.return}if($l=e,Ol=e=Ac(e.current,null),Nl=Rl=n,Ll=0,Dl=null,Fl=Ml=Il=0,Ul=zl=null,null!==_a){for(n=0;n<_a.length;n++)if(null!==(r=(t=_a[n]).interleaved)){t.interleaved=null;var o=r.next,a=t.pending;if(null!==a){var i=a.next;a.next=o,r.next=i}t.pending=r}_a=null}return e}function mc(e,n){for(;;){var t=Ol;try{if(ka(),pi.current=is,bi){for(var r=yi.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}bi=!1}if(mi=0,gi=hi=yi=null,vi=!1,xi=0,_l.current=null,null===t||null===t.return){Ll=1,Dl=n,Ol=null;break}e:{var i=e,s=t.return,l=t,c=n;if(n=Nl,l.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var d=c,u=l,p=u.tag;if(0==(1&u.mode)&&(0===p||11===p||15===p)){var f=u.alternate;f?(u.updateQueue=f.updateQueue,u.memoizedState=f.memoizedState,u.lanes=f.lanes):(u.updateQueue=null,u.memoizedState=null)}var m=gs(s);if(null!==m){m.flags&=-257,bs(m,s,l,0,n),1&m.mode&&hs(i,d,n),c=d;var y=(n=m).updateQueue;if(null===y){var h=new Set;h.add(c),n.updateQueue=h}else y.add(c);break e}if(0==(1&n)){hs(i,d,n),hc();break e}c=Error(a(426))}else if(aa&&1&l.mode){var g=gs(s);if(null!==g){0==(65536&g.flags)&&(g.flags|=256),bs(g,s,l,0,n),ya(ds(c,l));break e}}i=c=ds(c,l),4!==Ll&&(Ll=2),null===zl?zl=[i]:zl.push(i),i=s;do{switch(i.tag){case 3:i.flags|=65536,n&=-n,i.lanes|=n,Ia(i,ms(0,c,n));break e;case 1:l=c;var b=i.type,v=i.stateNode;if(0==(128&i.flags)&&("function"==typeof b.getDerivedStateFromError||null!==v&&"function"==typeof v.componentDidCatch&&(null===Wl||!Wl.has(v)))){i.flags|=65536,n&=-n,i.lanes|=n,Ia(i,ys(i,l,n));break e}}i=i.return}while(null!==i)}wc(t)}catch(x){n=x,Ol===t&&null!==t&&(Ol=t=t.return);continue}break}}function yc(){var e=Cl.current;return Cl.current=is,null===e?is:e}function hc(){0!==Ll&&3!==Ll&&2!==Ll||(Ll=4),null===$l||0==(268435455&Il)&&0==(268435455&Ml)||lc($l,Nl)}function gc(e,n){var t=Tl;Tl|=2;var r=yc();for($l===e&&Nl===n||(Hl=null,fc(e,n));;)try{bc();break}catch(o){mc(e,o)}if(ka(),Tl=t,Cl.current=r,null!==Ol)throw Error(a(261));return $l=null,Nl=0,Ll}function bc(){for(;null!==Ol;)xc(Ol)}function vc(){for(;null!==Ol&&!Ke();)xc(Ol)}function xc(e){var n=El(e.alternate,e,Rl);e.memoizedProps=e.pendingProps,null===n?wc(e):Ol=n,_l.current=null}function wc(e){var n=e;do{var t=n.alternate;if(e=n.return,0==(32768&n.flags)){if(null!==(t=Gs(t,n,Rl)))return void(Ol=t)}else{if(null!==(t=Ks(t,n)))return t.flags&=32767,void(Ol=t);if(null===e)return Ll=6,void(Ol=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(n=n.sibling))return void(Ol=n);Ol=n=e}while(null!==n);0===Ll&&(Ll=5)}function kc(e,n,t){var r=xn,o=jl.transition;try{jl.transition=null,xn=1,function(e,n,t,r){do{Sc()}while(null!==Kl);if(0!=(6&Tl))throw Error(a(327));t=e.finishedWork;var o=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var i=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var o=31-sn(t),a=1<<o;n[o]=0,r[o]=-1,e[o]=-1,t&=~a}}(e,i),e===$l&&(Ol=$l=null,Nl=0),0==(2064&t.subtreeFlags)&&0==(2064&t.flags)||Gl||(Gl=!0,$c(nn,(function(){return Sc(),null}))),i=0!=(15990&t.flags),0!=(15990&t.subtreeFlags)||i){i=jl.transition,jl.transition=null;var s=xn;xn=1;var l=Tl;Tl|=4,_l.current=null,function(e,n){if(eo=Vn,fr(e=pr())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var o=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{t.nodeType,i.nodeType}catch(w){t=null;break e}var s=0,l=-1,c=-1,d=0,u=0,p=e,f=null;n:for(;;){for(var m;p!==t||0!==o&&3!==p.nodeType||(l=s+o),p!==i||0!==r&&3!==p.nodeType||(c=s+r),3===p.nodeType&&(s+=p.nodeValue.length),null!==(m=p.firstChild);)f=p,p=m;for(;;){if(p===e)break n;if(f===t&&++d===o&&(l=s),f===i&&++u===r&&(c=s),null!==(m=p.nextSibling))break;f=(p=f).parentNode}p=m}t=-1===l||-1===c?null:{start:l,end:c}}else t=null}t=t||{start:0,end:0}}else t=null;for(no={focusedElem:e,selectionRange:t},Vn=!1,Xs=n;null!==Xs;)if(e=(n=Xs).child,0!=(1028&n.subtreeFlags)&&null!==e)e.return=n,Xs=e;else for(;null!==Xs;){n=Xs;try{var y=n.alternate;if(0!=(1024&n.flags))switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==y){var h=y.memoizedProps,g=y.memoizedState,b=n.stateNode,v=b.getSnapshotBeforeUpdate(n.elementType===n.type?h:ga(n.type,h),g);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=n.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(a(163))}}catch(w){Pc(n,n.return,w)}if(null!==(e=n.sibling)){e.return=n.return,Xs=e;break}Xs=n.return}y=tl,tl=!1}(e,t),gl(t,e),mr(no),Vn=!!eo,no=eo=null,e.current=t,vl(t,e,o),Je(),Tl=l,xn=s,jl.transition=i}else e.current=t;if(Gl&&(Gl=!1,Kl=e,Jl=o),i=e.pendingLanes,0===i&&(Wl=null),function(e){if(an&&"function"==typeof an.onCommitFiberRoot)try{an.onCommitFiberRoot(on,e,void 0,128==(128&e.current.flags))}catch(n){}}(t.stateNode),oc(e,Ye()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)o=n[t],r(o.value,{componentStack:o.stack,digest:o.digest});if(Vl)throw Vl=!1,e=Zl,Zl=null,e;0!=(1&Jl)&&0!==e.tag&&Sc(),i=e.pendingLanes,0!=(1&i)?e===Ql?Yl++:(Yl=0,Ql=e):Yl=0,qo()}(e,n,t,r)}finally{jl.transition=o,xn=r}return null}function Sc(){if(null!==Kl){var e=wn(Jl),n=jl.transition,t=xn;try{if(jl.transition=null,xn=16>e?16:e,null===Kl)var r=!1;else{if(e=Kl,Kl=null,Jl=0,0!=(6&Tl))throw Error(a(331));var o=Tl;for(Tl|=4,Xs=e.current;null!==Xs;){var i=Xs,s=i.child;if(0!=(16&Xs.flags)){var l=i.deletions;if(null!==l){for(var c=0;c<l.length;c++){var d=l[c];for(Xs=d;null!==Xs;){var u=Xs;switch(u.tag){case 0:case 11:case 15:rl(8,u,i)}var p=u.child;if(null!==p)p.return=u,Xs=p;else for(;null!==Xs;){var f=(u=Xs).sibling,m=u.return;if(il(u),u===d){Xs=null;break}if(null!==f){f.return=m,Xs=f;break}Xs=m}}}var y=i.alternate;if(null!==y){var h=y.child;if(null!==h){y.child=null;do{var g=h.sibling;h.sibling=null,h=g}while(null!==h)}}Xs=i}}if(0!=(2064&i.subtreeFlags)&&null!==s)s.return=i,Xs=s;else e:for(;null!==Xs;){if(0!=(2048&(i=Xs).flags))switch(i.tag){case 0:case 11:case 15:rl(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Xs=b;break e}Xs=i.return}}var v=e.current;for(Xs=v;null!==Xs;){var x=(s=Xs).child;if(0!=(2064&s.subtreeFlags)&&null!==x)x.return=s,Xs=x;else e:for(s=v;null!==Xs;){if(0!=(2048&(l=Xs).flags))try{switch(l.tag){case 0:case 11:case 15:ol(9,l)}}catch(k){Pc(l,l.return,k)}if(l===s){Xs=null;break e}var w=l.sibling;if(null!==w){w.return=l.return,Xs=w;break e}Xs=l.return}}if(Tl=o,qo(),an&&"function"==typeof an.onPostCommitFiberRoot)try{an.onPostCommitFiberRoot(on,e)}catch(k){}r=!0}return r}finally{xn=t,jl.transition=n}}return!1}function Ec(e,n,t){e=La(e,n=ms(0,n=ds(t,n),1),1),n=nc(),null!==e&&(bn(e,1,n),oc(e,n))}function Pc(e,n,t){if(3===e.tag)Ec(e,e,t);else for(;null!==n;){if(3===n.tag){Ec(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r))){n=La(n,e=ys(n,e=ds(t,e),1),1),e=nc(),null!==n&&(bn(n,1,e),oc(n,e));break}}n=n.return}}function Cc(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=nc(),e.pingedLanes|=e.suspendedLanes&t,$l===e&&(Nl&t)===t&&(4===Ll||3===Ll&&(130023424&Nl)===Nl&&500>Ye()-Bl?fc(e,0):Fl|=t),oc(e,n)}function _c(e,n){0===n&&(0==(1&e.mode)?n=1:(n=un,0==(130023424&(un<<=1))&&(un=4194304)));var t=nc();null!==(e=$a(e,n))&&(bn(e,n,t),oc(e,t))}function jc(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),_c(e,t)}function Tc(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,o=e.memoizedState;null!==o&&(t=o.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(n),_c(e,t)}function $c(e,n){return We(e,n)}function Oc(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Nc(e,n,t,r){return new Oc(e,n,t,r)}function Rc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ac(e,n){var t=e.alternate;return null===t?((t=Nc(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Lc(e,n,t,r,o,i){var s=2;if(r=e,"function"==typeof e)Rc(e)&&(s=1);else if("string"==typeof e)s=5;else e:switch(e){case S:return Dc(t.children,o,i,n);case E:s=8,o|=8;break;case P:return(e=Nc(12,t,n,2|o)).elementType=P,e.lanes=i,e;case T:return(e=Nc(13,t,n,o)).elementType=T,e.lanes=i,e;case $:return(e=Nc(19,t,n,o)).elementType=$,e.lanes=i,e;case R:return Ic(t,o,i,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case C:s=10;break e;case _:s=9;break e;case j:s=11;break e;case O:s=14;break e;case N:s=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(n=Nc(s,t,n,o)).elementType=e,n.type=r,n.lanes=i,n}function Dc(e,n,t,r){return(e=Nc(7,e,r,n)).lanes=t,e}function Ic(e,n,t,r){return(e=Nc(22,e,r,n)).elementType=R,e.lanes=t,e.stateNode={isHidden:!1},e}function Mc(e,n,t){return(e=Nc(6,e,null,n)).lanes=t,e}function Fc(e,n,t){return(n=Nc(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function zc(e,n,t,r,o){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gn(0),this.expirationTimes=gn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gn(0),this.identifierPrefix=r,this.onRecoverableError=o,this.mutableSourceEagerHydrationData=null}function Uc(e,n,t,r,o,a,i,s,l){return e=new zc(e,n,t,s,l),1===n?(n=1,!0===a&&(n|=8)):n=0,a=Nc(3,null,null,n),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Na(a),e}function Bc(e){if(!e)return jo;e:{if(Be(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Ro(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(a(171))}if(1===e.tag){var t=e.type;if(Ro(t))return Do(e,t,n)}return n}function qc(e,n,t,r,o,a,i,s,l){return(e=Uc(t,r,!0,e,0,a,0,s,l)).context=Bc(null),t=e.current,(a=Aa(r=nc(),o=tc(t))).callback=null!=n?n:null,La(t,a,o),e.current.lanes=o,bn(e,o,r),oc(e,r),e}function Hc(e,n,t,r){var o=n.current,a=nc(),i=tc(o);return t=Bc(t),null===n.context?n.context=t:n.pendingContext=t,(n=Aa(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=La(o,n,i))&&(rc(e,o,i,a),Da(e,o,i)),i}function Vc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Zc(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Wc(e,n){Zc(e,n),(e=e.alternate)&&Zc(e,n)}El=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||$o.current)xs=!0;else{if(0==(e.lanes&t)&&0==(128&n.flags))return xs=!1,function(e,n,t){switch(n.tag){case 3:$s(n),ma();break;case 5:ii(n);break;case 1:Ro(n.type)&&Io(n);break;case 4:oi(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,o=n.memoizedProps.value;_o(ba,r._currentValue),r._currentValue=o;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(_o(li,1&li.current),n.flags|=128,null):0!=(t&n.child.childLanes)?Ms(e,n,t):(_o(li,1&li.current),null!==(e=Vs(e,n,t))?e.sibling:null);_o(li,1&li.current);break;case 19:if(r=0!=(t&n.childLanes),0!=(128&e.flags)){if(r)return qs(e,n,t);n.flags|=128}if(null!==(o=n.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),_o(li,li.current),r)break;return null;case 22:case 23:return n.lanes=0,Ps(e,n,t)}return Vs(e,n,t)}(e,n,t);xs=0!=(131072&e.flags)}else xs=!1,aa&&0!=(1048576&n.flags)&&ea(n,Wo,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;Hs(e,n),e=n.pendingProps;var o=No(n,To.current);Pa(n,t),o=Ei(null,n,r,e,o,t);var i=Pi();return n.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Ro(r)?(i=!0,Io(n)):i=!1,n.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,Na(n),o.updater=Ba,n.stateNode=o,o._reactInternals=n,Za(n,r,e,t),n=Ts(null,n,r,!0,i,t)):(n.tag=0,aa&&i&&na(n),ws(null,n,o,t),n=n.child),n;case 16:r=n.elementType;e:{switch(Hs(e,n),e=n.pendingProps,r=(o=r._init)(r._payload),n.type=r,o=n.tag=function(e){if("function"==typeof e)return Rc(e)?1:0;if(null!=e){if((e=e.$$typeof)===j)return 11;if(e===O)return 14}return 2}(r),e=ga(r,e),o){case 0:n=_s(null,n,r,e,t);break e;case 1:n=js(null,n,r,e,t);break e;case 11:n=ks(null,n,r,e,t);break e;case 14:n=Ss(null,n,r,ga(r.type,e),t);break e}throw Error(a(306,r,""))}return n;case 0:return r=n.type,o=n.pendingProps,_s(e,n,r,o=n.elementType===r?o:ga(r,o),t);case 1:return r=n.type,o=n.pendingProps,js(e,n,r,o=n.elementType===r?o:ga(r,o),t);case 3:e:{if($s(n),null===e)throw Error(a(387));r=n.pendingProps,o=(i=n.memoizedState).element,Ra(e,n),Ma(n,r,null,t);var s=n.memoizedState;if(r=s.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},n.updateQueue.baseState=i,n.memoizedState=i,256&n.flags){n=Os(e,n,r,t,o=ds(Error(a(423)),n));break e}if(r!==o){n=Os(e,n,r,t,o=ds(Error(a(424)),n));break e}for(oa=co(n.stateNode.containerInfo.firstChild),ra=n,aa=!0,ia=null,t=Qa(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(ma(),r===o){n=Vs(e,n,t);break e}ws(e,n,r,t)}n=n.child}return n;case 5:return ii(n),null===e&&da(n),r=n.type,o=n.pendingProps,i=null!==e?e.memoizedProps:null,s=o.children,to(r,o)?s=null:null!==i&&to(r,i)&&(n.flags|=32),Cs(e,n),ws(e,n,s,t),n.child;case 6:return null===e&&da(n),null;case 13:return Ms(e,n,t);case 4:return oi(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Ya(n,null,r,t):ws(e,n,r,t),n.child;case 11:return r=n.type,o=n.pendingProps,ks(e,n,r,o=n.elementType===r?o:ga(r,o),t);case 7:return ws(e,n,n.pendingProps,t),n.child;case 8:case 12:return ws(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,o=n.pendingProps,i=n.memoizedProps,s=o.value,_o(ba,r._currentValue),r._currentValue=s,null!==i)if(sr(i.value,s)){if(i.children===o.children&&!$o.current){n=Vs(e,n,t);break e}}else for(null!==(i=n.child)&&(i.return=n);null!==i;){var l=i.dependencies;if(null!==l){s=i.child;for(var c=l.firstContext;null!==c;){if(c.context===r){if(1===i.tag){(c=Aa(-1,t&-t)).tag=2;var d=i.updateQueue;if(null!==d){var u=(d=d.shared).pending;null===u?c.next=c:(c.next=u.next,u.next=c),d.pending=c}}i.lanes|=t,null!==(c=i.alternate)&&(c.lanes|=t),Ea(i.return,t,n),l.lanes|=t;break}c=c.next}}else if(10===i.tag)s=i.type===n.type?null:i.child;else if(18===i.tag){if(null===(s=i.return))throw Error(a(341));s.lanes|=t,null!==(l=s.alternate)&&(l.lanes|=t),Ea(s,t,n),s=i.sibling}else s=i.child;if(null!==s)s.return=i;else for(s=i;null!==s;){if(s===n){s=null;break}if(null!==(i=s.sibling)){i.return=s.return,s=i;break}s=s.return}i=s}ws(e,n,o.children,t),n=n.child}return n;case 9:return o=n.type,r=n.pendingProps.children,Pa(n,t),r=r(o=Ca(o)),n.flags|=1,ws(e,n,r,t),n.child;case 14:return o=ga(r=n.type,n.pendingProps),Ss(e,n,r,o=ga(r.type,o),t);case 15:return Es(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,o=n.pendingProps,o=n.elementType===r?o:ga(r,o),Hs(e,n),n.tag=1,Ro(r)?(e=!0,Io(n)):e=!1,Pa(n,t),Ha(n,r,o),Za(n,r,o,t),Ts(null,n,r,!0,e,t);case 19:return qs(e,n,t);case 22:return Ps(e,n,t)}throw Error(a(156,n.tag))};var Gc="function"==typeof reportError?reportError:function(e){console.error(e)};function Kc(e){this._internalRoot=e}function Jc(e){this._internalRoot=e}function Yc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Qc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Xc(){}function ed(e,n,t,r,o){var a=t._reactRootContainer;if(a){var i=a;if("function"==typeof o){var s=o;o=function(){var e=Vc(i);s.call(e)}}Hc(n,i,e,o)}else i=function(e,n,t,r,o){if(o){if("function"==typeof r){var a=r;r=function(){var e=Vc(i);a.call(e)}}var i=qc(n,r,e,0,null,!1,0,"",Xc);return e._reactRootContainer=i,e[yo]=i.current,Br(8===e.nodeType?e.parentNode:e),uc(),i}for(;o=e.lastChild;)e.removeChild(o);if("function"==typeof r){var s=r;r=function(){var e=Vc(l);s.call(e)}}var l=Uc(e,0,!1,null,0,!1,0,"",Xc);return e._reactRootContainer=l,e[yo]=l.current,Br(8===e.nodeType?e.parentNode:e),uc((function(){Hc(n,l,t,r)})),l}(t,n,e,o,r);return Vc(i)}Jc.prototype.render=Kc.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(a(409));Hc(e,n,null,null)},Jc.prototype.unmount=Kc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;uc((function(){Hc(null,e,null,null)})),n[yo]=null}},Jc.prototype.unstable_scheduleHydration=function(e){if(e){var n=Pn();e={blockedOn:null,target:e,priority:n};for(var t=0;t<An.length&&0!==n&&n<An[t].priority;t++);An.splice(t,0,e),0===t&&Mn(e)}},kn=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=pn(n.pendingLanes);0!==t&&(vn(n,1|t),oc(n,Ye()),0==(6&Tl)&&(ql=Ye()+500,qo()))}break;case 13:uc((function(){var n=$a(e,1);if(null!==n){var t=nc();rc(n,e,1,t)}})),Wc(e,1)}},Sn=function(e){if(13===e.tag){var n=$a(e,134217728);if(null!==n)rc(n,e,134217728,nc());Wc(e,134217728)}},En=function(e){if(13===e.tag){var n=tc(e),t=$a(e,n);if(null!==t)rc(t,e,n,nc());Wc(e,n)}},Pn=function(){return xn},Cn=function(e,n){var t=xn;try{return xn=e,n()}finally{xn=t}},ke=function(e,n,t){switch(n){case"input":if(Q(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var o=ko(r);if(!o)throw Error(a(90));W(r),Q(r,o)}}}break;case"textarea":ae(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},je=dc,Te=uc;var nd={usingClientEntryPoint:!1,Events:[xo,wo,ko,Ce,_e,dc]},td={findFiberByHostInstance:vo,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rd={bundleType:td.bundleType,version:td.version,rendererPackageName:td.rendererPackageName,rendererConfig:td.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ve(e))?null:e.stateNode},findFiberByHostInstance:td.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var od=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!od.isDisabled&&od.supportsFiber)try{on=od.inject(rd),an=od}catch(de){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nd,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Yc(n))throw Error(a(200));return function(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}(e,n,null,t)},n.createRoot=function(e,n){if(!Yc(e))throw Error(a(299));var t=!1,r="",o=Gc;return null!=n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),n=Uc(e,1,!1,null,0,t,0,r,o),e[yo]=n.current,Br(8===e.nodeType?e.parentNode:e),new Kc(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return e=null===(e=Ve(n))?null:e.stateNode},n.flushSync=function(e){return uc(e)},n.hydrate=function(e,n,t){if(!Qc(n))throw Error(a(200));return ed(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Yc(e))throw Error(a(405));var r=null!=t&&t.hydratedSources||null,o=!1,i="",s=Gc;if(null!=t&&(!0===t.unstable_strictMode&&(o=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),n=qc(n,null,e,1,null!=t?t:null,o,0,i,s),e[yo]=n.current,Br(e),r)for(e=0;e<r.length;e++)o=(o=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o);return new Jc(n)},n.render=function(e,n,t){if(!Qc(n))throw Error(a(200));return ed(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Qc(e))throw Error(a(40));return!!e._reactRootContainer&&(uc((function(){ed(null,null,e,!1,(function(){e._reactRootContainer=null,e[yo]=null}))})),!0)},n.unstable_batchedUpdates=dc,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Qc(t))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return ed(e,n,t,!1,r)},n.version="18.2.0-next-9e3b772b8-20220608"},17029:(e,n,t)=>{"use strict";var r=t(28316);n.createRoot=r.createRoot,n.hydrateRoot=r.hydrateRoot},28316:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(n){console.error(n)}}(),e.exports=t(52967)},78435:e=>{var n="undefined"!=typeof Element,t="function"==typeof Map,r="function"==typeof Set,o="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function a(e,i){if(e===i)return!0;if(e&&i&&"object"==typeof e&&"object"==typeof i){if(e.constructor!==i.constructor)return!1;var s,l,c,d;if(Array.isArray(e)){if((s=e.length)!=i.length)return!1;for(l=s;0!=l--;)if(!a(e[l],i[l]))return!1;return!0}if(t&&e instanceof Map&&i instanceof Map){if(e.size!==i.size)return!1;for(d=e.entries();!(l=d.next()).done;)if(!i.has(l.value[0]))return!1;for(d=e.entries();!(l=d.next()).done;)if(!a(l.value[1],i.get(l.value[0])))return!1;return!0}if(r&&e instanceof Set&&i instanceof Set){if(e.size!==i.size)return!1;for(d=e.entries();!(l=d.next()).done;)if(!i.has(l.value[0]))return!1;return!0}if(o&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(i)){if((s=e.length)!=i.length)return!1;for(l=s;0!=l--;)if(e[l]!==i[l])return!1;return!0}if(e.constructor===RegExp)return e.source===i.source&&e.flags===i.flags;if(e.valueOf!==Object.prototype.valueOf&&"function"==typeof e.valueOf&&"function"==typeof i.valueOf)return e.valueOf()===i.valueOf();if(e.toString!==Object.prototype.toString&&"function"==typeof e.toString&&"function"==typeof i.toString)return e.toString()===i.toString();if((s=(c=Object.keys(e)).length)!==Object.keys(i).length)return!1;for(l=s;0!=l--;)if(!Object.prototype.hasOwnProperty.call(i,c[l]))return!1;if(n&&e instanceof Element)return!1;for(l=s;0!=l--;)if(("_owner"!==c[l]&&"__v"!==c[l]&&"__o"!==c[l]||!e.$$typeof)&&!a(e[c[l]],i[c[l]]))return!1;return!0}return e!=e&&i!=i}e.exports=function(e,n){try{return a(e,n)}catch(t){if((t.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw t}}},72175:(e,n,t)=>{"use strict";t.d(n,{B6:()=>V,ql:()=>X});var r=t(2784),o=t(13980),a=t.n(o),i=t(78435),s=t.n(i),l=t(47677),c=t.n(l),d=t(88665),u=t.n(d);function p(){return p=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},p.apply(this,arguments)}function f(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,m(e,n)}function m(e,n){return m=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e},m(e,n)}function y(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n.indexOf(t=a[r])>=0||(o[t]=e[t]);return o}var h={BASE:"base",BODY:"body",HEAD:"head",HTML:"html",LINK:"link",META:"meta",NOSCRIPT:"noscript",SCRIPT:"script",STYLE:"style",TITLE:"title",FRAGMENT:"Symbol(react.fragment)"},g={rel:["amphtml","canonical","alternate"]},b={type:["application/ld+json"]},v={charset:"",name:["robots","description"],property:["og:type","og:title","og:url","og:image","og:image:alt","og:description","twitter:url","twitter:title","twitter:description","twitter:image","twitter:image:alt","twitter:card","twitter:site"]},x=Object.keys(h).map((function(e){return h[e]})),w={accesskey:"accessKey",charset:"charSet",class:"className",contenteditable:"contentEditable",contextmenu:"contextMenu","http-equiv":"httpEquiv",itemprop:"itemProp",tabindex:"tabIndex"},k=Object.keys(w).reduce((function(e,n){return e[w[n]]=n,e}),{}),S=function(e,n){for(var t=e.length-1;t>=0;t-=1){var r=e[t];if(Object.prototype.hasOwnProperty.call(r,n))return r[n]}return null},E=function(e){var n=S(e,h.TITLE),t=S(e,"titleTemplate");if(Array.isArray(n)&&(n=n.join("")),t&&n)return t.replace(/%s/g,(function(){return n}));var r=S(e,"defaultTitle");return n||r||void 0},P=function(e){return S(e,"onChangeClientState")||function(){}},C=function(e,n){return n.filter((function(n){return void 0!==n[e]})).map((function(n){return n[e]})).reduce((function(e,n){return p({},e,n)}),{})},_=function(e,n){return n.filter((function(e){return void 0!==e[h.BASE]})).map((function(e){return e[h.BASE]})).reverse().reduce((function(n,t){if(!n.length)for(var r=Object.keys(t),o=0;o<r.length;o+=1){var a=r[o].toLowerCase();if(-1!==e.indexOf(a)&&t[a])return n.concat(t)}return n}),[])},j=function(e,n,t){var r={};return t.filter((function(n){return!!Array.isArray(n[e])||(void 0!==n[e]&&console&&"function"==typeof console.warn&&console.warn("Helmet: "+e+' should be of type "Array". Instead found type "'+typeof n[e]+'"'),!1)})).map((function(n){return n[e]})).reverse().reduce((function(e,t){var o={};t.filter((function(e){for(var t,a=Object.keys(e),i=0;i<a.length;i+=1){var s=a[i],l=s.toLowerCase();-1===n.indexOf(l)||"rel"===t&&"canonical"===e[t].toLowerCase()||"rel"===l&&"stylesheet"===e[l].toLowerCase()||(t=l),-1===n.indexOf(s)||"innerHTML"!==s&&"cssText"!==s&&"itemprop"!==s||(t=s)}if(!t||!e[t])return!1;var c=e[t].toLowerCase();return r[t]||(r[t]={}),o[t]||(o[t]={}),!r[t][c]&&(o[t][c]=!0,!0)})).reverse().forEach((function(n){return e.push(n)}));for(var a=Object.keys(o),i=0;i<a.length;i+=1){var s=a[i],l=p({},r[s],o[s]);r[s]=l}return e}),[]).reverse()},T=function(e,n){if(Array.isArray(e)&&e.length)for(var t=0;t<e.length;t+=1)if(e[t][n])return!0;return!1},$=function(e){return Array.isArray(e)?e.join(""):e},O=function(e,n){return Array.isArray(e)?e.reduce((function(e,t){return function(e,n){for(var t=Object.keys(e),r=0;r<t.length;r+=1)if(n[t[r]]&&n[t[r]].includes(e[t[r]]))return!0;return!1}(t,n)?e.priority.push(t):e.default.push(t),e}),{priority:[],default:[]}):{default:e}},N=function(e,n){var t;return p({},e,((t={})[n]=void 0,t))},R=[h.NOSCRIPT,h.SCRIPT,h.STYLE],A=function(e,n){return void 0===n&&(n=!0),!1===n?String(e):String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")},L=function(e){return Object.keys(e).reduce((function(n,t){var r=void 0!==e[t]?t+'="'+e[t]+'"':""+t;return n?n+" "+r:r}),"")},D=function(e,n){return void 0===n&&(n={}),Object.keys(e).reduce((function(n,t){return n[w[t]||t]=e[t],n}),n)},I=function(e,n){return n.map((function(n,t){var o,a=((o={key:t})["data-rh"]=!0,o);return Object.keys(n).forEach((function(e){var t=w[e]||e;"innerHTML"===t||"cssText"===t?a.dangerouslySetInnerHTML={__html:n.innerHTML||n.cssText}:a[t]=n[e]})),r.createElement(e,a)}))},M=function(e,n,t){switch(e){case h.TITLE:return{toComponent:function(){return t=n.titleAttributes,(o={key:e=n.title})["data-rh"]=!0,a=D(t,o),[r.createElement(h.TITLE,a,e)];var e,t,o,a},toString:function(){return function(e,n,t,r){var o=L(t),a=$(n);return o?"<"+e+' data-rh="true" '+o+">"+A(a,r)+"</"+e+">":"<"+e+' data-rh="true">'+A(a,r)+"</"+e+">"}(e,n.title,n.titleAttributes,t)}};case"bodyAttributes":case"htmlAttributes":return{toComponent:function(){return D(n)},toString:function(){return L(n)}};default:return{toComponent:function(){return I(e,n)},toString:function(){return function(e,n,t){return n.reduce((function(n,r){var o=Object.keys(r).filter((function(e){return!("innerHTML"===e||"cssText"===e)})).reduce((function(e,n){var o=void 0===r[n]?n:n+'="'+A(r[n],t)+'"';return e?e+" "+o:o}),""),a=r.innerHTML||r.cssText||"",i=-1===R.indexOf(e);return n+"<"+e+' data-rh="true" '+o+(i?"/>":">"+a+"</"+e+">")}),"")}(e,n,t)}}}},F=function(e){var n=e.baseTag,t=e.bodyAttributes,r=e.encode,o=e.htmlAttributes,a=e.noscriptTags,i=e.styleTags,s=e.title,l=void 0===s?"":s,c=e.titleAttributes,d=e.linkTags,u=e.metaTags,p=e.scriptTags,f={toComponent:function(){},toString:function(){return""}};if(e.prioritizeSeoTags){var m=function(e){var n=e.linkTags,t=e.scriptTags,r=e.encode,o=O(e.metaTags,v),a=O(n,g),i=O(t,b);return{priorityMethods:{toComponent:function(){return[].concat(I(h.META,o.priority),I(h.LINK,a.priority),I(h.SCRIPT,i.priority))},toString:function(){return M(h.META,o.priority,r)+" "+M(h.LINK,a.priority,r)+" "+M(h.SCRIPT,i.priority,r)}},metaTags:o.default,linkTags:a.default,scriptTags:i.default}}(e);f=m.priorityMethods,d=m.linkTags,u=m.metaTags,p=m.scriptTags}return{priority:f,base:M(h.BASE,n,r),bodyAttributes:M("bodyAttributes",t,r),htmlAttributes:M("htmlAttributes",o,r),link:M(h.LINK,d,r),meta:M(h.META,u,r),noscript:M(h.NOSCRIPT,a,r),script:M(h.SCRIPT,p,r),style:M(h.STYLE,i,r),title:M(h.TITLE,{title:l,titleAttributes:c},r)}},z=[],U=function(e,n){var t=this;void 0===n&&(n="undefined"!=typeof document),this.instances=[],this.value={setHelmet:function(e){t.context.helmet=e},helmetInstances:{get:function(){return t.canUseDOM?z:t.instances},add:function(e){(t.canUseDOM?z:t.instances).push(e)},remove:function(e){var n=(t.canUseDOM?z:t.instances).indexOf(e);(t.canUseDOM?z:t.instances).splice(n,1)}}},this.context=e,this.canUseDOM=n,n||(e.helmet=F({baseTag:[],bodyAttributes:{},encodeSpecialCharacters:!0,htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:"",titleAttributes:{}}))},B=r.createContext({}),q=a().shape({setHelmet:a().func,helmetInstances:a().shape({get:a().func,add:a().func,remove:a().func})}),H="undefined"!=typeof document,V=function(e){function n(t){var r;return(r=e.call(this,t)||this).helmetData=new U(r.props.context,n.canUseDOM),r}return f(n,e),n.prototype.render=function(){return r.createElement(B.Provider,{value:this.helmetData.value},this.props.children)},n}(r.Component);V.canUseDOM=H,V.propTypes={context:a().shape({helmet:a().shape()}),children:a().node.isRequired},V.defaultProps={context:{}},V.displayName="HelmetProvider";var Z=function(e,n){var t,r=document.head||document.querySelector(h.HEAD),o=r.querySelectorAll(e+"[data-rh]"),a=[].slice.call(o),i=[];return n&&n.length&&n.forEach((function(n){var r=document.createElement(e);for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&("innerHTML"===o?r.innerHTML=n.innerHTML:"cssText"===o?r.styleSheet?r.styleSheet.cssText=n.cssText:r.appendChild(document.createTextNode(n.cssText)):r.setAttribute(o,void 0===n[o]?"":n[o]));r.setAttribute("data-rh","true"),a.some((function(e,n){return t=n,r.isEqualNode(e)}))?a.splice(t,1):i.push(r)})),a.forEach((function(e){return e.parentNode.removeChild(e)})),i.forEach((function(e){return r.appendChild(e)})),{oldTags:a,newTags:i}},W=function(e,n){var t=document.getElementsByTagName(e)[0];if(t){for(var r=t.getAttribute("data-rh"),o=r?r.split(","):[],a=[].concat(o),i=Object.keys(n),s=0;s<i.length;s+=1){var l=i[s],c=n[l]||"";t.getAttribute(l)!==c&&t.setAttribute(l,c),-1===o.indexOf(l)&&o.push(l);var d=a.indexOf(l);-1!==d&&a.splice(d,1)}for(var u=a.length-1;u>=0;u-=1)t.removeAttribute(a[u]);o.length===a.length?t.removeAttribute("data-rh"):t.getAttribute("data-rh")!==i.join(",")&&t.setAttribute("data-rh",i.join(","))}},G=function(e,n){var t=e.baseTag,r=e.htmlAttributes,o=e.linkTags,a=e.metaTags,i=e.noscriptTags,s=e.onChangeClientState,l=e.scriptTags,c=e.styleTags,d=e.title,u=e.titleAttributes;W(h.BODY,e.bodyAttributes),W(h.HTML,r),function(e,n){void 0!==e&&document.title!==e&&(document.title=$(e)),W(h.TITLE,n)}(d,u);var p={baseTag:Z(h.BASE,t),linkTags:Z(h.LINK,o),metaTags:Z(h.META,a),noscriptTags:Z(h.NOSCRIPT,i),scriptTags:Z(h.SCRIPT,l),styleTags:Z(h.STYLE,c)},f={},m={};Object.keys(p).forEach((function(e){var n=p[e],t=n.newTags,r=n.oldTags;t.length&&(f[e]=t),r.length&&(m[e]=p[e].oldTags)})),n&&n(),s(e,f,m)},K=null,J=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(n=e.call.apply(e,[this].concat(r))||this).rendered=!1,n}f(n,e);var t=n.prototype;return t.shouldComponentUpdate=function(e){return!u()(e,this.props)},t.componentDidUpdate=function(){this.emitChange()},t.componentWillUnmount=function(){this.props.context.helmetInstances.remove(this),this.emitChange()},t.emitChange=function(){var e,n,t=this.props.context,r=t.setHelmet,o=null,a=(e=t.helmetInstances.get().map((function(e){var n=p({},e.props);return delete n.context,n})),{baseTag:_(["href"],e),bodyAttributes:C("bodyAttributes",e),defer:S(e,"defer"),encode:S(e,"encodeSpecialCharacters"),htmlAttributes:C("htmlAttributes",e),linkTags:j(h.LINK,["rel","href"],e),metaTags:j(h.META,["name","charset","http-equiv","property","itemprop"],e),noscriptTags:j(h.NOSCRIPT,["innerHTML"],e),onChangeClientState:P(e),scriptTags:j(h.SCRIPT,["src","innerHTML"],e),styleTags:j(h.STYLE,["cssText"],e),title:E(e),titleAttributes:C("titleAttributes",e),prioritizeSeoTags:T(e,"prioritizeSeoTags")});V.canUseDOM?(n=a,K&&cancelAnimationFrame(K),n.defer?K=requestAnimationFrame((function(){G(n,(function(){K=null}))})):(G(n),K=null)):F&&(o=F(a)),r(o)},t.init=function(){this.rendered||(this.rendered=!0,this.props.context.helmetInstances.add(this),this.emitChange())},t.render=function(){return this.init(),null},n}(r.Component);J.propTypes={context:q.isRequired},J.displayName="HelmetDispatcher";var Y=["children"],Q=["children"],X=function(e){function n(){return e.apply(this,arguments)||this}f(n,e);var t=n.prototype;return t.shouldComponentUpdate=function(e){return!s()(N(this.props,"helmetData"),N(e,"helmetData"))},t.mapNestedChildrenToProps=function(e,n){if(!n)return null;switch(e.type){case h.SCRIPT:case h.NOSCRIPT:return{innerHTML:n};case h.STYLE:return{cssText:n};default:throw new Error("<"+e.type+" /> elements are self-closing and can not contain children. Refer to our API for more information.")}},t.flattenArrayTypeChildren=function(e){var n,t=e.child,r=e.arrayTypeChildren;return p({},r,((n={})[t.type]=[].concat(r[t.type]||[],[p({},e.newChildProps,this.mapNestedChildrenToProps(t,e.nestedChildren))]),n))},t.mapObjectTypeChildren=function(e){var n,t,r=e.child,o=e.newProps,a=e.newChildProps,i=e.nestedChildren;switch(r.type){case h.TITLE:return p({},o,((n={})[r.type]=i,n.titleAttributes=p({},a),n));case h.BODY:return p({},o,{bodyAttributes:p({},a)});case h.HTML:return p({},o,{htmlAttributes:p({},a)});default:return p({},o,((t={})[r.type]=p({},a),t))}},t.mapArrayTypeChildrenToProps=function(e,n){var t=p({},n);return Object.keys(e).forEach((function(n){var r;t=p({},t,((r={})[n]=e[n],r))})),t},t.warnOnInvalidChildren=function(e,n){return c()(x.some((function(n){return e.type===n})),"function"==typeof e.type?"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.":"Only elements types "+x.join(", ")+" are allowed. Helmet does not support rendering <"+e.type+"> elements. Refer to our API for more information."),c()(!n||"string"==typeof n||Array.isArray(n)&&!n.some((function(e){return"string"!=typeof e})),"Helmet expects a string as a child of <"+e.type+">. Did you forget to wrap your children in braces? ( <"+e.type+">{``}</"+e.type+"> ) Refer to our API for more information."),!0},t.mapChildrenToProps=function(e,n){var t=this,o={};return r.Children.forEach(e,(function(e){if(e&&e.props){var r=e.props,a=r.children,i=y(r,Y),s=Object.keys(i).reduce((function(e,n){return e[k[n]||n]=i[n],e}),{}),l=e.type;switch("symbol"==typeof l?l=l.toString():t.warnOnInvalidChildren(e,a),l){case h.FRAGMENT:n=t.mapChildrenToProps(a,n);break;case h.LINK:case h.META:case h.NOSCRIPT:case h.SCRIPT:case h.STYLE:o=t.flattenArrayTypeChildren({child:e,arrayTypeChildren:o,newChildProps:s,nestedChildren:a});break;default:n=t.mapObjectTypeChildren({child:e,newProps:n,newChildProps:s,nestedChildren:a})}}})),this.mapArrayTypeChildrenToProps(o,n)},t.render=function(){var e=this.props,n=e.children,t=y(e,Q),o=p({},t),a=t.helmetData;return n&&(o=this.mapChildrenToProps(n,o)),!a||a instanceof U||(a=new U(a.context,a.instances)),a?r.createElement(J,p({},o,{context:a.value,helmetData:void 0})):r.createElement(B.Consumer,null,(function(e){return r.createElement(J,p({},o,{context:e}))}))},n}(r.Component);X.propTypes={base:a().object,bodyAttributes:a().object,children:a().oneOfType([a().arrayOf(a().node),a().node]),defaultTitle:a().string,defer:a().bool,encodeSpecialCharacters:a().bool,htmlAttributes:a().object,link:a().arrayOf(a().object),meta:a().arrayOf(a().object),noscript:a().arrayOf(a().object),onChangeClientState:a().func,script:a().arrayOf(a().object),style:a().arrayOf(a().object),title:a().string,titleAttributes:a().object,titleTemplate:a().string,prioritizeSeoTags:a().bool,helmetData:a().object},X.defaultProps={defer:!0,encodeSpecialCharacters:!0,prioritizeSeoTags:!1},X.displayName="Helmet"},66866:(e,n)=>{"use strict";var t="function"==typeof Symbol&&Symbol.for,r=t?Symbol.for("react.element"):60103,o=t?Symbol.for("react.portal"):60106,a=t?Symbol.for("react.fragment"):60107,i=t?Symbol.for("react.strict_mode"):60108,s=t?Symbol.for("react.profiler"):60114,l=t?Symbol.for("react.provider"):60109,c=t?Symbol.for("react.context"):60110,d=t?Symbol.for("react.async_mode"):60111,u=t?Symbol.for("react.concurrent_mode"):60111,p=t?Symbol.for("react.forward_ref"):60112,f=t?Symbol.for("react.suspense"):60113,m=t?Symbol.for("react.suspense_list"):60120,y=t?Symbol.for("react.memo"):60115,h=t?Symbol.for("react.lazy"):60116,g=t?Symbol.for("react.block"):60121,b=t?Symbol.for("react.fundamental"):60117,v=t?Symbol.for("react.responder"):60118,x=t?Symbol.for("react.scope"):60119;function w(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case r:switch(e=e.type){case d:case u:case a:case s:case i:case f:return e;default:switch(e=e&&e.$$typeof){case c:case p:case h:case y:case l:return e;default:return n}}case o:return n}}}function k(e){return w(e)===u}n.AsyncMode=d,n.ConcurrentMode=u,n.ContextConsumer=c,n.ContextProvider=l,n.Element=r,n.ForwardRef=p,n.Fragment=a,n.Lazy=h,n.Memo=y,n.Portal=o,n.Profiler=s,n.StrictMode=i,n.Suspense=f,n.isAsyncMode=function(e){return k(e)||w(e)===d},n.isConcurrentMode=k,n.isContextConsumer=function(e){return w(e)===c},n.isContextProvider=function(e){return w(e)===l},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},n.isForwardRef=function(e){return w(e)===p},n.isFragment=function(e){return w(e)===a},n.isLazy=function(e){return w(e)===h},n.isMemo=function(e){return w(e)===y},n.isPortal=function(e){return w(e)===o},n.isProfiler=function(e){return w(e)===s},n.isStrictMode=function(e){return w(e)===i},n.isSuspense=function(e){return w(e)===f},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===u||e===s||e===i||e===f||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===h||e.$$typeof===y||e.$$typeof===l||e.$$typeof===c||e.$$typeof===p||e.$$typeof===b||e.$$typeof===v||e.$$typeof===x||e.$$typeof===g)},n.typeOf=w},48570:(e,n,t)=>{"use strict";e.exports=t(66866)},89028:(e,n,t)=>{"use strict";function r(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n}function o(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(){return i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},i.apply(this,arguments)}var s=t(2784),l=[],c=[];var d=s.createContext(null);function u(e){var n=e(),t={loading:!0,loaded:null,error:null};return t.promise=n.then((function(e){return t.loading=!1,t.loaded=e,e})).catch((function(e){throw t.loading=!1,t.error=e,e})),t}function p(e){var n={loading:!1,loaded:{},error:null},t=[];try{Object.keys(e).forEach((function(r){var o=u(e[r]);o.loading?n.loading=!0:(n.loaded[r]=o.loaded,n.error=o.error),t.push(o.promise),o.promise.then((function(e){n.loaded[r]=e})).catch((function(e){n.error=e}))}))}catch(r){n.error=r}return n.promise=Promise.all(t).then((function(e){return n.loading=!1,e})).catch((function(e){throw n.loading=!1,e})),n}function f(e,n){return s.createElement((t=e)&&t.__esModule?t.default:t,n);var t}function m(e,n){var u,p;if(!n.loading)throw new Error("react-loadable requires a `loading` component");var m=i({loader:null,loading:null,delay:200,timeout:null,render:f,webpack:null,modules:null},n),y=null;function h(){return y||(y=e(m.loader)),y.promise}return l.push(h),"function"==typeof m.webpack&&c.push((function(){if((0,m.webpack)().every((function(e){return void 0!==e&&void 0!==t.m[e]})))return h()})),p=u=function(n){function t(t){var r;return a(o(o(r=n.call(this,t)||this)),"retry",(function(){r.setState({error:null,loading:!0,timedOut:!1}),y=e(m.loader),r._loadModule()})),h(),r.state={error:y.error,pastDelay:!1,timedOut:!1,loading:y.loading,loaded:y.loaded},r}r(t,n),t.preload=function(){return h()};var i=t.prototype;return i.UNSAFE_componentWillMount=function(){this._loadModule()},i.componentDidMount=function(){this._mounted=!0},i._loadModule=function(){var e=this;if(this.context&&Array.isArray(m.modules)&&m.modules.forEach((function(n){e.context.report(n)})),y.loading){var n=function(n){e._mounted&&e.setState(n)};"number"==typeof m.delay&&(0===m.delay?this.setState({pastDelay:!0}):this._delay=setTimeout((function(){n({pastDelay:!0})}),m.delay)),"number"==typeof m.timeout&&(this._timeout=setTimeout((function(){n({timedOut:!0})}),m.timeout));var t=function(){n({error:y.error,loaded:y.loaded,loading:y.loading}),e._clearTimeouts()};y.promise.then((function(){return t(),null})).catch((function(e){return t(),null}))}},i.componentWillUnmount=function(){this._mounted=!1,this._clearTimeouts()},i._clearTimeouts=function(){clearTimeout(this._delay),clearTimeout(this._timeout)},i.render=function(){return this.state.loading||this.state.error?s.createElement(m.loading,{isLoading:this.state.loading,pastDelay:this.state.pastDelay,timedOut:this.state.timedOut,error:this.state.error,retry:this.retry}):this.state.loaded?m.render(this.state.loaded,this.props):null},t}(s.Component),a(u,"contextType",d),p}function y(e){return m(u,e)}y.Map=function(e){if("function"!=typeof e.render)throw new Error("LoadableMap requires a `render(loaded, props)` function");return m(p,e)};var h=function(e){function n(){return e.apply(this,arguments)||this}return r(n,e),n.prototype.render=function(){return s.createElement(d.Provider,{value:{report:this.props.report}},s.Children.only(this.props.children))},n}(s.Component);function g(e){for(var n=[];e.length;){var t=e.pop();n.push(t())}return Promise.all(n).then((function(){if(e.length)return g(e)}))}y.Capture=h,y.preloadAll=function(){return new Promise((function(e,n){g(l).then(e,n)}))},y.preloadReady=function(){return new Promise((function(e,n){g(c).then(e,e)}))},e.exports=y},9702:(e,n,t)=>{"use strict";t.d(n,{H:()=>s,f:()=>i});var r=t(7267),o=t(7896),a=t(2784);function i(e,n,t){return void 0===t&&(t=[]),e.some((function(e){var o=e.path?(0,r.LX)(n,e):t.length?t[t.length-1].match:r.F0.computeRootMatch(n);return o&&(t.push({route:e,match:o}),e.routes&&i(e.routes,n,t)),o})),t}function s(e,n,t){return void 0===n&&(n={}),void 0===t&&(t={}),e?a.createElement(r.rs,t,e.map((function(e,t){return a.createElement(r.AW,{key:e.key||t,path:e.path,exact:e.exact,strict:e.strict,render:function(t){return e.render?e.render((0,o.Z)({},t,{},n,{route:e})):a.createElement(e.component,(0,o.Z)({},t,n,{route:e}))}})}))):null}},47933:(e,n,t)=>{"use strict";t.d(n,{OL:()=>x,UT:()=>u,VK:()=>d,rU:()=>g});var r=t(7267),o=t(32222),a=t(2784),i=t(14410),s=t(7896),l=t(31461),c=t(10362),d=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(n=e.call.apply(e,[this].concat(r))||this).history=(0,i.lX)(n.props),n}return(0,o.Z)(n,e),n.prototype.render=function(){return a.createElement(r.F0,{history:this.history,children:this.props.children})},n}(a.Component);var u=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(n=e.call.apply(e,[this].concat(r))||this).history=(0,i.q_)(n.props),n}return(0,o.Z)(n,e),n.prototype.render=function(){return a.createElement(r.F0,{history:this.history,children:this.props.children})},n}(a.Component);var p=function(e,n){return"function"==typeof e?e(n):e},f=function(e,n){return"string"==typeof e?(0,i.ob)(e,null,null,n):e},m=function(e){return e},y=a.forwardRef;void 0===y&&(y=m);var h=y((function(e,n){var t=e.innerRef,r=e.navigate,o=e.onClick,i=(0,l.Z)(e,["innerRef","navigate","onClick"]),c=i.target,d=(0,s.Z)({},i,{onClick:function(e){try{o&&o(e)}catch(n){throw e.preventDefault(),n}e.defaultPrevented||0!==e.button||c&&"_self"!==c||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return d.ref=m!==y&&n||t,a.createElement("a",d)}));var g=y((function(e,n){var t=e.component,o=void 0===t?h:t,d=e.replace,u=e.to,g=e.innerRef,b=(0,l.Z)(e,["component","replace","to","innerRef"]);return a.createElement(r.s6.Consumer,null,(function(e){e||(0,c.Z)(!1);var t=e.history,r=f(p(u,e.location),e.location),l=r?t.createHref(r):"",h=(0,s.Z)({},b,{href:l,navigate:function(){var n=p(u,e.location),r=(0,i.Ep)(e.location)===(0,i.Ep)(f(n));(d||r?t.replace:t.push)(n)}});return m!==y?h.ref=n||g:h.innerRef=g,a.createElement(o,h)}))})),b=function(e){return e},v=a.forwardRef;void 0===v&&(v=b);var x=v((function(e,n){var t=e["aria-current"],o=void 0===t?"page":t,i=e.activeClassName,d=void 0===i?"active":i,u=e.activeStyle,m=e.className,y=e.exact,h=e.isActive,x=e.location,w=e.sensitive,k=e.strict,S=e.style,E=e.to,P=e.innerRef,C=(0,l.Z)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return a.createElement(r.s6.Consumer,null,(function(e){e||(0,c.Z)(!1);var t=x||e.location,i=f(p(E,t),t),l=i.pathname,_=l&&l.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),j=_?(0,r.LX)(t.pathname,{path:_,exact:y,sensitive:w,strict:k}):null,T=!!(h?h(j,t):j),$="function"==typeof m?m(T):m,O="function"==typeof S?S(T):S;T&&($=function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return n.filter((function(e){return e})).join(" ")}($,d),O=(0,s.Z)({},O,u));var N=(0,s.Z)({"aria-current":T&&o||null,className:$,style:O,to:i},C);return b!==v?N.ref=n||P:N.innerRef=P,a.createElement(g,N)}))}))},7267:(e,n,t)=>{"use strict";t.d(n,{AW:()=>E,F0:()=>v,LX:()=>S,TH:()=>R,k6:()=>N,rs:()=>$,s6:()=>b});var r=t(32222),o=t(2784),a=t(13980),i=t.n(a),s=t(14410),l=t(10362),c=t(7896),d=t(79056),u=t.n(d),p=(t(48570),t(31461)),f=(t(73463),1073741823),m="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==t.g?t.g:{};var y=o.createContext||function(e,n){var t,a,s="__create-react-context-"+function(){var e="__global_unique_id__";return m[e]=(m[e]||0)+1}()+"__",l=function(e){function t(){for(var n,t,r,o=arguments.length,a=new Array(o),i=0;i<o;i++)a[i]=arguments[i];return(n=e.call.apply(e,[this].concat(a))||this).emitter=(t=n.props.value,r=[],{on:function(e){r.push(e)},off:function(e){r=r.filter((function(n){return n!==e}))},get:function(){return t},set:function(e,n){t=e,r.forEach((function(e){return e(t,n)}))}}),n}(0,r.Z)(t,e);var o=t.prototype;return o.getChildContext=function(){var e;return(e={})[s]=this.emitter,e},o.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var t,r=this.props.value,o=e.value;((a=r)===(i=o)?0!==a||1/a==1/i:a!=a&&i!=i)?t=0:(t="function"==typeof n?n(r,o):f,0!==(t|=0)&&this.emitter.set(e.value,t))}var a,i},o.render=function(){return this.props.children},t}(o.Component);l.childContextTypes=((t={})[s]=i().object.isRequired,t);var c=function(n){function t(){for(var e,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(e=n.call.apply(n,[this].concat(r))||this).observedBits=void 0,e.state={value:e.getValue()},e.onUpdate=function(n,t){0!=((0|e.observedBits)&t)&&e.setState({value:e.getValue()})},e}(0,r.Z)(t,n);var o=t.prototype;return o.componentWillReceiveProps=function(e){var n=e.observedBits;this.observedBits=null==n?f:n},o.componentDidMount=function(){this.context[s]&&this.context[s].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?f:e},o.componentWillUnmount=function(){this.context[s]&&this.context[s].off(this.onUpdate)},o.getValue=function(){return this.context[s]?this.context[s].get():e},o.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},t}(o.Component);return c.contextTypes=((a={})[s]=i().object,a),{Provider:l,Consumer:c}},h=function(e){var n=y();return n.displayName=e,n},g=h("Router-History"),b=h("Router"),v=function(e){function n(n){var t;return(t=e.call(this,n)||this).state={location:n.history.location},t._isMounted=!1,t._pendingLocation=null,n.staticContext||(t.unlisten=n.history.listen((function(e){t._pendingLocation=e}))),t}(0,r.Z)(n,e),n.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var t=n.prototype;return t.componentDidMount=function(){var e=this;this._isMounted=!0,this.unlisten&&this.unlisten(),this.props.staticContext||(this.unlisten=this.props.history.listen((function(n){e._isMounted&&e.setState({location:n})}))),this._pendingLocation&&this.setState({location:this._pendingLocation})},t.componentWillUnmount=function(){this.unlisten&&(this.unlisten(),this._isMounted=!1,this._pendingLocation=null)},t.render=function(){return o.createElement(b.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o.createElement(g.Provider,{children:this.props.children||null,value:this.props.history}))},n}(o.Component);o.Component;o.Component;var x={},w=1e4,k=0;function S(e,n){void 0===n&&(n={}),("string"==typeof n||Array.isArray(n))&&(n={path:n});var t=n,r=t.path,o=t.exact,a=void 0!==o&&o,i=t.strict,s=void 0!==i&&i,l=t.sensitive,c=void 0!==l&&l;return[].concat(r).reduce((function(n,t){if(!t&&""!==t)return null;if(n)return n;var r=function(e,n){var t=""+n.end+n.strict+n.sensitive,r=x[t]||(x[t]={});if(r[e])return r[e];var o=[],a={regexp:u()(e,o,n),keys:o};return k<w&&(r[e]=a,k++),a}(t,{end:a,strict:s,sensitive:c}),o=r.regexp,i=r.keys,l=o.exec(e);if(!l)return null;var d=l[0],p=l.slice(1),f=e===d;return a&&!f?null:{path:t,url:"/"===t&&""===d?"/":d,isExact:f,params:i.reduce((function(e,n,t){return e[n.name]=p[t],e}),{})}}),null)}var E=function(e){function n(){return e.apply(this,arguments)||this}return(0,r.Z)(n,e),n.prototype.render=function(){var e=this;return o.createElement(b.Consumer,null,(function(n){n||(0,l.Z)(!1);var t=e.props.location||n.location,r=e.props.computedMatch?e.props.computedMatch:e.props.path?S(t.pathname,e.props):n.match,a=(0,c.Z)({},n,{location:t,match:r}),i=e.props,s=i.children,d=i.component,u=i.render;return Array.isArray(s)&&function(e){return 0===o.Children.count(e)}(s)&&(s=null),o.createElement(b.Provider,{value:a},a.match?s?"function"==typeof s?s(a):s:d?o.createElement(d,a):u?u(a):null:"function"==typeof s?s(a):null)}))},n}(o.Component);function P(e){return"/"===e.charAt(0)?e:"/"+e}function C(e,n){if(!e)return n;var t=P(e);return 0!==n.pathname.indexOf(t)?n:(0,c.Z)({},n,{pathname:n.pathname.substr(t.length)})}function _(e){return"string"==typeof e?e:(0,s.Ep)(e)}function j(e){return function(){(0,l.Z)(!1)}}function T(){}o.Component;var $=function(e){function n(){return e.apply(this,arguments)||this}return(0,r.Z)(n,e),n.prototype.render=function(){var e=this;return o.createElement(b.Consumer,null,(function(n){n||(0,l.Z)(!1);var t,r,a=e.props.location||n.location;return o.Children.forEach(e.props.children,(function(e){if(null==r&&o.isValidElement(e)){t=e;var i=e.props.path||e.props.from;r=i?S(a.pathname,(0,c.Z)({},e.props,{path:i})):n.match}})),r?o.cloneElement(t,{location:a,computedMatch:r}):null}))},n}(o.Component);var O=o.useContext;function N(){return O(g)}function R(){return O(b).location}},79056:(e,n,t)=>{var r=t(77906);e.exports=f,e.exports.parse=a,e.exports.compile=function(e,n){return s(a(e,n),n)},e.exports.tokensToFunction=s,e.exports.tokensToRegExp=p;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,n){for(var t,r=[],a=0,i=0,s="",d=n&&n.delimiter||"/";null!=(t=o.exec(e));){var u=t[0],p=t[1],f=t.index;if(s+=e.slice(i,f),i=f+u.length,p)s+=p[1];else{var m=e[i],y=t[2],h=t[3],g=t[4],b=t[5],v=t[6],x=t[7];s&&(r.push(s),s="");var w=null!=y&&null!=m&&m!==y,k="+"===v||"*"===v,S="?"===v||"*"===v,E=t[2]||d,P=g||b;r.push({name:h||a++,prefix:y||"",delimiter:E,optional:S,repeat:k,partial:w,asterisk:!!x,pattern:P?c(P):x?".*":"[^"+l(E)+"]+?"})}}return i<e.length&&(s+=e.substr(i)),s&&r.push(s),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function s(e,n){for(var t=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(t[o]=new RegExp("^(?:"+e[o].pattern+")$",u(n)));return function(n,o){for(var a="",s=n||{},l=(o||{}).pretty?i:encodeURIComponent,c=0;c<e.length;c++){var d=e[c];if("string"!=typeof d){var u,p=s[d.name];if(null==p){if(d.optional){d.partial&&(a+=d.prefix);continue}throw new TypeError('Expected "'+d.name+'" to be defined')}if(r(p)){if(!d.repeat)throw new TypeError('Expected "'+d.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(d.optional)continue;throw new TypeError('Expected "'+d.name+'" to not be empty')}for(var f=0;f<p.length;f++){if(u=l(p[f]),!t[c].test(u))throw new TypeError('Expected all "'+d.name+'" to match "'+d.pattern+'", but received `'+JSON.stringify(u)+"`");a+=(0===f?d.prefix:d.delimiter)+u}}else{if(u=d.asterisk?encodeURI(p).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):l(p),!t[c].test(u))throw new TypeError('Expected "'+d.name+'" to match "'+d.pattern+'", but received "'+u+'"');a+=d.prefix+u}}else a+=d}return a}}function l(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function d(e,n){return e.keys=n,e}function u(e){return e&&e.sensitive?"":"i"}function p(e,n,t){r(n)||(t=n||t,n=[]);for(var o=(t=t||{}).strict,a=!1!==t.end,i="",s=0;s<e.length;s++){var c=e[s];if("string"==typeof c)i+=l(c);else{var p=l(c.prefix),f="(?:"+c.pattern+")";n.push(c),c.repeat&&(f+="(?:"+p+f+")*"),i+=f=c.optional?c.partial?p+"("+f+")?":"(?:"+p+"("+f+"))?":p+"("+f+")"}}var m=l(t.delimiter||"/"),y=i.slice(-m.length)===m;return o||(i=(y?i.slice(0,-m.length):i)+"(?:"+m+"(?=$))?"),i+=a?"$":o&&y?"":"(?="+m+"|$)",d(new RegExp("^"+i,u(t)),n)}function f(e,n,t){return r(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return d(e,n)}(e,n):r(e)?function(e,n,t){for(var r=[],o=0;o<e.length;o++)r.push(f(e[o],n,t).source);return d(new RegExp("(?:"+r.join("|")+")",u(t)),n)}(e,n,t):function(e,n,t){return p(a(e,t),n,t)}(e,n,t)}},11837:(e,n,t)=>{"use strict";var r=t(2784),o=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,t){var r,a={},c=null,d=null;for(r in void 0!==t&&(c=""+t),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(d=n.ref),n)i.call(n,r)&&!l.hasOwnProperty(r)&&(a[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===a[r]&&(a[r]=n[r]);return{$$typeof:o,type:e,key:c,ref:d,props:a,_owner:s.current}}n.Fragment=a,n.jsx=c,n.jsxs=c},83426:(e,n)=>{"use strict";var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),f=Symbol.iterator;var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y=Object.assign,h={};function g(e,n,t){this.props=e,this.context=n,this.refs=h,this.updater=t||m}function b(){}function v(e,n,t){this.props=e,this.context=n,this.refs=h,this.updater=t||m}g.prototype.isReactComponent={},g.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=g.prototype;var x=v.prototype=new b;x.constructor=v,y(x,g.prototype),x.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},E={key:!0,ref:!0,__self:!0,__source:!0};function P(e,n,r){var o,a={},i=null,s=null;if(null!=n)for(o in void 0!==n.ref&&(s=n.ref),void 0!==n.key&&(i=""+n.key),n)k.call(n,o)&&!E.hasOwnProperty(o)&&(a[o]=n[o]);var l=arguments.length-2;if(1===l)a.children=r;else if(1<l){for(var c=Array(l),d=0;d<l;d++)c[d]=arguments[d+2];a.children=c}if(e&&e.defaultProps)for(o in l=e.defaultProps)void 0===a[o]&&(a[o]=l[o]);return{$$typeof:t,type:e,key:i,ref:s,props:a,_owner:S.current}}function C(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var _=/\/+/g;function j(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function T(e,n,o,a,i){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case t:case r:l=!0}}if(l)return i=i(l=e),e=""===a?"."+j(l,0):a,w(i)?(o="",null!=e&&(o=e.replace(_,"$&/")+"/"),T(i,n,o,"",(function(e){return e}))):null!=i&&(C(i)&&(i=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(i,o+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(_,"$&/")+"/")+e)),n.push(i)),1;if(l=0,a=""===a?".":a+":",w(e))for(var c=0;c<e.length;c++){var d=a+j(s=e[c],c);l+=T(s,n,o,d,i)}else if(d=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof d)for(e=d.call(e),c=0;!(s=e.next()).done;)l+=T(s=s.value,n,o,d=a+j(s,c++),i);else if("object"===s)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return l}function $(e,n,t){if(null==e)return e;var r=[],o=0;return T(e,r,"","",(function(e){return n.call(t,e,o++)})),r}function O(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var N={current:null},R={transition:null},A={ReactCurrentDispatcher:N,ReactCurrentBatchConfig:R,ReactCurrentOwner:S};n.Children={map:$,forEach:function(e,n,t){$(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return $(e,(function(){n++})),n},toArray:function(e){return $(e,(function(e){return e}))||[]},only:function(e){if(!C(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=g,n.Fragment=o,n.Profiler=i,n.PureComponent=v,n.StrictMode=a,n.Suspense=d,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=A,n.cloneElement=function(e,n,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=y({},e.props),a=e.key,i=e.ref,s=e._owner;if(null!=n){if(void 0!==n.ref&&(i=n.ref,s=S.current),void 0!==n.key&&(a=""+n.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(c in n)k.call(n,c)&&!E.hasOwnProperty(c)&&(o[c]=void 0===n[c]&&void 0!==l?l[c]:n[c])}var c=arguments.length-2;if(1===c)o.children=r;else if(1<c){l=Array(c);for(var d=0;d<c;d++)l[d]=arguments[d+2];o.children=l}return{$$typeof:t,type:e.type,key:a,ref:i,props:o,_owner:s}},n.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},n.createElement=P,n.createFactory=function(e){var n=P.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:c,render:e}},n.isValidElement=C,n.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:O}},n.memo=function(e,n){return{$$typeof:u,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=R.transition;R.transition={};try{e()}finally{R.transition=n}},n.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},n.useCallback=function(e,n){return N.current.useCallback(e,n)},n.useContext=function(e){return N.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return N.current.useDeferredValue(e)},n.useEffect=function(e,n){return N.current.useEffect(e,n)},n.useId=function(){return N.current.useId()},n.useImperativeHandle=function(e,n,t){return N.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return N.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return N.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return N.current.useMemo(e,n)},n.useReducer=function(e,n,t){return N.current.useReducer(e,n,t)},n.useRef=function(e){return N.current.useRef(e)},n.useState=function(e){return N.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return N.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return N.current.useTransition()},n.version="18.2.0"},2784:(e,n,t)=>{"use strict";e.exports=t(83426)},52322:(e,n,t)=>{"use strict";e.exports=t(11837)},46475:(e,n)=>{"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,o=e[r];if(!(0<a(o,n)))break e;e[r]=n,e[t]=o,t=r}}function r(e){return 0===e.length?null:e[0]}function o(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,o=e.length,i=o>>>1;r<i;){var s=2*(r+1)-1,l=e[s],c=s+1,d=e[c];if(0>a(l,t))c<o&&0>a(d,l)?(e[r]=d,e[c]=t,r=c):(e[r]=l,e[s]=t,r=s);else{if(!(c<o&&0>a(d,t)))break e;e[r]=d,e[c]=t,r=c}}}return n}function a(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;n.unstable_now=function(){return i.now()}}else{var s=Date,l=s.now();n.unstable_now=function(){return s.now()-l}}var c=[],d=[],u=1,p=null,f=3,m=!1,y=!1,h=!1,g="function"==typeof setTimeout?setTimeout:null,b="function"==typeof clearTimeout?clearTimeout:null,v="undefined"!=typeof setImmediate?setImmediate:null;function x(e){for(var n=r(d);null!==n;){if(null===n.callback)o(d);else{if(!(n.startTime<=e))break;o(d),n.sortIndex=n.expirationTime,t(c,n)}n=r(d)}}function w(e){if(h=!1,x(e),!y)if(null!==r(c))y=!0,R(k);else{var n=r(d);null!==n&&A(w,n.startTime-e)}}function k(e,t){y=!1,h&&(h=!1,b(C),C=-1),m=!0;var a=f;try{for(x(t),p=r(c);null!==p&&(!(p.expirationTime>t)||e&&!T());){var i=p.callback;if("function"==typeof i){p.callback=null,f=p.priorityLevel;var s=i(p.expirationTime<=t);t=n.unstable_now(),"function"==typeof s?p.callback=s:p===r(c)&&o(c),x(t)}else o(c);p=r(c)}if(null!==p)var l=!0;else{var u=r(d);null!==u&&A(w,u.startTime-t),l=!1}return l}finally{p=null,f=a,m=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,E=!1,P=null,C=-1,_=5,j=-1;function T(){return!(n.unstable_now()-j<_)}function $(){if(null!==P){var e=n.unstable_now();j=e;var t=!0;try{t=P(!0,e)}finally{t?S():(E=!1,P=null)}}else E=!1}if("function"==typeof v)S=function(){v($)};else if("undefined"!=typeof MessageChannel){var O=new MessageChannel,N=O.port2;O.port1.onmessage=$,S=function(){N.postMessage(null)}}else S=function(){g($,0)};function R(e){P=e,E||(E=!0,S())}function A(e,t){C=g((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){y||m||(y=!0,R(k))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):_=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return f},n.unstable_getFirstCallbackNode=function(){return r(c)},n.unstable_next=function(e){switch(f){case 1:case 2:case 3:var n=3;break;default:n=f}var t=f;f=n;try{return e()}finally{f=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=f;f=e;try{return n()}finally{f=t}},n.unstable_scheduleCallback=function(e,o,a){var i=n.unstable_now();switch("object"==typeof a&&null!==a?a="number"==typeof(a=a.delay)&&0<a?i+a:i:a=i,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:u++,callback:o,priorityLevel:e,startTime:a,expirationTime:s=a+s,sortIndex:-1},a>i?(e.sortIndex=a,t(d,e),null===r(c)&&e===r(d)&&(h?(b(C),C=-1):h=!0,A(w,a-i))):(e.sortIndex=s,t(c,e),y||m||(y=!0,R(k))),e},n.unstable_shouldYield=T,n.unstable_wrapCallback=function(e){var n=f;return function(){var t=f;f=n;try{return e.apply(this,arguments)}finally{f=t}}}},14616:(e,n,t)=>{"use strict";e.exports=t(46475)},88665:e=>{e.exports=function(e,n,t,r){var o=t?t.call(r,e,n):void 0;if(void 0!==o)return!!o;if(e===n)return!0;if("object"!=typeof e||!e||"object"!=typeof n||!n)return!1;var a=Object.keys(e),i=Object.keys(n);if(a.length!==i.length)return!1;for(var s=Object.prototype.hasOwnProperty.bind(n),l=0;l<a.length;l++){var c=a[l];if(!s(c))return!1;var d=e[c],u=n[c];if(!1===(o=t?t.call(r,d,u,c):void 0)||void 0===o&&d!==u)return!1}return!0}},7896:(e,n,t)=>{"use strict";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},r.apply(this,arguments)}t.d(n,{Z:()=>r})},32222:(e,n,t)=>{"use strict";function r(e,n){return r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,n){return e.__proto__=n,e},r(e,n)}function o(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,r(e,n)}t.d(n,{Z:()=>o})},31461:(e,n,t)=>{"use strict";function r(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}t.d(n,{Z:()=>r})},40489:(e,n,t)=>{"use strict";function r(e){var n,t,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e)){var a=e.length;for(n=0;n<a;n++)e[n]&&(t=r(e[n]))&&(o&&(o+=" "),o+=t)}else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}t.d(n,{Z:()=>o});const o=function(){for(var e,n,t=0,o="",a=arguments.length;t<a;t++)(e=arguments[t])&&(n=r(e))&&(o&&(o+=" "),o+=n);return o}},16935:(e,n,t)=>{"use strict";t.d(n,{p1:()=>_,y$:()=>ee});var r,o,a,i,s,l,c,d=t(2784),u=t(40489),p=Object.create,f=Object.defineProperty,m=Object.defineProperties,y=Object.getOwnPropertyDescriptor,h=Object.getOwnPropertyDescriptors,g=Object.getOwnPropertyNames,b=Object.getOwnPropertySymbols,v=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty,w=Object.prototype.propertyIsEnumerable,k=(e,n,t)=>n in e?f(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,S=(e,n)=>{for(var t in n||(n={}))x.call(n,t)&&k(e,t,n[t]);if(b)for(var t of b(n))w.call(n,t)&&k(e,t,n[t]);return e},E=(e,n)=>m(e,h(n)),P=(e,n)=>{var t={};for(var r in e)x.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&b)for(var r of b(e))n.indexOf(r)<0&&w.call(e,r)&&(t[r]=e[r]);return t},C=(r={"../../node_modules/.pnpm/prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu/node_modules/prismjs/prism.js"(e,n){var t=function(){var e=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,n=0,t={},r={util:{encode:function e(n){return n instanceof o?new o(n.type,e(n.content),n.alias):Array.isArray(n)?n.map(e):n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++n}),e.__id},clone:function e(n,t){var o,a;switch(t=t||{},r.util.type(n)){case"Object":if(a=r.util.objId(n),t[a])return t[a];for(var i in o={},t[a]=o,n)n.hasOwnProperty(i)&&(o[i]=e(n[i],t));return o;case"Array":return a=r.util.objId(n),t[a]?t[a]:(o=[],t[a]=o,n.forEach((function(n,r){o[r]=e(n,t)})),o);default:return n}},getLanguage:function(n){for(;n;){var t=e.exec(n.className);if(t)return t[1].toLowerCase();n=n.parentElement}return"none"},setLanguage:function(n,t){n.className=n.className.replace(RegExp(e,"gi"),""),n.classList.add("language-"+t)},isActive:function(e,n,t){for(var r="no-"+n;e;){var o=e.classList;if(o.contains(n))return!0;if(o.contains(r))return!1;e=e.parentElement}return!!t}},languages:{plain:t,plaintext:t,text:t,txt:t,extend:function(e,n){var t=r.util.clone(r.languages[e]);for(var o in n)t[o]=n[o];return t},insertBefore:function(e,n,t,o){var a=(o=o||r.languages)[e],i={};for(var s in a)if(a.hasOwnProperty(s)){if(s==n)for(var l in t)t.hasOwnProperty(l)&&(i[l]=t[l]);t.hasOwnProperty(s)||(i[s]=a[s])}var c=o[e];return o[e]=i,r.languages.DFS(r.languages,(function(n,t){t===c&&n!=e&&(this[n]=i)})),i},DFS:function e(n,t,o,a){a=a||{};var i=r.util.objId;for(var s in n)if(n.hasOwnProperty(s)){t.call(n,s,n[s],o||s);var l=n[s],c=r.util.type(l);"Object"!==c||a[i(l)]?"Array"!==c||a[i(l)]||(a[i(l)]=!0,e(l,t,s,a)):(a[i(l)]=!0,e(l,t,null,a))}}},plugins:{},highlight:function(e,n,t){var a={code:e,grammar:n,language:t};if(r.hooks.run("before-tokenize",a),!a.grammar)throw new Error('The language "'+a.language+'" has no grammar.');return a.tokens=r.tokenize(a.code,a.grammar),r.hooks.run("after-tokenize",a),o.stringify(r.util.encode(a.tokens),a.language)},tokenize:function(e,n){var t=n.rest;if(t){for(var r in t)n[r]=t[r];delete n.rest}var o=new s;return l(o,o.head,e),i(e,o,n,o.head,0),function(e){for(var n=[],t=e.head.next;t!==e.tail;)n.push(t.value),t=t.next;return n}(o)},hooks:{all:{},add:function(e,n){var t=r.hooks.all;t[e]=t[e]||[],t[e].push(n)},run:function(e,n){var t=r.hooks.all[e];if(t&&t.length)for(var o,a=0;o=t[a++];)o(n)}},Token:o};function o(e,n,t,r){this.type=e,this.content=n,this.alias=t,this.length=0|(r||"").length}function a(e,n,t,r){e.lastIndex=n;var o=e.exec(t);if(o&&r&&o[1]){var a=o[1].length;o.index+=a,o[0]=o[0].slice(a)}return o}function i(e,n,t,s,d,u){for(var p in t)if(t.hasOwnProperty(p)&&t[p]){var f=t[p];f=Array.isArray(f)?f:[f];for(var m=0;m<f.length;++m){if(u&&u.cause==p+","+m)return;var y=f[m],h=y.inside,g=!!y.lookbehind,b=!!y.greedy,v=y.alias;if(b&&!y.pattern.global){var x=y.pattern.toString().match(/[imsuy]*$/)[0];y.pattern=RegExp(y.pattern.source,x+"g")}for(var w=y.pattern||y,k=s.next,S=d;k!==n.tail&&!(u&&S>=u.reach);S+=k.value.length,k=k.next){var E=k.value;if(n.length>e.length)return;if(!(E instanceof o)){var P,C=1;if(b){if(!(P=a(w,S,e,g))||P.index>=e.length)break;var _=P.index,j=P.index+P[0].length,T=S;for(T+=k.value.length;_>=T;)T+=(k=k.next).value.length;if(S=T-=k.value.length,k.value instanceof o)continue;for(var $=k;$!==n.tail&&(T<j||"string"==typeof $.value);$=$.next)C++,T+=$.value.length;C--,E=e.slice(S,T),P.index-=S}else if(!(P=a(w,0,E,g)))continue;_=P.index;var O=P[0],N=E.slice(0,_),R=E.slice(_+O.length),A=S+E.length;u&&A>u.reach&&(u.reach=A);var L=k.prev;if(N&&(L=l(n,L,N),S+=N.length),c(n,L,C),k=l(n,L,new o(p,h?r.tokenize(O,h):O,v,O)),R&&l(n,k,R),C>1){var D={cause:p+","+m,reach:A};i(e,n,t,k.prev,S,D),u&&D.reach>u.reach&&(u.reach=D.reach)}}}}}}function s(){var e={value:null,prev:null,next:null},n={value:null,prev:e,next:null};e.next=n,this.head=e,this.tail=n,this.length=0}function l(e,n,t){var r=n.next,o={value:t,prev:n,next:r};return n.next=o,r.prev=o,e.length++,o}function c(e,n,t){for(var r=n.next,o=0;o<t&&r!==e.tail;o++)r=r.next;n.next=r,r.prev=n,e.length-=o}return o.stringify=function e(n,t){if("string"==typeof n)return n;if(Array.isArray(n)){var o="";return n.forEach((function(n){o+=e(n,t)})),o}var a={type:n.type,content:e(n.content,t),tag:"span",classes:["token",n.type],attributes:{},language:t},i=n.alias;i&&(Array.isArray(i)?Array.prototype.push.apply(a.classes,i):a.classes.push(i)),r.hooks.run("wrap",a);var s="";for(var l in a.attributes)s+=" "+l+'="'+(a.attributes[l]||"").replace(/"/g,"&quot;")+'"';return"<"+a.tag+' class="'+a.classes.join(" ")+'"'+s+">"+a.content+"</"+a.tag+">"},r}();n.exports=t,t.default=t}},function(){return o||(0,r[g(r)[0]])((o={exports:{}}).exports,o),o.exports}),_=((e,n,t)=>(t=null!=e?p(v(e)):{},((e,n,t,r)=>{if(n&&"object"==typeof n||"function"==typeof n)for(let o of g(n))x.call(e,o)||o===t||f(e,o,{get:()=>n[o],enumerable:!(r=y(n,o))||r.enumerable});return e})(!n&&e&&e.__esModule?t:f(t,"default",{value:e,enumerable:!0}),e)))(C());_.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},_.languages.markup.tag.inside["attr-value"].inside.entity=_.languages.markup.entity,_.languages.markup.doctype.inside["internal-subset"].inside=_.languages.markup,_.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(_.languages.markup.tag,"addInlined",{value:function(e,n){var t;(n=((t=((t={})["language-"+n]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:_.languages[n]},t.cdata=/^<!\[CDATA\[|\]\]>$/i,{"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:t}}))["language-"+n]={pattern:/[\s\S]+/,inside:_.languages[n]},{}))[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:t},_.languages.insertBefore("markup","cdata",n)}}),Object.defineProperty(_.languages.markup.tag,"addAttribute",{value:function(e,n){_.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[n,"language-"+n],inside:_.languages[n]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),_.languages.html=_.languages.markup,_.languages.mathml=_.languages.markup,_.languages.svg=_.languages.markup,_.languages.xml=_.languages.extend("markup",{}),_.languages.ssml=_.languages.xml,_.languages.atom=_.languages.xml,_.languages.rss=_.languages.xml,a=_,i={pattern:/\\[\\(){}[\]^$+*?|.]/,alias:"escape"},l="(?:[^\\\\-]|"+(s=/\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/).source+")",l=RegExp(l+"-"+l),c={pattern:/(<|')[^<>']+(?=[>']$)/,lookbehind:!0,alias:"variable"},a.languages.regex={"char-class":{pattern:/((?:^|[^\\])(?:\\\\)*)\[(?:[^\\\]]|\\[\s\S])*\]/,lookbehind:!0,inside:{"char-class-negation":{pattern:/(^\[)\^/,lookbehind:!0,alias:"operator"},"char-class-punctuation":{pattern:/^\[|\]$/,alias:"punctuation"},range:{pattern:l,inside:{escape:s,"range-punctuation":{pattern:/-/,alias:"operator"}}},"special-escape":i,"char-set":{pattern:/\\[wsd]|\\p\{[^{}]+\}/i,alias:"class-name"},escape:s}},"special-escape":i,"char-set":{pattern:/\.|\\[wsd]|\\p\{[^{}]+\}/i,alias:"class-name"},backreference:[{pattern:/\\(?![123][0-7]{2})[1-9]/,alias:"keyword"},{pattern:/\\k<[^<>']+>/,alias:"keyword",inside:{"group-name":c}}],anchor:{pattern:/[$^]|\\[ABbGZz]/,alias:"function"},escape:s,group:[{pattern:/\((?:\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,alias:"punctuation",inside:{"group-name":c}},{pattern:/\)/,alias:"punctuation"}],quantifier:{pattern:/(?:[+*?]|\{\d+(?:,\d*)?\})[?+]?/,alias:"number"},alternation:{pattern:/\|/,alias:"keyword"}},_.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},_.languages.javascript=_.languages.extend("clike",{"class-name":[_.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),_.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,_.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source+/\//.source+"(?:"+/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source+"|"+/(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+")"+/(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:_.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:_.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:_.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:_.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:_.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),_.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:_.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),_.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),_.languages.markup&&(_.languages.markup.tag.addInlined("script","javascript"),_.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),_.languages.js=_.languages.javascript,_.languages.actionscript=_.languages.extend("javascript",{keyword:/\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\b/,operator:/\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/}),_.languages.actionscript["class-name"].alias="function",delete _.languages.actionscript.parameter,delete _.languages.actionscript["literal-property"],_.languages.markup&&_.languages.insertBefore("actionscript","string",{xml:{pattern:/(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,lookbehind:!0,inside:_.languages.markup}}),function(e){var n=/#(?!\{).+/,t={pattern:/#\{[^}]+\}/,alias:"variable"};e.languages.coffeescript=e.languages.extend("javascript",{comment:n,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:t}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),e.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:n,interpolation:t}}}),e.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},script:{pattern:/[\s\S]+/,alias:"language-javascript",inside:e.languages.javascript}}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:t}}]}),e.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete e.languages.coffeescript["template-string"],e.languages.coffee=e.languages.coffeescript}(_),function(e){var n=e.languages.javadoclike={parameter:{pattern:/(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m,lookbehind:!0},keyword:{pattern:/(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,lookbehind:!0},punctuation:/[{}]/};Object.defineProperty(n,"addSupport",{value:function(n,t){(n="string"==typeof n?[n]:n).forEach((function(n){var r=function(e){e.inside||(e.inside={}),e.inside.rest=t},o="doc-comment";if(a=e.languages[n]){var a,i=a[o];if((i=i||(a=e.languages.insertBefore(n,"comment",{"doc-comment":{pattern:/(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,lookbehind:!0,alias:"comment"}}))[o])instanceof RegExp&&(i=a[o]={pattern:i}),Array.isArray(i))for(var s=0,l=i.length;s<l;s++)i[s]instanceof RegExp&&(i[s]={pattern:i[s]}),r(i[s]);else r(i)}}))}}),n.addSupport(["java","javascript","php"],n)}(_),function(e){var n=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;(n=(e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:"+/[^;{\s"']|\s+(?!\s)/.source+"|"+n.source+")*?"+/(?:;|(?=\s*\{))/.source),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+n.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+n.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+n.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:n,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css,e.languages.markup))&&(n.tag.addInlined("style","css"),n.tag.addAttribute("style","css"))}(_),function(e){var n=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,t=(n=(e.languages.css.selector={pattern:e.languages.css.selector.pattern,lookbehind:!0,inside:n={"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-\w]+/,id:/#[-\w]+/,attribute:{pattern:RegExp("\\[(?:[^[\\]\"']|"+n.source+")*\\]"),greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},"attr-name":{pattern:/^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,lookbehind:!0},"attr-value":[n,{pattern:/(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],combinator:/>|\+|~|\|\|/,punctuation:/[(),]/}},e.languages.css.atrule.inside["selector-function-argument"].inside=n,e.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,lookbehind:!0}}),{pattern:/(\b\d+)(?:%|[a-z]+(?![\w-]))/,lookbehind:!0}),{pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0});e.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:{pattern:/\B#[\da-f]{3,8}\b/i,alias:"color"},color:[{pattern:/(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,lookbehind:!0},{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:n,number:t,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:n,number:t})}(_),function(e){var n=/[*&][^\s[\]{},]+/,t=/!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,r="(?:"+t.source+"(?:[ \t]+"+n.source+")?|"+n.source+"(?:[ \t]+"+t.source+")?)",o=/(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g,(function(){return/[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source})),a=/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;function i(e,n){n=(n||"").replace(/m/g,"")+"m";var t=/([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<value>>/g,(function(){return e}));return RegExp(t,n)}e.languages.yaml={scalar:{pattern:RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g,(function(){return r}))),lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<key>>/g,(function(){return"(?:"+o+"|"+a+")"}))),lookbehind:!0,greedy:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:i(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),lookbehind:!0,alias:"number"},boolean:{pattern:i(/false|true/.source,"i"),lookbehind:!0,alias:"important"},null:{pattern:i(/null|~/.source,"i"),lookbehind:!0,alias:"important"},string:{pattern:i(a),lookbehind:!0,greedy:!0},number:{pattern:i(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,"i"),lookbehind:!0},tag:t,important:n,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},e.languages.yml=e.languages.yaml}(_),function(e){var n=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;function t(e){return e=e.replace(/<inner>/g,(function(){return n})),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var r=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,o=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,(function(){return r})),a=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source,i=(e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"front-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:e.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+o+a+"(?:"+o+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+o+a+")(?:"+o+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(r),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+o+")"+a+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+o+"$"),inside:{"table-header":{pattern:RegExp(r),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:t(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:t(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:t(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:t(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach((function(n){["url","bold","italic","strike","code-snippet"].forEach((function(t){n!==t&&(e.languages.markdown[n].inside.content.inside[t]=e.languages.markdown[t])}))})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(n){if(n&&"string"!=typeof n)for(var t=0,r=n.length;t<r;t++){var o,a=n[t];"code"!==a.type?e(a.content):(o=a.content[1],a=a.content[3],o&&a&&"code-language"===o.type&&"code-block"===a.type&&"string"==typeof o.content&&(o=o.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp"),o="language-"+(o=(/[a-z][\w-]*/i.exec(o)||[""])[0].toLowerCase()),a.alias?"string"==typeof a.alias?a.alias=[a.alias,o]:a.alias.push(o):a.alias=[o]))}}(e.tokens)})),e.hooks.add("wrap",(function(n){if("code-block"===n.type){for(var t="",r=0,o=n.classes.length;r<o;r++){var a=n.classes[r];if(a=/language-(.+)/.exec(a)){t=a[1];break}}var c,d=e.languages[t];d?n.content=e.highlight(n.content.replace(i,"").replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi,(function(e,n){var t;return"#"===(n=n.toLowerCase())[0]?(t="x"===n[1]?parseInt(n.slice(2),16):Number(n.slice(1)),l(t)):s[n]||e})),d,t):t&&"none"!==t&&e.plugins.autoloader&&(c="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random()),n.attributes.id=c,e.plugins.autoloader.loadLanguages(t,(function(){var n=document.getElementById(c);n&&(n.innerHTML=e.highlight(n.textContent,e.languages[t],t))})))}})),RegExp(e.languages.markup.tag.pattern.source,"gi")),s={amp:"&",lt:"<",gt:">",quot:'"'},l=String.fromCodePoint||String.fromCharCode;e.languages.md=e.languages.markdown}(_),_.languages.graphql={comment:/#.*/,description:{pattern:/(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,greedy:!0,alias:"string",inside:{"language-markdown":{pattern:/(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,lookbehind:!0,inside:_.languages.markdown}}},string:{pattern:/"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:false|true)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"atom-input":{pattern:/\b[A-Z]\w*Input\b/,alias:"class-name"},scalar:/\b(?:Boolean|Float|ID|Int|String)\b/,constant:/\b[A-Z][A-Z_\d]*\b/,"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-mutation":{pattern:/(\bmutation\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-query":{pattern:/(\bquery\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,operator:/[!=|&]|\.{3}/,"property-query":/\w+(?=\s*\()/,object:/\w+(?=\s*\{)/,punctuation:/[!(){}\[\]:=,]/,property:/\w+/},_.hooks.add("after-tokenize",(function(e){if("graphql"===e.language)for(var n=e.tokens.filter((function(e){return"string"!=typeof e&&"comment"!==e.type&&"scalar"!==e.type})),t=0;t<n.length;){var r=n[t++];if("keyword"===r.type&&"mutation"===r.content){var o=[];if(u(["definition-mutation","punctuation"])&&"("===d(1).content){t+=2;var a=p(/^\($/,/^\)$/);if(-1===a)continue;for(;t<a;t++){var i=d(0);"variable"===i.type&&(f(i,"variable-input"),o.push(i.content))}t=a+1}if(u(["punctuation","property-query"])&&"{"===d(0).content&&(t++,f(d(0),"property-mutation"),0<o.length)){var s=p(/^\{$/,/^\}$/);if(-1!==s)for(var l=t;l<s;l++){var c=n[l];"variable"===c.type&&0<=o.indexOf(c.content)&&f(c,"variable-input")}}}}function d(e){return n[t+e]}function u(e,n){n=n||0;for(var t=0;t<e.length;t++){var r=d(t+n);if(!r||r.type!==e[t])return}return 1}function p(e,r){for(var o=1,a=t;a<n.length;a++){var i=n[a],s=i.content;if("punctuation"===i.type&&"string"==typeof s)if(e.test(s))o++;else if(r.test(s)&&0==--o)return a}return-1}function f(e,n){var t=e.alias;t?Array.isArray(t)||(e.alias=t=[t]):e.alias=t=[],t.push(n)}})),_.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},identifier:{pattern:/(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,greedy:!0,lookbehind:!0,inside:{punctuation:/^`|`$/}},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:FALSE|NULL|TRUE)\b/i,number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){var n=e.languages.javascript["template-string"],t=n.pattern.source,r=n.inside.interpolation,o=r.inside["interpolation-punctuation"],a=r.pattern.source;function i(n,r){if(e.languages[n])return{pattern:RegExp("((?:"+r+")\\s*)"+t),lookbehind:!0,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},"embedded-code":{pattern:/[\s\S]+/,alias:n}}}}function s(n,t,r){return n={code:n,grammar:t,language:r},e.hooks.run("before-tokenize",n),n.tokens=e.tokenize(n.code,n.grammar),e.hooks.run("after-tokenize",n),n.tokens}function l(n,t,i){var l=e.tokenize(n,{interpolation:{pattern:RegExp(a),lookbehind:!0}}),c=0,d={},u=(l=s(l.map((function(e){if("string"==typeof e)return e;var t,r;for(e=e.content;-1!==n.indexOf((r=c++,t="___"+i.toUpperCase()+"_"+r+"___")););return d[t]=e,t})).join(""),t,i),Object.keys(d));return c=0,function n(t){for(var a=0;a<t.length;a++){if(c>=u.length)return;var i,l,p,f,m,y,h,g=t[a];"string"==typeof g||"string"==typeof g.content?(i=u[c],-1!==(h=(y="string"==typeof g?g:g.content).indexOf(i))&&(++c,l=y.substring(0,h),m=d[i],p=void 0,(f={})["interpolation-punctuation"]=o,3===(f=e.tokenize(m,f)).length&&((p=[1,1]).push.apply(p,s(f[1],e.languages.javascript,"javascript")),f.splice.apply(f,p)),p=new e.Token("interpolation",f,r.alias,m),f=y.substring(h+i.length),m=[],l&&m.push(l),m.push(p),f&&(n(y=[f]),m.push.apply(m,y)),"string"==typeof g?(t.splice.apply(t,[a,1].concat(m)),a+=m.length-1):g.content=m)):(h=g.content,Array.isArray(h)?n(h):n([h]))}}(l),new e.Token(i,l,"language-"+i,n)}e.languages.javascript["template-string"]=[i("css",/\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),i("html",/\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),i("svg",/\bsvg/.source),i("markdown",/\b(?:markdown|md)/.source),i("graphql",/\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),i("sql",/\bsql/.source),n].filter(Boolean);var c={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};function d(e){return"string"==typeof e?e:Array.isArray(e)?e.map(d).join(""):d(e.content)}e.hooks.add("after-tokenize",(function(n){n.language in c&&function n(t){for(var r=0,o=t.length;r<o;r++){var a,i,s,c=t[r];"string"!=typeof c&&(a=c.content,Array.isArray(a)?"template-string"===c.type?(c=a[1],3===a.length&&"string"!=typeof c&&"embedded-code"===c.type&&(i=d(c),c=c.alias,c=Array.isArray(c)?c[0]:c,s=e.languages[c])&&(a[1]=l(i,s,c))):n(a):"string"!=typeof a&&n([a]))}}(n.tokens)}))}(_),function(e){e.languages.typescript=e.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/}),e.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete e.languages.typescript.parameter,delete e.languages.typescript["literal-property"];var n=e.languages.extend("typescript",{});delete n["class-name"],e.languages.typescript["class-name"].inside=n,e.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:n}}}}),e.languages.ts=e.languages.typescript}(_),function(e){var n=e.languages.javascript,t=/\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}/.source,r="(@(?:arg|argument|param|property)\\s+(?:"+t+"\\s+)?)";e.languages.jsdoc=e.languages.extend("javadoclike",{parameter:{pattern:RegExp(r+/(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)/.source),lookbehind:!0,inside:{punctuation:/\./}}}),e.languages.insertBefore("jsdoc","keyword",{"optional-parameter":{pattern:RegExp(r+/\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)/.source),lookbehind:!0,inside:{parameter:{pattern:/(^\[)[$\w\xA0-\uFFFF\.]+/,lookbehind:!0,inside:{punctuation:/\./}},code:{pattern:/(=)[\s\S]*(?=\]$)/,lookbehind:!0,inside:n,alias:"language-javascript"},punctuation:/[=[\]]/}},"class-name":[{pattern:RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:<TYPE>\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*/.source.replace(/<TYPE>/g,(function(){return t}))),lookbehind:!0,inside:{punctuation:/\./}},{pattern:RegExp("(@[a-z]+\\s+)"+t),lookbehind:!0,inside:{string:n.string,number:n.number,boolean:n.boolean,keyword:e.languages.typescript.keyword,operator:/=>|\.\.\.|[&|?:*]/,punctuation:/[.,;=<>{}()[\]]/}}],example:{pattern:/(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,lookbehind:!0,inside:{code:{pattern:/^([\t ]*(?:\*\s*)?)\S.*$/m,lookbehind:!0,inside:n,alias:"language-javascript"}}}}),e.languages.javadoclike.addSupport("javascript",e.languages.jsdoc)}(_),function(e){e.languages.flow=e.languages.extend("javascript",{}),e.languages.insertBefore("flow","keyword",{type:[{pattern:/\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\b/,alias:"class-name"}]}),e.languages.flow["function-variable"].pattern=/(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/i,delete e.languages.flow.parameter,e.languages.insertBefore("flow","operator",{"flow-punctuation":{pattern:/\{\||\|\}/,alias:"punctuation"}}),Array.isArray(e.languages.flow.keyword)||(e.languages.flow.keyword=[e.languages.flow.keyword]),e.languages.flow.keyword.unshift({pattern:/(^|[^$]\b)(?:Class|declare|opaque|type)\b(?!\$)/,lookbehind:!0},{pattern:/(^|[^$]\B)\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\b(?!\$)/,lookbehind:!0})}(_),_.languages.n4js=_.languages.extend("javascript",{keyword:/\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/}),_.languages.insertBefore("n4js","constant",{annotation:{pattern:/@+\w+/,alias:"operator"}}),_.languages.n4jsd=_.languages.n4js,function(e){function n(e,n){return RegExp(e.replace(/<ID>/g,(function(){return/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source})),n)}e.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+e.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),e.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+e.languages.javascript.function.source),lookbehind:!0,alias:["function","property-access"]}}),e.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]}),e.languages.insertBefore("javascript","keyword",{imports:{pattern:n(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),lookbehind:!0,inside:e.languages.javascript},exports:{pattern:n(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),lookbehind:!0,inside:e.languages.javascript}}),e.languages.javascript.keyword.unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,alias:"control-flow"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),e.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),e.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:n(/(\.\s*)#?<ID>/.source),lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var t=["function","function-variable","method","method-variable","property-access"],r=0;r<t.length;r++){var o=t[r],a=e.languages.javascript[o];o=(a="RegExp"===e.util.type(a)?e.languages.javascript[o]={pattern:a}:a).inside||{};(a.inside=o)["maybe-class-name"]=/^[A-Z][\s\S]*/}}(_),function(e){var n=e.util.clone(e.languages.javascript),t=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,r=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,o=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function a(e,n){return e=e.replace(/<S>/g,(function(){return t})).replace(/<BRACES>/g,(function(){return r})).replace(/<SPREAD>/g,(function(){return o})),RegExp(e,n)}function i(n){for(var t=[],r=0;r<n.length;r++){var o=n[r],a=!1;"string"!=typeof o&&("tag"===o.type&&o.content[0]&&"tag"===o.content[0].type?"</"===o.content[0].content[0].content?0<t.length&&t[t.length-1].tagName===s(o.content[0].content[1])&&t.pop():"/>"!==o.content[o.content.length-1].content&&t.push({tagName:s(o.content[0].content[1]),openedBraces:0}):0<t.length&&"punctuation"===o.type&&"{"===o.content?t[t.length-1].openedBraces++:0<t.length&&0<t[t.length-1].openedBraces&&"punctuation"===o.type&&"}"===o.content?t[t.length-1].openedBraces--:a=!0),(a||"string"==typeof o)&&0<t.length&&0===t[t.length-1].openedBraces&&(a=s(o),r<n.length-1&&("string"==typeof n[r+1]||"plain-text"===n[r+1].type)&&(a+=s(n[r+1]),n.splice(r+1,1)),0<r&&("string"==typeof n[r-1]||"plain-text"===n[r-1].type)&&(a=s(n[r-1])+a,n.splice(r-1,1),r--),n[r]=new e.Token("plain-text",a,null,a)),o.content&&"string"!=typeof o.content&&i(o.content)}}o=a(o).source,e.languages.jsx=e.languages.extend("markup",n),e.languages.jsx.tag.pattern=a(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.jsx.tag.inside.comment=n.comment,e.languages.insertBefore("inside","attr-name",{spread:{pattern:a(/<SPREAD>/.source),inside:e.languages.jsx}},e.languages.jsx.tag),e.languages.insertBefore("inside","special-attr",{script:{pattern:a(/=<BRACES>/.source),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:e.languages.jsx}}},e.languages.jsx.tag);var s=function(e){return e?"string"==typeof e?e:"string"==typeof e.content?e.content:e.content.map(s).join(""):""};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||i(e.tokens)}))}(_),function(e){var n=e.util.clone(e.languages.typescript);(n=(e.languages.tsx=e.languages.extend("jsx",n),delete e.languages.tsx.parameter,delete e.languages.tsx["literal-property"],e.languages.tsx.tag)).pattern=RegExp(/(^|[^\w$]|(?=<\/))/.source+"(?:"+n.pattern.source+")",n.pattern.flags),n.lookbehind=!0}(_),_.languages.swift={comment:{pattern:/(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/,lookbehind:!0,greedy:!0},"string-literal":[{pattern:RegExp(/(^|[^"#])/.source+"(?:"+/"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source+"|"+/"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source+")"+/(?!["#])/.source),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\\()(?:[^()]|\([^()]*\))*(?=\))/,lookbehind:!0,inside:null},"interpolation-punctuation":{pattern:/^\)|\\\($/,alias:"punctuation"},punctuation:/\\(?=[\r\n])/,string:/[\s\S]+/}},{pattern:RegExp(/(^|[^"#])(#+)/.source+"(?:"+/"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source+"|"+/"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source+")\\2"),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/,lookbehind:!0,inside:null},"interpolation-punctuation":{pattern:/^\)|\\#+\($/,alias:"punctuation"},string:/[\s\S]+/}}],directive:{pattern:RegExp(/#/.source+"(?:"+/(?:elseif|if)\b/.source+"(?:[ \t]*"+/(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source+")+|"+/(?:else|endif)\b/.source+")"),alias:"property",inside:{"directive-name":/^#\w+/,boolean:/\b(?:false|true)\b/,number:/\b\d+(?:\.\d+)*\b/,operator:/!|&&|\|\||[<>]=?/,punctuation:/[(),]/}},literal:{pattern:/#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/,alias:"constant"},"other-directive":{pattern:/#\w+\b/,alias:"property"},attribute:{pattern:/@\w+/,alias:"atrule"},"function-definition":{pattern:/(\bfunc\s+)\w+/,lookbehind:!0,alias:"function"},label:{pattern:/\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/,lookbehind:!0,alias:"important"},keyword:/\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,boolean:/\b(?:false|true)\b/,nil:{pattern:/\bnil\b/,alias:"constant"},"short-argument":/\$\d+\b/,omit:{pattern:/\b_\b/,alias:"keyword"},number:/\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,"class-name":/\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,function:/\b[a-z_]\w*(?=\s*\()/i,constant:/\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,operator:/[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,punctuation:/[{}[\]();,.:\\]/},_.languages.swift["string-literal"].forEach((function(e){e.inside.interpolation.inside=_.languages.swift})),function(e){e.languages.kotlin=e.languages.extend("clike",{keyword:{pattern:/(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,lookbehind:!0},function:[{pattern:/(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/,greedy:!0},{pattern:/(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/,lookbehind:!0,greedy:!0}],number:/\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,operator:/\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/}),delete e.languages.kotlin["class-name"];var n={"interpolation-punctuation":{pattern:/^\$\{?|\}$/,alias:"punctuation"},expression:{pattern:/[\s\S]+/,inside:e.languages.kotlin}};e.languages.insertBefore("kotlin","string",{"string-literal":[{pattern:/"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/,alias:"multiline",inside:{interpolation:{pattern:/\$(?:[a-z_]\w*|\{[^{}]*\})/i,inside:n},string:/[\s\S]+/}},{pattern:/"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/,alias:"singleline",inside:{interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i,lookbehind:!0,inside:n},string:/[\s\S]+/}}],char:{pattern:/'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/,greedy:!0}}),delete e.languages.kotlin.string,e.languages.insertBefore("kotlin","keyword",{annotation:{pattern:/\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/,alias:"builtin"}}),e.languages.insertBefore("kotlin","function",{label:{pattern:/\b\w+@|@\w+\b/,alias:"symbol"}}),e.languages.kt=e.languages.kotlin,e.languages.kts=e.languages.kotlin}(_),_.languages.c=_.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/}),_.languages.insertBefore("c","string",{char:{pattern:/'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,greedy:!0}}),_.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},_.languages.c.string],char:_.languages.c.char,comment:_.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:_.languages.c}}}}),_.languages.insertBefore("c","function",{constant:/\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/}),delete _.languages.c.boolean,_.languages.objectivec=_.languages.extend("c",{string:{pattern:/@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},keyword:/\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete _.languages.objectivec["class-name"],_.languages.objc=_.languages.objectivec,_.languages.reason=_.languages.extend("clike",{string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/}),_.languages.insertBefore("reason","class-name",{char:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,greedy:!0},constructor:/\b[A-Z]\w*\b(?!\s*\.)/,label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete _.languages.reason.function,function(e){for(var n=/\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\//.source,t=0;t<2;t++)n=n.replace(/<self>/g,(function(){return n}));n=n.replace(/<self>/g,(function(){return/[^\s\S]/.source})),e.languages.rust={comment:[{pattern:RegExp(/(^|[^\\])/.source+n),lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/,greedy:!0},char:{pattern:/b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/,greedy:!0},attribute:{pattern:/#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/,greedy:!0,alias:"attr-name",inside:{string:null}},"closure-params":{pattern:/([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/,lookbehind:!0,greedy:!0,inside:{"closure-punctuation":{pattern:/^\||\|$/,alias:"punctuation"},rest:null}},"lifetime-annotation":{pattern:/'\w+/,alias:"symbol"},"fragment-specifier":{pattern:/(\$\w+:)[a-z]+/,lookbehind:!0,alias:"punctuation"},variable:/\$\w+/,"function-definition":{pattern:/(\bfn\s+)\w+/,lookbehind:!0,alias:"function"},"type-definition":{pattern:/(\b(?:enum|struct|trait|type|union)\s+)\w+/,lookbehind:!0,alias:"class-name"},"module-declaration":[{pattern:/(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/,lookbehind:!0,alias:"namespace"},{pattern:/(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/,lookbehind:!0,alias:"namespace",inside:{punctuation:/::/}}],keyword:[/\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/,/\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/],function:/\b[a-z_]\w*(?=\s*(?:::\s*<|\())/,macro:{pattern:/\b\w+!/,alias:"property"},constant:/\b[A-Z_][A-Z_\d]+\b/,"class-name":/\b[A-Z]\w*\b/,namespace:{pattern:/(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/,inside:{punctuation:/::/}},number:/\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/,boolean:/\b(?:false|true)\b/,punctuation:/->|\.\.=|\.{1,3}|::|[{}[\];(),:]/,operator:/[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/},e.languages.rust["closure-params"].inside.rest=e.languages.rust,e.languages.rust.attribute.inside.string=e.languages.rust.string}(_),_.languages.go=_.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,boolean:/\b(?:_|false|iota|nil|true)\b/,number:[/\b0(?:b[01_]+|o[0-7_]+)i?\b/i,/\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,/(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i],operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,builtin:/\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/}),_.languages.insertBefore("go","string",{char:{pattern:/'(?:\\.|[^'\\\r\n]){0,10}'/,greedy:!0}}),delete _.languages.go["class-name"],function(e){var n=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,t=/\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g,(function(){return n.source}));e.languages.cpp=e.languages.extend("c",{"class-name":[{pattern:RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g,(function(){return n.source}))),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:n,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:false|true)\b/}),e.languages.insertBefore("cpp","string",{module:{pattern:RegExp(/(\b(?:import|module)\s+)/.source+"(?:"+/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source+"|"+/<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g,(function(){return t}))+")"),lookbehind:!0,greedy:!0,inside:{string:/^[<"][\s\S]+/,operator:/:/,punctuation:/\./}},"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),e.languages.insertBefore("cpp","keyword",{"generic-function":{pattern:/\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,inside:{function:/^\w+/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:e.languages.cpp}}}}),e.languages.insertBefore("cpp","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}}),e.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend("cpp",{})}}),e.languages.insertBefore("inside","double-colon",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},e.languages.cpp["base-clause"])}(_),_.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},_.languages.python["string-interpolation"].inside.interpolation.inside.rest=_.languages.python,_.languages.py=_.languages.python;((e,n)=>{for(var t in n)f(e,t,{get:n[t],enumerable:!0})})({},{dracula:()=>j,duotoneDark:()=>T,duotoneLight:()=>$,github:()=>O,jettwaveDark:()=>H,jettwaveLight:()=>V,nightOwl:()=>N,nightOwlLight:()=>R,oceanicNext:()=>D,okaidia:()=>I,oneDark:()=>Z,oneLight:()=>W,palenight:()=>M,shadesOfPurple:()=>F,synthwave84:()=>z,ultramin:()=>U,vsDark:()=>B,vsLight:()=>q});var j={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]},T={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]},$={plain:{backgroundColor:"#faf8f5",color:"#728fcb"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#b6ad9a"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#063289"}},{types:["property","function"],style:{color:"#b29762"}},{types:["tag-id","selector","atrule-id"],style:{color:"#2d2006"}},{types:["attr-name"],style:{color:"#896724"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","atrule"],style:{color:"#728fcb"}},{types:["placeholder","variable"],style:{color:"#93abdc"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#896724"}}]},O={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]},N={plain:{color:"#d6deeb",backgroundColor:"#011627"},styles:[{types:["changed"],style:{color:"rgb(162, 191, 252)",fontStyle:"italic"}},{types:["deleted"],style:{color:"rgba(239, 83, 80, 0.56)",fontStyle:"italic"}},{types:["inserted","attr-name"],style:{color:"rgb(173, 219, 103)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(99, 119, 119)",fontStyle:"italic"}},{types:["string","url"],style:{color:"rgb(173, 219, 103)"}},{types:["variable"],style:{color:"rgb(214, 222, 235)"}},{types:["number"],style:{color:"rgb(247, 140, 108)"}},{types:["builtin","char","constant","function"],style:{color:"rgb(130, 170, 255)"}},{types:["punctuation"],style:{color:"rgb(199, 146, 234)"}},{types:["selector","doctype"],style:{color:"rgb(199, 146, 234)",fontStyle:"italic"}},{types:["class-name"],style:{color:"rgb(255, 203, 139)"}},{types:["tag","operator","keyword"],style:{color:"rgb(127, 219, 202)"}},{types:["boolean"],style:{color:"rgb(255, 88, 116)"}},{types:["property"],style:{color:"rgb(128, 203, 196)"}},{types:["namespace"],style:{color:"rgb(178, 204, 214)"}}]},R={plain:{color:"#403f53",backgroundColor:"#FBFBFB"},styles:[{types:["changed"],style:{color:"rgb(162, 191, 252)",fontStyle:"italic"}},{types:["deleted"],style:{color:"rgba(239, 83, 80, 0.56)",fontStyle:"italic"}},{types:["inserted","attr-name"],style:{color:"rgb(72, 118, 214)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(152, 159, 177)",fontStyle:"italic"}},{types:["string","builtin","char","constant","url"],style:{color:"rgb(72, 118, 214)"}},{types:["variable"],style:{color:"rgb(201, 103, 101)"}},{types:["number"],style:{color:"rgb(170, 9, 130)"}},{types:["punctuation"],style:{color:"rgb(153, 76, 195)"}},{types:["function","selector","doctype"],style:{color:"rgb(153, 76, 195)",fontStyle:"italic"}},{types:["class-name"],style:{color:"rgb(17, 17, 17)"}},{types:["tag"],style:{color:"rgb(153, 76, 195)"}},{types:["operator","property","keyword","namespace"],style:{color:"rgb(12, 150, 155)"}},{types:["boolean"],style:{color:"rgb(188, 84, 84)"}}]},A="#c5a5c5",L="#8dc891",D={plain:{backgroundColor:"#282c34",color:"#ffffff"},styles:[{types:["attr-name"],style:{color:A}},{types:["attr-value"],style:{color:L}},{types:["comment","block-comment","prolog","doctype","cdata","shebang"],style:{color:"#999999"}},{types:["property","number","function-name","constant","symbol","deleted"],style:{color:"#5a9bcf"}},{types:["boolean"],style:{color:"#ff8b50"}},{types:["tag"],style:{color:"#fc929e"}},{types:["string"],style:{color:L}},{types:["punctuation"],style:{color:L}},{types:["selector","char","builtin","inserted"],style:{color:"#D8DEE9"}},{types:["function"],style:{color:"#79b6f2"}},{types:["operator","entity","url","variable"],style:{color:"#d7deea"}},{types:["keyword"],style:{color:A}},{types:["atrule","class-name"],style:{color:"#FAC863"}},{types:["important"],style:{fontWeight:"400"}},{types:["bold"],style:{fontWeight:"bold"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}}]},I={plain:{color:"#f8f8f2",backgroundColor:"#272822"},styles:[{types:["changed"],style:{color:"rgb(162, 191, 252)",fontStyle:"italic"}},{types:["deleted"],style:{color:"#f92672",fontStyle:"italic"}},{types:["inserted"],style:{color:"rgb(173, 219, 103)",fontStyle:"italic"}},{types:["comment"],style:{color:"#8292a2",fontStyle:"italic"}},{types:["string","url"],style:{color:"#a6e22e"}},{types:["variable"],style:{color:"#f8f8f2"}},{types:["number"],style:{color:"#ae81ff"}},{types:["builtin","char","constant","function","class-name"],style:{color:"#e6db74"}},{types:["punctuation"],style:{color:"#f8f8f2"}},{types:["selector","doctype"],style:{color:"#a6e22e",fontStyle:"italic"}},{types:["tag","operator","keyword"],style:{color:"#66d9ef"}},{types:["boolean"],style:{color:"#ae81ff"}},{types:["namespace"],style:{color:"rgb(178, 204, 214)",opacity:.7}},{types:["tag","property"],style:{color:"#f92672"}},{types:["attr-name"],style:{color:"#a6e22e !important"}},{types:["doctype"],style:{color:"#8292a2"}},{types:["rule"],style:{color:"#e6db74"}}]},M={plain:{color:"#bfc7d5",backgroundColor:"#292d3e"},styles:[{types:["comment"],style:{color:"rgb(105, 112, 152)",fontStyle:"italic"}},{types:["string","inserted"],style:{color:"rgb(195, 232, 141)"}},{types:["number"],style:{color:"rgb(247, 140, 108)"}},{types:["builtin","char","constant","function"],style:{color:"rgb(130, 170, 255)"}},{types:["punctuation","selector"],style:{color:"rgb(199, 146, 234)"}},{types:["variable"],style:{color:"rgb(191, 199, 213)"}},{types:["class-name","attr-name"],style:{color:"rgb(255, 203, 107)"}},{types:["tag","deleted"],style:{color:"rgb(255, 85, 114)"}},{types:["operator"],style:{color:"rgb(137, 221, 255)"}},{types:["boolean"],style:{color:"rgb(255, 88, 116)"}},{types:["keyword"],style:{fontStyle:"italic"}},{types:["doctype"],style:{color:"rgb(199, 146, 234)",fontStyle:"italic"}},{types:["namespace"],style:{color:"rgb(178, 204, 214)"}},{types:["url"],style:{color:"rgb(221, 221, 221)"}}]},F={plain:{color:"#9EFEFF",backgroundColor:"#2D2A55"},styles:[{types:["changed"],style:{color:"rgb(255, 238, 128)"}},{types:["deleted"],style:{color:"rgba(239, 83, 80, 0.56)"}},{types:["inserted"],style:{color:"rgb(173, 219, 103)"}},{types:["comment"],style:{color:"rgb(179, 98, 255)",fontStyle:"italic"}},{types:["punctuation"],style:{color:"rgb(255, 255, 255)"}},{types:["constant"],style:{color:"rgb(255, 98, 140)"}},{types:["string","url"],style:{color:"rgb(165, 255, 144)"}},{types:["variable"],style:{color:"rgb(255, 238, 128)"}},{types:["number","boolean"],style:{color:"rgb(255, 98, 140)"}},{types:["attr-name"],style:{color:"rgb(255, 180, 84)"}},{types:["keyword","operator","property","namespace","tag","selector","doctype"],style:{color:"rgb(255, 157, 0)"}},{types:["builtin","char","constant","function","class-name"],style:{color:"rgb(250, 208, 0)"}}]},z={plain:{backgroundColor:"linear-gradient(to bottom, #2a2139 75%, #34294f)",backgroundImage:"#34294f",color:"#f92aad",textShadow:"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3"},styles:[{types:["comment","block-comment","prolog","doctype","cdata"],style:{color:"#495495",fontStyle:"italic"}},{types:["punctuation"],style:{color:"#ccc"}},{types:["tag","attr-name","namespace","number","unit","hexcode","deleted"],style:{color:"#e2777a"}},{types:["property","selector"],style:{color:"#72f1b8",textShadow:"0 0 2px #100c0f, 0 0 10px #257c5575, 0 0 35px #21272475"}},{types:["function-name"],style:{color:"#6196cc"}},{types:["boolean","selector-id","function"],style:{color:"#fdfdfd",textShadow:"0 0 2px #001716, 0 0 3px #03edf975, 0 0 5px #03edf975, 0 0 8px #03edf975"}},{types:["class-name","maybe-class-name","builtin"],style:{color:"#fff5f6",textShadow:"0 0 2px #000, 0 0 10px #fc1f2c75, 0 0 5px #fc1f2c75, 0 0 25px #fc1f2c75"}},{types:["constant","symbol"],style:{color:"#f92aad",textShadow:"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3"}},{types:["important","atrule","keyword","selector-class"],style:{color:"#f4eee4",textShadow:"0 0 2px #393a33, 0 0 8px #f39f0575, 0 0 2px #f39f0575"}},{types:["string","char","attr-value","regex","variable"],style:{color:"#f87c32"}},{types:["parameter"],style:{fontStyle:"italic"}},{types:["entity","url"],style:{color:"#67cdcc"}},{types:["operator"],style:{color:"ffffffee"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["entity"],style:{cursor:"help"}},{types:["inserted"],style:{color:"green"}}]},U={plain:{color:"#282a2e",backgroundColor:"#ffffff"},styles:[{types:["comment"],style:{color:"rgb(197, 200, 198)"}},{types:["string","number","builtin","variable"],style:{color:"rgb(150, 152, 150)"}},{types:["class-name","function","tag","attr-name"],style:{color:"rgb(40, 42, 46)"}}]},B={plain:{color:"#9CDCFE",backgroundColor:"#1E1E1E"},styles:[{types:["prolog"],style:{color:"rgb(0, 0, 128)"}},{types:["comment"],style:{color:"rgb(106, 153, 85)"}},{types:["builtin","changed","keyword","interpolation-punctuation"],style:{color:"rgb(86, 156, 214)"}},{types:["number","inserted"],style:{color:"rgb(181, 206, 168)"}},{types:["constant"],style:{color:"rgb(100, 102, 149)"}},{types:["attr-name","variable"],style:{color:"rgb(156, 220, 254)"}},{types:["deleted","string","attr-value","template-punctuation"],style:{color:"rgb(206, 145, 120)"}},{types:["selector"],style:{color:"rgb(215, 186, 125)"}},{types:["tag"],style:{color:"rgb(78, 201, 176)"}},{types:["tag"],languages:["markup"],style:{color:"rgb(86, 156, 214)"}},{types:["punctuation","operator"],style:{color:"rgb(212, 212, 212)"}},{types:["punctuation"],languages:["markup"],style:{color:"#808080"}},{types:["function"],style:{color:"rgb(220, 220, 170)"}},{types:["class-name"],style:{color:"rgb(78, 201, 176)"}},{types:["char"],style:{color:"rgb(209, 105, 105)"}}]},q={plain:{color:"#000000",backgroundColor:"#ffffff"},styles:[{types:["comment"],style:{color:"rgb(0, 128, 0)"}},{types:["builtin"],style:{color:"rgb(0, 112, 193)"}},{types:["number","variable","inserted"],style:{color:"rgb(9, 134, 88)"}},{types:["operator"],style:{color:"rgb(0, 0, 0)"}},{types:["constant","char"],style:{color:"rgb(129, 31, 63)"}},{types:["tag"],style:{color:"rgb(128, 0, 0)"}},{types:["attr-name"],style:{color:"rgb(255, 0, 0)"}},{types:["deleted","string"],style:{color:"rgb(163, 21, 21)"}},{types:["changed","punctuation"],style:{color:"rgb(4, 81, 165)"}},{types:["function","keyword"],style:{color:"rgb(0, 0, 255)"}},{types:["class-name"],style:{color:"rgb(38, 127, 153)"}}]},H={plain:{color:"#f8fafc",backgroundColor:"#011627"},styles:[{types:["prolog"],style:{color:"#000080"}},{types:["comment"],style:{color:"#6A9955"}},{types:["builtin","changed","keyword","interpolation-punctuation"],style:{color:"#569CD6"}},{types:["number","inserted"],style:{color:"#B5CEA8"}},{types:["constant"],style:{color:"#f8fafc"}},{types:["attr-name","variable"],style:{color:"#9CDCFE"}},{types:["deleted","string","attr-value","template-punctuation"],style:{color:"#cbd5e1"}},{types:["selector"],style:{color:"#D7BA7D"}},{types:["tag"],style:{color:"#0ea5e9"}},{types:["tag"],languages:["markup"],style:{color:"#0ea5e9"}},{types:["punctuation","operator"],style:{color:"#D4D4D4"}},{types:["punctuation"],languages:["markup"],style:{color:"#808080"}},{types:["function"],style:{color:"#7dd3fc"}},{types:["class-name"],style:{color:"#0ea5e9"}},{types:["char"],style:{color:"#D16969"}}]},V={plain:{color:"#0f172a",backgroundColor:"#f1f5f9"},styles:[{types:["prolog"],style:{color:"#000080"}},{types:["comment"],style:{color:"#6A9955"}},{types:["builtin","changed","keyword","interpolation-punctuation"],style:{color:"#0c4a6e"}},{types:["number","inserted"],style:{color:"#B5CEA8"}},{types:["constant"],style:{color:"#0f172a"}},{types:["attr-name","variable"],style:{color:"#0c4a6e"}},{types:["deleted","string","attr-value","template-punctuation"],style:{color:"#64748b"}},{types:["selector"],style:{color:"#D7BA7D"}},{types:["tag"],style:{color:"#0ea5e9"}},{types:["tag"],languages:["markup"],style:{color:"#0ea5e9"}},{types:["punctuation","operator"],style:{color:"#475569"}},{types:["punctuation"],languages:["markup"],style:{color:"#808080"}},{types:["function"],style:{color:"#0e7490"}},{types:["class-name"],style:{color:"#0ea5e9"}},{types:["char"],style:{color:"#D16969"}}]},Z={plain:{backgroundColor:"hsl(220, 13%, 18%)",color:"hsl(220, 14%, 71%)",textShadow:"0 1px rgba(0, 0, 0, 0.3)"},styles:[{types:["comment","prolog","cdata"],style:{color:"hsl(220, 10%, 40%)"}},{types:["doctype","punctuation","entity"],style:{color:"hsl(220, 14%, 71%)"}},{types:["attr-name","class-name","maybe-class-name","boolean","constant","number","atrule"],style:{color:"hsl(29, 54%, 61%)"}},{types:["keyword"],style:{color:"hsl(286, 60%, 67%)"}},{types:["property","tag","symbol","deleted","important"],style:{color:"hsl(355, 65%, 65%)"}},{types:["selector","string","char","builtin","inserted","regex","attr-value"],style:{color:"hsl(95, 38%, 62%)"}},{types:["variable","operator","function"],style:{color:"hsl(207, 82%, 66%)"}},{types:["url"],style:{color:"hsl(187, 47%, 55%)"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"hsl(220, 14%, 71%)"}}]},W={plain:{backgroundColor:"hsl(230, 1%, 98%)",color:"hsl(230, 8%, 24%)"},styles:[{types:["comment","prolog","cdata"],style:{color:"hsl(230, 4%, 64%)"}},{types:["doctype","punctuation","entity"],style:{color:"hsl(230, 8%, 24%)"}},{types:["attr-name","class-name","boolean","constant","number","atrule"],style:{color:"hsl(35, 99%, 36%)"}},{types:["keyword"],style:{color:"hsl(301, 63%, 40%)"}},{types:["property","tag","symbol","deleted","important"],style:{color:"hsl(5, 74%, 59%)"}},{types:["selector","string","char","builtin","inserted","regex","attr-value","punctuation"],style:{color:"hsl(119, 34%, 47%)"}},{types:["variable","operator","function"],style:{color:"hsl(221, 87%, 60%)"}},{types:["url"],style:{color:"hsl(198, 99%, 37%)"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"hsl(230, 8%, 24%)"}}]},G=(e,n)=>{const{plain:t}=e,r=e.styles.reduce(((e,t)=>{const{languages:r,style:o}=t;return r&&!r.includes(n)||t.types.forEach((n=>{const t=S(S({},e[n]),o);e[n]=t})),e}),{});return r.root=t,r.plain=E(S({},t),{backgroundColor:void 0}),r},K=/\r\n|\r|\n/,J=e=>{0===e.length?e.push({types:["plain"],content:"\n",empty:!0}):1===e.length&&""===e[0].content&&(e[0].content="\n",e[0].empty=!0)},Y=(e,n)=>{const t=e.length;return t>0&&e[t-1]===n?e:e.concat(n)},Q=e=>{const n=[[]],t=[e],r=[0],o=[e.length];let a=0,i=0,s=[];const l=[s];for(;i>-1;){for(;(a=r[i]++)<o[i];){let e,c=n[i];const d=t[i][a];if("string"==typeof d?(c=i>0?c:["plain"],e=d):(c=Y(c,d.type),d.alias&&(c=Y(c,d.alias)),e=d.content),"string"!=typeof e){i++,n.push(c),t.push(e),r.push(0),o.push(e.length);continue}const u=e.split(K),p=u.length;s.push({types:c,content:u[0]});for(let n=1;n<p;n++)J(s),l.push(s=[]),s.push({types:c,content:u[n]})}i--,n.pop(),t.pop(),r.pop(),o.pop()}return J(s),l},X=({children:e,language:n,code:t,theme:r,prism:o})=>{const a=n.toLowerCase(),i=((e,n)=>{const[t,r]=(0,d.useState)(G(n,e)),o=(0,d.useRef)(),a=(0,d.useRef)();return(0,d.useEffect)((()=>{n===o.current&&e===a.current||(o.current=n,a.current=e,r(G(n,e)))}),[e,n]),t})(a,r),s=(e=>(0,d.useCallback)((n=>{var t=n,{className:r,style:o,line:a}=t,i=P(t,["className","style","line"]);const s=E(S({},i),{className:(0,u.Z)("token-line",r)});return"object"==typeof e&&"plain"in e&&(s.style=e.plain),"object"==typeof o&&(s.style=S(S({},s.style||{}),o)),s}),[e]))(i),l=(e=>{const n=(0,d.useCallback)((({types:n,empty:t})=>{if(null!=e)return 1===n.length&&"plain"===n[0]?null!=t?{display:"inline-block"}:void 0:1===n.length&&null!=t?e[n[0]]:Object.assign(null!=t?{display:"inline-block"}:{},...n.map((n=>e[n])))}),[e]);return(0,d.useCallback)((e=>{var t=e,{token:r,className:o,style:a}=t,i=P(t,["token","className","style"]);const s=E(S({},i),{className:(0,u.Z)("token",...r.types,o),children:r.content,style:n(r)});return null!=a&&(s.style=S(S({},s.style||{}),a)),s}),[n])})(i),c=(({prism:e,code:n,grammar:t,language:r})=>{const o=(0,d.useRef)(e);return(0,d.useMemo)((()=>{if(null==t)return Q([n]);const e={code:n,grammar:t,language:r,tokens:[]};return o.current.hooks.run("before-tokenize",e),e.tokens=o.current.tokenize(n,t),o.current.hooks.run("after-tokenize",e),Q(e.tokens)}),[n,t,r])})({prism:o,language:a,code:t,grammar:o.languages[a]});return e({tokens:c,className:`prism-code language-${a}`,style:null!=i?i.root:{},getLineProps:s,getTokenProps:l})},ee=e=>(0,d.createElement)(X,E(S({},e),{prism:e.prism||_,theme:e.theme||B,code:e.code,language:e.language}))},10362:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=!0,o="Invariant failed";function a(e,n){if(!e){if(r)throw new Error(o);var t="function"==typeof n?n():n,a=t?"".concat(o,": ").concat(t):o;throw new Error(a)}}},36809:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>r});const r={title:"ethdebug format",tagline:"Debugging data format for smart contracts",favicon:"img/favicon.ico",url:"https://ethdebug.github.io",baseUrl:"/format/",organizationName:"ethdebug",projectName:"format",onBrokenLinks:"throw",onBrokenMarkdownLinks:"warn",i18n:{defaultLocale:"en",locales:["en"],path:"i18n",localeConfigs:{}},themes:[["docusaurus-json-schema-plugin",{}],"@saucelabs/theme-github-codeblock"],plugins:[null,["./plugins/project-code-plugin.ts",{packages:{"@ethdebug/pointers":{tsConfigFilePath:"/home/runner/work/format/format/packages/pointers/tsconfig.json"}}}],["@docusaurus/plugin-content-docs",{id:"spec",path:"spec",routeBasePath:"spec",sidebarPath:"./sidebars.ts",editUrl:"https://github.com/ethdebug/format/tree/main/packages/web"}]],presets:[["classic",{docs:{sidebarPath:"./sidebars.ts",editUrl:"https://github.com/ethdebug/format/tree/main/packages/web"},theme:{customCss:"./src/css/custom.css"}}]],themeConfig:{navbar:{title:"ethdebug format",logo:{alt:"ethdebug logo",src:"img/logo.svg"},items:[{type:"docSidebar",sidebarId:"docsSidebar",position:"left",label:"Documentation"},{to:"/spec/overview",label:"Specification",position:"left",activeBaseRegex:"/spec/"},{to:"/status",label:"\u26a0\ufe0f INCOMPLETE DRAFT \u26a0\ufe0f",className:"draft-warning",position:"right"},{href:"https://github.com/ethdebug/format",label:"GitHub",position:"right"}],hideOnScroll:!1},footer:{style:"dark",links:[{title:"Docs",items:[{label:"Project overview",to:"/docs/overview"},{label:"Known challenges",to:"/docs/known-challenges"}]},{title:"Spec",items:[{label:"Specification overview",to:"/spec/overview"}]},{title:"Community",items:[{label:"Matrix.chat",href:"https://matrix.to/#/#ethdebug:matrix.org"},{label:"Twitter",href:"https://twitter.com/ethdebug"},{label:"GitHub",href:"https://github.com/ethdebug/format"}]}],copyright:"Copyright \xa9 2025 by ethdebug contributors. Built with Docusaurus."},prism:{theme:{plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]},darkTheme:{plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]},additionalLanguages:["json"],magicComments:[{className:"theme-code-block-highlighted-line",line:"highlight-next-line",block:{start:"highlight-start",end:"highlight-end"}}]},colorMode:{defaultMode:"light",disableSwitch:!1,respectPrefersColorScheme:!1},docs:{versionPersistence:"localStorage",sidebar:{hideable:!1,autoCollapseCategories:!1}},metadata:[],tableOfContents:{minHeadingLevel:2,maxHeadingLevel:3}},baseUrlIssueBanner:!0,future:{experimental_storage:{type:"localStorage",namespace:!1},experimental_router:"browser"},onBrokenAnchors:"warn",onDuplicateRoutes:"warn",staticDirectories:["static"],customFields:{},scripts:[],headTags:[],stylesheets:[],clientModules:[],titleDelimiter:"|",noIndex:!1,markdown:{format:"mdx",mermaid:!1,mdx1Compat:{comments:!0,admonitions:!0,headingIds:!0},anchors:{maintainCase:!1}}}},57529:e=>{"use strict";e.exports={}},16887:e=>{"use strict";e.exports=JSON.parse('{"/format/home/-8f8":{"__comp":"c3e4b2a1","__context":{"plugin":"a7456010"},"config":"5e9f5e1a"},"/format/status-d6d":{"__comp":"1f391b9e","__context":{"plugin":"a7456010"},"content":"e856c143"},"/format/docs-be4":{"__comp":"5e95c892","__context":{"plugin":"aba21aa0"}},"/format/docs-267":{"__comp":"a7bd4aaa","__props":"d3f864f6"},"/format/docs-68e":{"__comp":"a94703ab"},"/format/docs/category/prototype-sketches-809":{"__comp":"14eb3368","__props":"2fe7c366"},"/format/docs/goals-0bb":{"__comp":"17896441","content":"06d87cbd"},"/format/docs/implementation-guides/-66d":{"__comp":"17896441","content":"ddfabb78"},"/format/docs/implementation-guides/pointers/-5f2":{"__comp":"17896441","content":"dcaebccf"},"/format/docs/implementation-guides/pointers/dereference-logic/-cb8":{"__comp":"17896441","content":"19c068a5"},"/format/docs/implementation-guides/pointers/dereference-logic/generating-regions-8e9":{"__comp":"17896441","content":"d37c0134"},"/format/docs/implementation-guides/pointers/dereference-logic/making-regions-concrete-1e7":{"__comp":"17896441","content":"8aa384a9"},"/format/docs/implementation-guides/pointers/evaluating-expressions-ed9":{"__comp":"17896441","content":"ce1d6aaa"},"/format/docs/implementation-guides/pointers/reading-from-regions-109":{"__comp":"17896441","content":"a6fccf34"},"/format/docs/implementation-guides/pointers/testing/-5cd":{"__comp":"17896441","content":"e793cb8b"},"/format/docs/implementation-guides/pointers/testing/blockchain-simulation-950":{"__comp":"17896441","content":"3c31ec3b"},"/format/docs/implementation-guides/pointers/testing/compilation-07c":{"__comp":"17896441","content":"b70fd545"},"/format/docs/implementation-guides/pointers/testing/deployment-9b5":{"__comp":"17896441","content":"00be781a"},"/format/docs/implementation-guides/pointers/testing/example-pointers-4cc":{"__comp":"17896441","content":"805f8f48"},"/format/docs/implementation-guides/pointers/testing/jest-1f4":{"__comp":"17896441","content":"24164d9f"},"/format/docs/implementation-guides/pointers/testing/machine-observation-a54":{"__comp":"17896441","content":"f577767d"},"/format/docs/implementation-guides/pointers/testing/test-cases/-834":{"__comp":"17896441","content":"658aa8be"},"/format/docs/implementation-guides/pointers/testing/test-cases/string-storage-2e2":{"__comp":"17896441","content":"96cb052f"},"/format/docs/implementation-guides/pointers/testing/test-cases/struct-storage-5d7":{"__comp":"17896441","content":"4f48a76f"},"/format/docs/implementation-guides/pointers/testing/test-cases/uint256-array-memory-fc6":{"__comp":"17896441","content":"27fc136d"},"/format/docs/implementation-guides/pointers/types/-e07":{"__comp":"17896441","content":"cb7b1c3b"},"/format/docs/implementation-guides/pointers/types/cursors-6a3":{"__comp":"17896441","content":"6dcd11e3"},"/format/docs/implementation-guides/pointers/types/data-and-machines-34a":{"__comp":"17896441","content":"dc0c7504"},"/format/docs/implementation-guides/pointers/types/pointer-types-fee":{"__comp":"17896441","content":"3bef66bf"},"/format/docs/known-challenges-5aa":{"__comp":"17896441","content":"9e15fc25"},"/format/docs/overview-ff5":{"__comp":"17896441","content":"18891827"},"/format/docs/sketches/layout-926":{"__comp":"17896441","content":"2d5baa33"},"/format/docs/sketches/prototype-9b3":{"__comp":"17896441","content":"0098a75a"},"/format/spec-57c":{"__comp":"5e95c892","__context":{"plugin":"dfd51a51"}},"/format/spec-7be":{"__comp":"a7bd4aaa","__props":"65b9696e"},"/format/spec-aff":{"__comp":"a94703ab"},"/format/spec/category/complex-types-8c2":{"__comp":"14eb3368","__props":"2d54960a"},"/format/spec/category/elementary-types-ed4":{"__comp":"14eb3368","__props":"6656ad10"},"/format/spec/data/hex-e36":{"__comp":"17896441","content":"ca0d25b7"},"/format/spec/data/overview-95a":{"__comp":"17896441","content":"a9779a33"},"/format/spec/data/unsigned-125":{"__comp":"17896441","content":"ede070c3"},"/format/spec/materials/compilation-d27":{"__comp":"17896441","content":"c26eb700"},"/format/spec/materials/id-672":{"__comp":"17896441","content":"73e8c510"},"/format/spec/materials/overview-1ec":{"__comp":"17896441","content":"ad7f7207"},"/format/spec/materials/source-73e":{"__comp":"17896441","content":"5c90228f"},"/format/spec/materials/source-range-1d1":{"__comp":"17896441","content":"c73c1d3a"},"/format/spec/overview-d74":{"__comp":"17896441","content":"d6a63adc"},"/format/spec/pointer/-ac2":{"__comp":"17896441","content":"0c6b334b"},"/format/spec/pointer/collection/-204":{"__comp":"17896441","content":"324b62c5"},"/format/spec/pointer/collection/conditional-f89":{"__comp":"17896441","content":"9c6e1aee"},"/format/spec/pointer/collection/group-60f":{"__comp":"17896441","content":"e8328cbe"},"/format/spec/pointer/collection/list-e12":{"__comp":"17896441","content":"6397ae1b"},"/format/spec/pointer/collection/scope-6af":{"__comp":"17896441","content":"6bb5505e"},"/format/spec/pointer/concepts-4f7":{"__comp":"17896441","content":"06923f2b"},"/format/spec/pointer/expression-38a":{"__comp":"17896441","content":"ee3e0fff"},"/format/spec/pointer/overview-20e":{"__comp":"17896441","content":"60b8d43b"},"/format/spec/pointer/region/-a75":{"__comp":"17896441","content":"57805cd5"},"/format/spec/pointer/region/base-2ed":{"__comp":"17896441","content":"41f6ea55"},"/format/spec/pointer/region/location/calldata-352":{"__comp":"17896441","content":"34a1fa87"},"/format/spec/pointer/region/location/code-bde":{"__comp":"17896441","content":"5fb36c82"},"/format/spec/pointer/region/location/memory-d08":{"__comp":"17896441","content":"b702b8d4"},"/format/spec/pointer/region/location/returndata-424":{"__comp":"17896441","content":"ccf56d1d"},"/format/spec/pointer/region/location/stack-08f":{"__comp":"17896441","content":"4ffa8edd"},"/format/spec/pointer/region/location/storage-a40":{"__comp":"17896441","content":"06f6442f"},"/format/spec/pointer/region/location/transient-3e8":{"__comp":"17896441","content":"7168108a"},"/format/spec/pointer/region/scheme/segment-acf":{"__comp":"17896441","content":"47f40ad3"},"/format/spec/pointer/region/scheme/slice-481":{"__comp":"17896441","content":"55366030"},"/format/spec/pointer/template-fec":{"__comp":"17896441","content":"9999236a"},"/format/spec/program/-0a6":{"__comp":"17896441","content":"468cb0dd"},"/format/spec/program/concepts-fb8":{"__comp":"17896441","content":"9c15981d"},"/format/spec/program/context/-223":{"__comp":"17896441","content":"a36bb8b3"},"/format/spec/program/context/code-782":{"__comp":"17896441","content":"b8b25df5"},"/format/spec/program/context/variables-47f":{"__comp":"17896441","content":"3d06257c"},"/format/spec/program/instruction-a58":{"__comp":"17896441","content":"ac92a050"},"/format/spec/program/overview-876":{"__comp":"17896441","content":"ee64d9a0"},"/format/spec/type/-ff8":{"__comp":"17896441","content":"6e8ff3aa"},"/format/spec/type/base-663":{"__comp":"17896441","content":"1917520d"},"/format/spec/type/complex/alias-4d3":{"__comp":"17896441","content":"26adb6ed"},"/format/spec/type/complex/array-3bd":{"__comp":"17896441","content":"39033cdf"},"/format/spec/type/complex/function-51d":{"__comp":"17896441","content":"288a3aad"},"/format/spec/type/complex/mapping-23e":{"__comp":"17896441","content":"b27771bd"},"/format/spec/type/complex/struct-75b":{"__comp":"17896441","content":"9ac2b418"},"/format/spec/type/complex/tuple-c0b":{"__comp":"17896441","content":"1154c93e"},"/format/spec/type/concepts-e7a":{"__comp":"17896441","content":"8e037750"},"/format/spec/type/elementary/address-5cc":{"__comp":"17896441","content":"26210d4e"},"/format/spec/type/elementary/bool-fc0":{"__comp":"17896441","content":"f210e6d3"},"/format/spec/type/elementary/bytes-2b6":{"__comp":"17896441","content":"0d3f9d17"},"/format/spec/type/elementary/contract-571":{"__comp":"17896441","content":"be5c8d03"},"/format/spec/type/elementary/enum-cdd":{"__comp":"17896441","content":"aeecf7cf"},"/format/spec/type/elementary/fixed-3d7":{"__comp":"17896441","content":"87bcd65e"},"/format/spec/type/elementary/int-09e":{"__comp":"17896441","content":"74f0bff4"},"/format/spec/type/elementary/string-c22":{"__comp":"17896441","content":"50fa7aa7"},"/format/spec/type/elementary/ufixed-c61":{"__comp":"17896441","content":"f2745fbe"},"/format/spec/type/elementary/uint-6ea":{"__comp":"17896441","content":"c47862a6"},"/format/spec/type/overview-101":{"__comp":"17896441","content":"5fa83de1"},"/format/-610":{"__comp":"1df93b7f","__context":{"plugin":"a7456010"},"config":"5e9f5e1a"}}')}},e=>{e.O(0,[532],(()=>{return n=2062,e(e.s=n);var n}));e.O()}]);
(self.webpackChunk_ethdebug_format_web=self.webpackChunk_ethdebug_format_web||[]).push([[8908],{25499:(e,t,s)=>{"use strict";s.r(t),s.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>f,frontMatter:()=>d,metadata:()=>h,toc:()=>p});var r=s(52322),n=s(45392),i=s(61376),o=s(84560),a=s.n(o),c=s(99372);function l(e){let{pointerQuery:t}=e;const{schema:s}=(0,c.describeSchema)({schema:{id:"schema:ethdebug/format/pointer"}}),[n]=[...s.examples?.entries()||[]].find((e=>{let[s,r]=e;return JSON.stringify(r).includes(t)}))||[];if(void 0===n)throw new Error("Could not find example in pointer schema");const{yaml:i}=(0,c.describeSchema)({schema:{id:"schema:ethdebug/format/pointer"},pointer:`#/examples/${n}`});return(0,r.jsx)(a(),{language:"yaml",children:i})}const d={sidebar_position:7},u="Test cases",h={id:"implementation-guides/pointers/testing/test-cases",title:"Test cases",description:"This reference implementation currently defines the following integration test",source:"@site/docs/implementation-guides/pointers/testing/test-cases.mdx",sourceDirName:"implementation-guides/pointers/testing",slug:"/implementation-guides/pointers/testing/test-cases",permalink:"/format/docs/implementation-guides/pointers/testing/test-cases",draft:!1,unlisted:!1,editUrl:"https://github.com/ethdebug/format/tree/main/packages/web/docs/implementation-guides/pointers/testing/test-cases.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Observing the machine",permalink:"/format/docs/implementation-guides/pointers/testing/machine-observation"},next:{title:"Hooking up Jest",permalink:"/format/docs/implementation-guides/pointers/testing/jest"}},m={},p=[{value:"Structs in storage",id:"struct-storage",level:2},{value:"Test source",id:"test-source",level:3},{value:"Tested pointer",id:"tested-pointer",level:3},{value:"Storage strings",id:"string-storage",level:2},{value:"Test source",id:"test-source-1",level:3},{value:"Tested pointer",id:"tested-pointer-1",level:3},{value:"Memory arrays of word-sized items",id:"uint256-array-memory",level:2},{value:"Test source",id:"test-source-2",level:3},{value:"Tested pointer",id:"tested-pointer-2",level:3}];function g(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"test-cases",children:"Test cases"}),"\n",(0,r.jsx)(t.p,{children:"This reference implementation currently defines the following integration test\ncases."}),"\n",(0,r.jsxs)(t.p,{children:["Test cases are aggregated into the ",(0,r.jsx)(t.code,{children:"observeTraceTests"})," variable:"]}),"\n",(0,r.jsx)(i.Z,{packageName:"@ethdebug/pointers",sourcePath:"src/test-cases.ts",extract:e=>e.getVariableStatement("observeTraceTests"),links:{structStorageTest:"#struct-storage",stringStorageTest:"#string-storage",uint256ArrayMemoryTest:"#uint256-array-memory"}}),"\n",(0,r.jsxs)(t.p,{children:["This variable will be used to generate automated tests dynamically, as will\nbe described on the\n",(0,r.jsx)(t.a,{href:"/docs/implementation-guides/pointers/testing/jest",children:"next page"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"struct-storage",children:"Structs in storage"}),"\n",(0,r.jsxs)(t.p,{children:["Solidity tightly packs struct storage words starting from the right-hand side.\nThis test ensures that relative offsets are computed properly for a struct that\ndefines a few small fields (",(0,r.jsx)(t.code,{children:"struct Record { uint8 x; uint8 y; bytes4 salt; }"}),")."]}),"\n",(0,r.jsx)(t.h3,{id:"test-source",children:"Test source"}),"\n",(0,r.jsx)(i.Z,{packageName:"@ethdebug/pointers",sourcePath:"src/test-cases.ts",extract:e=>e.getVariableStatement("structStorageTest")}),"\n",(0,r.jsx)(t.h3,{id:"tested-pointer",children:"Tested pointer"}),"\n",(0,r.jsx)(l,{pointerQuery:"struct-storage-contract-variable-slot"}),"\n",(0,r.jsx)(t.h2,{id:"string-storage",children:"Storage strings"}),"\n",(0,r.jsxs)(t.p,{children:["Representing a Solidity ",(0,r.jsx)(t.code,{children:"string storage"})," using an ",(0,r.jsx)(t.strong,{children:"ethdebug/format/pointer"}),"\nrequires the use of conditional logic to identify the one or more regions that\ncorrespond to raw UTF-8 Solidity string data. The ",(0,r.jsx)(t.code,{children:"dereference()"})," function\nshould behave as expected for such a pointer and observe the changing string\nvalue."]}),"\n",(0,r.jsx)(t.h3,{id:"test-source-1",children:"Test source"}),"\n",(0,r.jsx)(i.Z,{packageName:"@ethdebug/pointers",sourcePath:"src/test-cases.ts",extract:e=>e.getVariableStatement("stringStorageTest")}),"\n",(0,r.jsx)(t.h3,{id:"tested-pointer-1",children:"Tested pointer"}),"\n",(0,r.jsx)(l,{pointerQuery:"string-storage-contract-variable-slot"}),"\n",(0,r.jsx)(t.h2,{id:"uint256-array-memory",children:"Memory arrays of word-sized items"}),"\n",(0,r.jsx)(t.p,{children:"Memory arrays are primarily referenced using stack-located memory offset values,\nand so this test case ensures that stack slot indexes are properly adjusted over\nthe course of the transaction."}),"\n",(0,r.jsx)(t.h3,{id:"test-source-2",children:"Test source"}),"\n",(0,r.jsx)(i.Z,{packageName:"@ethdebug/pointers",sourcePath:"src/test-cases.ts",extract:e=>e.getVariableStatement("uint256ArrayMemoryTest")}),"\n",(0,r.jsx)(t.h3,{id:"tested-pointer-2",children:"Tested pointer"}),"\n",(0,r.jsx)(l,{pointerQuery:"uint256-array-memory-pointer-slot"})]})}function f(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},48313:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=48313,e.exports=t},61376:(e,t,s)=>{"use strict";s.d(t,{Z:()=>p});var r=s(84560),n=s.n(r),i=s(20477),o=s(42408);var a=s(2784),c=s(27718),l=s(52322);function d(e){let{code:t,links:s,...r}=e;const i=(0,a.useRef)(null),[o,c]=(0,a.useState)(null);return(0,a.useEffect)((()=>{function e(){if(i.current){const e=i.current.querySelector("pre > code");if(e){const t=Array.from(e.childNodes).flatMap((e=>u(e,s)));c((0,l.jsx)("pre",{className:e.parentElement?.className,children:(0,l.jsx)("code",{className:e.className,children:t})}))}}}e();const t=new MutationObserver(e);return i.current&&t.observe(i.current,{childList:!0,subtree:!0}),()=>t.disconnect()}),[t,s]),o||(0,l.jsx)("div",{ref:i,children:(0,l.jsx)(n(),{...r,children:t})})}function u(e,t){return e.nodeType===Node.TEXT_NODE?function(e,t){const s=[];let r=e.textContent||"",n=0;for(const[i,o]of Object.entries(t)){let e=r.indexOf(i,n);for(;-1!==e;)e>n&&s.push(r.slice(n,e)),s.push((0,l.jsx)(c.Z,{to:o,className:"linked-code-block-link",children:i},`${i}-${e}`)),n=e+i.length,e=r.indexOf(i,n)}n<r.length&&s.push(r.slice(n));return s}(e,t):e.nodeType===Node.ELEMENT_NODE?function(e,t){const s=e.tagName.toLowerCase(),r={key:h++,className:e.className};e.style&&e.style.cssText&&(r.style=function(e){const t={};for(const s of e.split(";"))if(s){const[e,r]=s.split(":");if(e&&r){t[e.trim().replace(/-./g,(e=>e[1].toUpperCase()))]=r.trim()}}return t}(e.style.cssText));if(m.has(s))return a.createElement(s,r);const n=Array.from(e.childNodes).flatMap((e=>u(e,t)));return a.createElement(s,r,n)}(e,t):[]}let h=0;const m=new Set(["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"]);function p(e){let{packageName:t,sourcePath:s,extract:r,links:a={},...c}=e;const u=function(e){const{packages:t}=(0,o.eZ)("project-code-plugin");if(!(e in t))throw new Error(`Unknown package name ${e}`);const{sourceFiles:s}=t[e],r=new i.IKL({useInMemoryFileSystem:!0});for(const{filePath:n,text:i}of s)r.createSourceFile(n,i,{overwrite:!0});return r}(t),h=u.getSourceFileOrThrow(s),m=r?r(h,u):h,p=m.getFullText().trim(),g=!r;return Object.keys(a).length>0?(0,l.jsx)(d,{code:p,links:a,language:"typescript",...c}):(0,l.jsx)(n(),{language:"typescript",...g?{title:s,showLineNumbers:!0}:{showLineNumbers:!1},...c,children:m.getFullText().trim()})}},56699:()=>{},68379:()=>{},68382:()=>{},78867:()=>{},21212:()=>{},89854:()=>{},25800:()=>{},93037:()=>{},26996:()=>{}}]);
(self.webpackChunk_ethdebug_format_web=self.webpackChunk_ethdebug_format_web||[]).push([[5068],{18153:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=n(52322),s=n(45392),o=n(51114);const r={sidebar_position:2},a="Finding example pointers",c={id:"implementation-guides/pointers/testing/example-pointers",title:"Finding example pointers",description:"These integration tests seek to minimize the use of bespoke data whose",source:"@site/docs/implementation-guides/pointers/testing/example-pointers.mdx",sourceDirName:"implementation-guides/pointers/testing",slug:"/implementation-guides/pointers/testing/example-pointers",permalink:"/format/docs/implementation-guides/pointers/testing/example-pointers",draft:!1,unlisted:!1,editUrl:"https://github.com/ethdebug/format/tree/main/packages/web/docs/implementation-guides/pointers/testing/example-pointers.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"End-to-end testing",permalink:"/format/docs/implementation-guides/pointers/testing/"},next:{title:"Invoking the compiler",permalink:"/format/docs/implementation-guides/pointers/testing/compilation"}},l={},d=[];function p(e){const t={code:"code",h1:"h1",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"finding-example-pointers",children:"Finding example pointers"}),"\n",(0,i.jsx)(t.p,{children:"These integration tests seek to minimize the use of bespoke data whose\nrepresentations exist solely within the testing-associated code modules."}),"\n",(0,i.jsxs)(t.p,{children:["Instead of containing custom pointer objects defined inline, the integration\ntests for this reference implementation use the official pointer examples\nthat are distributed as part of the ",(0,i.jsx)(t.strong,{children:"ethdebug/format/pointer"})," schema itself."]}),"\n",(0,i.jsxs)(t.p,{children:['Since JSON Schema does not offer a means by which examples can be named (it\nonly defines a way to represent an ordered list of unlabeled example values),\nthese tests rely on searching for particular examples by their use of uniquely\nindicative string values (e.g., the "string storage" example pointer is the\nonly example to contain the string ',(0,i.jsx)(t.code,{children:'"string-storage-contract-variable-slot"'}),")."]}),"\n",(0,i.jsxs)(t.p,{children:["The logic for doing this search is captured by the ",(0,i.jsx)(t.code,{children:"findExamplePointer()"}),"\nfunction:"]}),"\n",(0,i.jsx)(o.Z,{packageName:"@ethdebug/pointers",sourcePath:"test/examples.ts",extract:e=>e.getVariableStatement("findExamplePointer")}),"\n",(0,i.jsxs)(t.p,{children:["(This function is written as an immediately-invoked inline function so as to\navoid unnecessary redundant calls to ",(0,i.jsx)(t.code,{children:"describeSchema()"}),".)"]})]})}function m(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},48313:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=48313,e.exports=t},51114:(e,t,n)=>{"use strict";n.d(t,{Z:()=>c});var i=n(84560),s=n.n(i),o=n(20477),r=n(42408);var a=n(52322);function c(e){let{packageName:t,sourcePath:n,extract:i,...c}=e;const l=function(e){const{packages:t}=(0,r.eZ)("project-code-plugin");if(!(e in t))throw new Error(`Unknown package name ${e}`);const{sourceFiles:n}=t[e],i=new o.IKL({useInMemoryFileSystem:!0});for(const{filePath:s,text:o}of n)i.createSourceFile(s,o,{overwrite:!0});return i}(t),d=l.getSourceFileOrThrow(n);if(!i)return(0,a.jsx)(s(),{title:n,language:"typescript",showLineNumbers:!0,children:d.getFullText()});const p=i(d,l);return(0,a.jsx)(s(),{language:"typescript",...c,children:p.getFullText().trim()})}},56699:()=>{},68379:()=>{},68382:()=>{},78867:()=>{},21212:()=>{},89854:()=>{},25800:()=>{},93037:()=>{},26996:()=>{}}]);